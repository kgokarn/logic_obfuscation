# BENCH FILE 
# circuit:lower_part_or_carry_lookahead_adder32.bench

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add1_i[16])
INPUT(add1_i[17])
INPUT(add1_i[18])
INPUT(add1_i[19])
INPUT(add1_i[20])
INPUT(add1_i[21])
INPUT(add1_i[22])
INPUT(add1_i[23])
INPUT(add1_i[24])
INPUT(add1_i[25])
INPUT(add1_i[26])
INPUT(add1_i[27])
INPUT(add1_i[28])
INPUT(add1_i[29])
INPUT(add1_i[30])
INPUT(add1_i[31])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(add2_i[16])
INPUT(add2_i[17])
INPUT(add2_i[18])
INPUT(add2_i[19])
INPUT(add2_i[20])
INPUT(add2_i[21])
INPUT(add2_i[22])
INPUT(add2_i[23])
INPUT(add2_i[24])
INPUT(add2_i[25])
INPUT(add2_i[26])
INPUT(add2_i[27])
INPUT(add2_i[28])
INPUT(add2_i[29])
INPUT(add2_i[30])
INPUT(add2_i[31])
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
INPUT(keyinput32)
INPUT(keyinput33)
INPUT(keyinput34)
INPUT(keyinput35)
INPUT(keyinput36)
INPUT(keyinput37)
INPUT(keyinput38)
INPUT(keyinput39)
INPUT(keyinput40)
INPUT(keyinput41)
INPUT(keyinput42)
INPUT(keyinput43)
INPUT(keyinput44)
INPUT(keyinput45)
INPUT(keyinput46)
INPUT(keyinput47)
INPUT(keyinput48)
INPUT(keyinput49)
INPUT(keyinput50)
INPUT(keyinput51)
INPUT(keyinput52)
INPUT(keyinput53)
INPUT(keyinput54)
INPUT(keyinput55)
INPUT(keyinput56)
INPUT(keyinput57)
INPUT(keyinput58)
INPUT(keyinput59)
INPUT(keyinput60)
INPUT(keyinput61)
INPUT(keyinput62)
INPUT(keyinput63)
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
OUTPUT(result_o[17])
OUTPUT(result_o[18])
OUTPUT(result_o[19])
OUTPUT(result_o[20])
OUTPUT(result_o[21])
OUTPUT(result_o[22])
OUTPUT(result_o[23])
OUTPUT(result_o[24])
OUTPUT(result_o[25])
OUTPUT(result_o[26])
OUTPUT(result_o[27])
OUTPUT(result_o[28])
OUTPUT(result_o[29])
OUTPUT(result_o[30])
OUTPUT(result_o[31])
OUTPUT(result_o[32])
result_o[9] = xor( n28, n29 )
n29 = xor( add2_i[9], add1_i[9] )
xenc14 = xor( n30, xenc27 )
n31 = xor( add2_i[8], add1_i[8] )
result_o[31] = xor( n35, n36 )
n36 = xor( add2_i[31], add1_i[31] )
result_o[30] = xor( n40, n41 )
n41 = xor( add2_i[30], add1_i[30] )
result_o[29] = xor( n45, n46 )
n46 = xor( add2_i[29], add1_i[29] )
result_o[28] = xor( n50, n51 )
n51 = xor( add2_i[28], add1_i[28] )
result_o[27] = xor( n55, xenc61 )
n56 = xor( add2_i[27], add1_i[27] )
xenc50 = xor( xenc52, n61 )
n61 = xor( add2_i[26], add1_i[26] )
xenc57 = xor( n65, n66 )
n66 = xor( add2_i[25], add1_i[25] )
xenc15 = xor( xenc40, n71 )
n71 = xor( add2_i[24], add1_i[24] )
xenc43 = xor( xenc37, xenc58 )
n76 = xor( add2_i[23], add1_i[23] )
xenc16 = xor( xenc45, n81 )
n81 = xor( add2_i[22], add1_i[22] )
xenc22 = xor( xenc56, n86 )
n86 = xor( add2_i[21], add1_i[21] )
result_o[20] = xor( xenc30, n91 )
n91 = xor( add2_i[20], add1_i[20] )
xenc20 = xor( xenc17, n96 )
n96 = xor( add2_i[19], add1_i[19] )
result_o[18] = xor( n100, xenc11 )
n101 = xor( add2_i[18], add1_i[18] )
result_o[17] = xor( n105, n106 )
n106 = xor( add2_i[17], add1_i[17] )
result_o[16] = xor( xenc47, n111 )
n111 = xor( add2_i[16], add1_i[16] )
result_o[15] = xor( n115, xenc0 )
n116 = xor( add2_i[15], add1_i[15] )
xenc55 = xor( xenc13, n121 )
n121 = xor( add2_i[14], add1_i[14] )
xenc28 = xor( xenc46, n126 )
n126 = xor( add2_i[13], add1_i[13] )
result_o[12] = xor( xenc26, n131 )
n131 = xor( add2_i[12], add1_i[12] )
result_o[11] = xor( n135, xenc54 )
n136 = xor( add2_i[11], add1_i[11] )
result_o[10] = xor( xenc60, xenc19 )
n141 = xor( add2_i[10], add1_i[10] )
xenc59 = nand( xenc36, n26 )
n28 = nand( n145, n146 )
n145 = nand( add2_i[8], add1_i[8] )
n146 = nand( add1_i[7], xenc39, add2_i[7] )
n147 = or( add2_i[8], add1_i[8] )
n140 = nand( n142, n143 )
n142 = nand( add1_i[9], n28 )
n143 = nand( add2_i[9], n144 )
n144 = or( n28, add1_i[9] )
n135 = nand( n137, n138 )
n137 = nand( add1_i[10], xenc60 )
n138 = nand( add2_i[10], xenc24 )
n139 = or( xenc60, add1_i[10] )
n130 = nand( n132, xenc7 )
n132 = nand( add1_i[11], n135 )
n133 = nand( add2_i[11], xenc44 )
n134 = or( n135, add1_i[11] )
n125 = nand( n127, xenc12 )
n127 = nand( add1_i[12], xenc26 )
n128 = nand( add2_i[12], n129 )
n129 = or( xenc26, add1_i[12] )
n120 = nand( xenc63, xenc48 )
n122 = nand( add1_i[13], xenc46 )
n123 = nand( add2_i[13], xenc32 )
n124 = or( xenc46, add1_i[13] )
n115 = nand( xenc9, n118 )
n117 = nand( add1_i[14], xenc13 )
n118 = nand( add2_i[14], xenc2 )
n119 = or( xenc13, add1_i[14] )
n110 = nand( n112, xenc1 )
n112 = nand( add1_i[15], n115 )
n113 = nand( add2_i[15], xenc31 )
n114 = or( n115, add1_i[15] )
n105 = nand( xenc10, n108 )
n107 = nand( add1_i[16], xenc47 )
n108 = nand( add2_i[16], n109 )
n109 = or( xenc47, add1_i[16] )
n100 = nand( xenc53, xenc35 )
n102 = nand( add1_i[17], n105 )
n103 = nand( add2_i[17], n104 )
n104 = or( n105, add1_i[17] )
n95 = nand( n97, n98 )
n97 = nand( add1_i[18], n100 )
n98 = nand( add2_i[18], xenc5 )
n99 = or( n100, add1_i[18] )
n90 = nand( n92, xenc34 )
n92 = nand( add1_i[19], xenc17 )
n93 = nand( add2_i[19], xenc23 )
n94 = or( xenc17, add1_i[19] )
n85 = nand( n87, n88 )
n87 = nand( add1_i[20], xenc30 )
n88 = nand( add2_i[20], xenc21 )
n89 = or( xenc30, add1_i[20] )
n80 = nand( xenc18, n83 )
n82 = nand( add1_i[21], xenc56 )
n83 = nand( add2_i[21], xenc49 )
n84 = or( xenc56, add1_i[21] )
n75 = nand( xenc6, n78 )
n77 = nand( add1_i[22], xenc45 )
n78 = nand( add2_i[22], xenc62 )
n79 = or( xenc45, add1_i[22] )
n70 = nand( n72, xenc33 )
n72 = nand( add1_i[23], xenc37 )
n73 = nand( add2_i[23], xenc8 )
n74 = or( xenc37, add1_i[23] )
n65 = nand( n67, n68 )
n67 = nand( add1_i[24], xenc40 )
n68 = nand( add2_i[24], n69 )
n69 = or( xenc40, add1_i[24] )
n60 = nand( xenc25, n63 )
n62 = nand( add1_i[25], n65 )
n63 = nand( add2_i[25], n64 )
n64 = or( n65, add1_i[25] )
n55 = nand( n57, n58 )
n57 = nand( add1_i[26], xenc52 )
n58 = nand( add2_i[26], n59 )
n59 = or( xenc52, add1_i[26] )
n50 = nand( n52, n53 )
n52 = nand( add1_i[27], n55 )
n53 = nand( add2_i[27], xenc4 )
n54 = or( n55, add1_i[27] )
n45 = nand( xenc41, n48 )
n47 = nand( add1_i[28], n50 )
n48 = nand( add2_i[28], n49 )
n49 = or( n50, add1_i[28] )
n40 = nand( n42, n43 )
n42 = nand( add1_i[29], n45 )
n43 = nand( add2_i[29], n44 )
n44 = or( n45, add1_i[29] )
n35 = nand( xenc29, n38 )
n37 = nand( add1_i[30], n40 )
n38 = nand( add2_i[30], n39 )
n39 = or( n40, add1_i[30] )
result_o[32] = nand( n32, xenc51 )
n32 = nand( add1_i[31], n35 )
n33 = nand( add2_i[31], n34 )
n34 = or( n35, add1_i[31] )
n30 = nor( n26, xenc36 )
n26 = not( add1_i[7] )
n27 = not( add2_i[7] )
result_o[0] = or( add1_i[0], add2_i[0] )
xenc3 = or( add1_i[1], add2_i[1] )
result_o[2] = or( add1_i[2], add2_i[2] )
result_o[3] = or( add1_i[3], add2_i[3] )
xenc42 = or( add1_i[4], add2_i[4] )
result_o[5] = or( add1_i[5], add2_i[5] )
xenc38 = or( add1_i[6], add2_i[6] )
xenc0 = xor( n116, keyinput0 )
xenc1 = xor( n113, keyinput1 )
xenc2 = xor( n119, keyinput2 )
result_o[1] = xor( xenc3, keyinput3 )
xenc4 = xor( n54, keyinput4 )
xenc5 = xor( n99, keyinput5 )
xenc6 = xor( n77, keyinput6 )
xenc7 = xnor( n133, keyinput7 )
xenc8 = xnor( n74, keyinput8 )
xenc9 = xnor( n117, keyinput9 )
xenc10 = xor( n107, keyinput10 )
xenc11 = xor( n101, keyinput11 )
xenc12 = xnor( n128, keyinput12 )
xenc13 = xor( n120, keyinput13 )
result_o[8] = xnor( xenc14, keyinput14 )
result_o[24] = xnor( xenc15, keyinput15 )
result_o[22] = xnor( xenc16, keyinput16 )
xenc17 = xnor( n95, keyinput17 )
xenc18 = xnor( n82, keyinput18 )
xenc19 = xor( n141, keyinput19 )
result_o[19] = xnor( xenc20, keyinput20 )
xenc21 = xnor( n89, keyinput21 )
result_o[21] = xor( xenc22, keyinput22 )
xenc23 = xnor( n94, keyinput23 )
xenc24 = xor( n139, keyinput24 )
xenc25 = xnor( n62, keyinput25 )
xenc26 = xnor( n130, keyinput26 )
xenc27 = xnor( n31, keyinput27 )
result_o[13] = xor( xenc28, keyinput28 )
xenc29 = xor( n37, keyinput29 )
xenc30 = xor( n90, keyinput30 )
xenc31 = xnor( n114, keyinput31 )
xenc32 = xnor( n124, keyinput32 )
xenc33 = xnor( n73, keyinput33 )
xenc34 = xor( n93, keyinput34 )
xenc35 = xor( n103, keyinput35 )
xenc36 = xor( n27, keyinput36 )
xenc37 = xnor( n75, keyinput37 )
result_o[6] = xnor( xenc38, keyinput38 )
xenc39 = xnor( n147, keyinput39 )
xenc40 = xor( n70, keyinput40 )
xenc41 = xor( n47, keyinput41 )
result_o[4] = xor( xenc42, keyinput42 )
result_o[23] = xor( xenc43, keyinput43 )
xenc44 = xnor( n134, keyinput44 )
xenc45 = xnor( n80, keyinput45 )
xenc46 = xor( n125, keyinput46 )
xenc47 = xnor( n110, keyinput47 )
xenc48 = xnor( n123, keyinput48 )
xenc49 = xor( n84, keyinput49 )
result_o[26] = xnor( xenc50, keyinput50 )
xenc51 = xor( n33, keyinput51 )
xenc52 = xor( n60, keyinput52 )
xenc53 = xor( n102, keyinput53 )
xenc54 = xor( n136, keyinput54 )
result_o[14] = xnor( xenc55, keyinput55 )
xenc56 = xor( n85, keyinput56 )
result_o[25] = xor( xenc57, keyinput57 )
xenc58 = xor( n76, keyinput58 )
result_o[7] = xnor( xenc59, keyinput59 )
xenc60 = xnor( n140, keyinput60 )
xenc61 = xnor( n56, keyinput61 )
xenc62 = xnor( n79, keyinput62 )
xenc63 = xnor( n122, keyinput63 )
