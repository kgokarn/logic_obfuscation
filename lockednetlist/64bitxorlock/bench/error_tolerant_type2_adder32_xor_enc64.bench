# BENCH FILE 
# circuit:error_tolerant_type2_adder32.bench

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add1_i[16])
INPUT(add1_i[17])
INPUT(add1_i[18])
INPUT(add1_i[19])
INPUT(add1_i[20])
INPUT(add1_i[21])
INPUT(add1_i[22])
INPUT(add1_i[23])
INPUT(add1_i[24])
INPUT(add1_i[25])
INPUT(add1_i[26])
INPUT(add1_i[27])
INPUT(add1_i[28])
INPUT(add1_i[29])
INPUT(add1_i[30])
INPUT(add1_i[31])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(add2_i[16])
INPUT(add2_i[17])
INPUT(add2_i[18])
INPUT(add2_i[19])
INPUT(add2_i[20])
INPUT(add2_i[21])
INPUT(add2_i[22])
INPUT(add2_i[23])
INPUT(add2_i[24])
INPUT(add2_i[25])
INPUT(add2_i[26])
INPUT(add2_i[27])
INPUT(add2_i[28])
INPUT(add2_i[29])
INPUT(add2_i[30])
INPUT(add2_i[31])
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
INPUT(keyinput32)
INPUT(keyinput33)
INPUT(keyinput34)
INPUT(keyinput35)
INPUT(keyinput36)
INPUT(keyinput37)
INPUT(keyinput38)
INPUT(keyinput39)
INPUT(keyinput40)
INPUT(keyinput41)
INPUT(keyinput42)
INPUT(keyinput43)
INPUT(keyinput44)
INPUT(keyinput45)
INPUT(keyinput46)
INPUT(keyinput47)
INPUT(keyinput48)
INPUT(keyinput49)
INPUT(keyinput50)
INPUT(keyinput51)
INPUT(keyinput52)
INPUT(keyinput53)
INPUT(keyinput54)
INPUT(keyinput55)
INPUT(keyinput56)
INPUT(keyinput57)
INPUT(keyinput58)
INPUT(keyinput59)
INPUT(keyinput60)
INPUT(keyinput61)
INPUT(keyinput62)
INPUT(keyinput63)
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
OUTPUT(result_o[17])
OUTPUT(result_o[18])
OUTPUT(result_o[19])
OUTPUT(result_o[20])
OUTPUT(result_o[21])
OUTPUT(result_o[22])
OUTPUT(result_o[23])
OUTPUT(result_o[24])
OUTPUT(result_o[25])
OUTPUT(result_o[26])
OUTPUT(result_o[27])
OUTPUT(result_o[28])
OUTPUT(result_o[29])
OUTPUT(result_o[30])
OUTPUT(result_o[31])
OUTPUT(result_o[32])
result_o[9] = xor( n143, add2_i[9] )
result_o[8] = xor( n144, add2_i[8] )
result_o[7] = xor( n145, n146 )
n146 = xor( add2_i[7], add1_i[7] )
result_o[6] = xor( add2_i[6], n149 )
n149 = xor( n150, add1_i[6] )
result_o[5] = xor( xenc12, add2_i[5] )
n153 = xor( n154, add1_i[5] )
result_o[4] = xor( n157, add2_i[4] )
n157 = xor( n158, add1_i[4] )
result_o[3] = xor( xenc14, xenc51 )
n172 = xor( add2_i[3], add1_i[3] )
result_o[31] = xor( n188, xenc22 )
n189 = xor( add2_i[31], add1_i[31] )
result_o[30] = xor( add2_i[30], n192 )
n192 = xor( xenc37, add1_i[30] )
result_o[2] = xor( add2_i[2], n175 )
n175 = xor( n176, add1_i[2] )
xenc61 = xor( n196, add2_i[29] )
n196 = xor( n197, add1_i[29] )
result_o[28] = xor( n204, add2_i[28] )
n204 = xor( xenc46, add1_i[28] )
result_o[27] = xor( n217, n218 )
n218 = xor( add2_i[27], add1_i[27] )
xenc35 = xor( add2_i[26], n221 )
n221 = xor( xenc48, add1_i[26] )
result_o[25] = xor( n225, add2_i[25] )
n225 = xor( n226, add1_i[25] )
result_o[24] = xor( n229, add2_i[24] )
n229 = xor( n230, add1_i[24] )
xenc15 = xor( xenc36, n243 )
n243 = xor( add2_i[23], add1_i[23] )
xenc2 = xor( add2_i[22], n246 )
n246 = xor( n247, add1_i[22] )
xenc8 = xor( n250, add2_i[21] )
n250 = xor( n251, add1_i[21] )
xenc10 = xor( xenc56, add2_i[20] )
n254 = xor( n255, add1_i[20] )
result_o[1] = xor( n201, add2_i[1] )
n201 = xor( xenc63, add1_i[1] )
result_o[19] = xor( xenc29, n268 )
n268 = xor( add2_i[19], add1_i[19] )
result_o[18] = xor( add2_i[18], n271 )
n271 = xor( n272, add1_i[18] )
xenc23 = xor( n275, add2_i[17] )
n275 = xor( n276, add1_i[17] )
result_o[16] = xor( n279, add2_i[16] )
n279 = xor( n280, add1_i[16] )
result_o[15] = xor( n292, n293 )
n293 = xor( add2_i[15], add1_i[15] )
xenc0 = xor( add2_i[14], n296 )
n296 = xor( n297, add1_i[14] )
xenc17 = xor( n300, add2_i[13] )
n300 = xor( n301, add1_i[13] )
result_o[12] = xor( n304, add2_i[12] )
n304 = xor( n305, add1_i[12] )
result_o[11] = xor( n317, xenc28 )
n318 = xor( add2_i[11], add1_i[11] )
result_o[10] = xor( n321, add2_i[10] )
n321 = xor( n322, add1_i[10] )
n143 = xor( n325, add1_i[9] )
n144 = xor( n328, add1_i[8] )
n142 = not( n170 )
result_o[0] = nand( n170, xenc63 )
n317 = nand( n319, xenc11 )
n319 = nand( add1_i[10], n322 )
n148 = nand( n149, add2_i[6] )
n295 = nand( n296, add2_i[14] )
n270 = nand( n271, add2_i[18] )
n245 = nand( n246, add2_i[22] )
n220 = nand( n221, add2_i[26] )
n191 = nand( n192, add2_i[30] )
n320 = nand( n321, add2_i[10] )
n170 = nand( add2_i[0], add1_i[0] )
n154 = nand( n155, xenc32 )
n155 = nand( add1_i[4], n158 )
n156 = nand( n157, add2_i[4] )
n301 = nand( n302, n303 )
n302 = nand( add1_i[12], n305 )
n303 = nand( n304, add2_i[12] )
n276 = nand( n277, n278 )
n277 = nand( add1_i[16], n280 )
n278 = nand( n279, add2_i[16] )
n251 = nand( xenc50, n253 )
n252 = nand( add1_i[20], n255 )
n253 = nand( xenc56, add2_i[20] )
n226 = nand( n227, xenc5 )
n227 = nand( add1_i[24], n230 )
n228 = nand( n229, add2_i[24] )
n197 = nand( xenc4, xenc1 )
n202 = nand( add1_i[28], xenc46 )
n203 = nand( n204, add2_i[28] )
n150 = nand( n151, n152 )
n151 = nand( add1_i[5], n154 )
n152 = nand( xenc12, add2_i[5] )
n297 = nand( xenc18, n299 )
n298 = nand( add1_i[13], n301 )
n299 = nand( n300, add2_i[13] )
n272 = nand( xenc3, n274 )
n273 = nand( add1_i[17], n276 )
n274 = nand( n275, add2_i[17] )
n247 = nand( n248, xenc21 )
n248 = nand( add1_i[21], n251 )
n249 = nand( n250, add2_i[21] )
n222 = nand( n223, n224 )
n223 = nand( add1_i[25], n226 )
n224 = nand( n225, add2_i[25] )
n193 = nand( xenc53, n195 )
n194 = nand( add1_i[29], n197 )
n195 = nand( n196, add2_i[29] )
n325 = nand( xenc55, n327 )
n326 = nand( add1_i[8], n328 )
n327 = nand( add2_i[8], n144 )
n322 = nand( xenc42, xenc62 )
n323 = nand( add1_i[9], n325 )
n324 = nand( add2_i[9], n143 )
n328 = nand( n329, n330 )
n329 = nand( add1_i[7], n332 )
n330 = nand( add2_i[7], n331 )
n331 = or( n332, add1_i[7] )
n305 = nand( n306, n307 )
n306 = nand( add1_i[11], n309 )
n307 = nand( add2_i[11], n308 )
n308 = or( n309, add1_i[11] )
n280 = nand( xenc59, xenc6 )
n281 = nand( add1_i[15], xenc41 )
n282 = nand( add2_i[15], xenc58 )
n283 = or( xenc41, add1_i[15] )
n255 = nand( n256, xenc13 )
n256 = nand( add1_i[19], n259 )
n257 = nand( add2_i[19], n258 )
n258 = or( n259, add1_i[19] )
n230 = nand( xenc19, n232 )
n231 = nand( add1_i[23], n234 )
n232 = nand( add2_i[23], n233 )
n233 = or( n234, add1_i[23] )
n205 = nand( n206, n207 )
n206 = nand( add1_i[27], xenc20 )
n207 = nand( add2_i[27], n208 )
n208 = or( xenc20, add1_i[27] )
n336 = nand( xenc60, n338 )
n337 = nand( add2_i[5], add1_i[5] )
n338 = nand( add1_i[4], n339, add2_i[4] )
n339 = or( add2_i[5], add1_i[5] )
n313 = nand( n314, xenc57 )
n314 = nand( add2_i[9], add1_i[9] )
n315 = nand( add1_i[8], xenc16, add2_i[8] )
n316 = or( add2_i[9], add1_i[9] )
n288 = nand( n289, xenc30 )
n289 = nand( add2_i[13], add1_i[13] )
n290 = nand( add1_i[12], n291, add2_i[12] )
n291 = or( add2_i[13], add1_i[13] )
n263 = nand( n264, n265 )
n264 = nand( add2_i[17], add1_i[17] )
n265 = nand( add1_i[16], n266, add2_i[16] )
n266 = or( add2_i[17], add1_i[17] )
n238 = nand( n239, xenc43 )
n239 = nand( add2_i[21], add1_i[21] )
n240 = nand( add1_i[20], n241, add2_i[20] )
n241 = or( add2_i[21], add1_i[21] )
n213 = nand( n214, n215 )
n214 = nand( add2_i[25], add1_i[25] )
n215 = nand( add1_i[24], n216, add2_i[24] )
n216 = or( add2_i[25], add1_i[25] )
n162 = nand( n163, n164 )
n163 = nand( add1_i[2], n166 )
n164 = nand( add2_i[2], xenc49 )
n165 = or( n166, add1_i[2] )
n332 = nand( xenc40, n334 )
n333 = nand( add1_i[6], n336 )
n334 = nand( add2_i[6], n335 )
n335 = or( n336, add1_i[6] )
n309 = nand( n310, xenc27 )
n310 = nand( add1_i[10], n313 )
n311 = nand( add2_i[10], n312 )
n312 = or( n313, add1_i[10] )
n284 = nand( n285, n286 )
n285 = nand( add1_i[14], n288 )
n286 = nand( add2_i[14], n287 )
n287 = or( n288, add1_i[14] )
n259 = nand( n260, xenc24 )
n260 = nand( add1_i[18], xenc44 )
n261 = nand( add2_i[18], n262 )
n262 = or( xenc44, add1_i[18] )
n234 = nand( xenc25, xenc47 )
n235 = nand( add1_i[22], n238 )
n236 = nand( add2_i[22], n237 )
n237 = or( n238, add1_i[22] )
n209 = nand( n210, xenc45 )
n210 = nand( add1_i[26], n213 )
n211 = nand( add2_i[26], n212 )
n212 = or( n213, add1_i[26] )
n158 = nand( xenc33, n160 )
n159 = nand( add1_i[3], n162 )
n160 = nand( add2_i[3], xenc7 )
n161 = or( n162, add1_i[3] )
n145 = nand( n147, xenc34 )
n147 = nand( add1_i[6], n150 )
n292 = nand( n294, xenc52 )
n294 = nand( add1_i[14], n297 )
n267 = nand( n269, n270 )
n269 = nand( add1_i[18], n272 )
n242 = nand( n244, n245 )
n244 = nand( add1_i[22], n247 )
n217 = nand( n219, n220 )
n219 = nand( add1_i[26], xenc48 )
n188 = nand( n190, n191 )
n190 = nand( add1_i[30], xenc37 )
n166 = nand( xenc39, xenc9 )
n167 = nand( add1_i[1], n142 )
n168 = nand( add2_i[1], n169 )
n169 = or( add1_i[1], n142 )
n200 = or( add2_i[0], add1_i[0] )
n171 = nand( n173, n174 )
n173 = nand( add1_i[2], n176 )
n174 = nand( n175, add2_i[2] )
n176 = nand( n198, n199 )
n199 = nand( add1_i[1], xenc63 )
n198 = nand( n201, add2_i[1] )
n184 = nand( n185, xenc54 )
n185 = nand( add2_i[29], add1_i[29] )
n186 = nand( add1_i[28], n187, add2_i[28] )
n187 = or( add2_i[29], add1_i[29] )
n180 = nand( n181, xenc31 )
n181 = nand( add1_i[30], n184 )
n182 = nand( add2_i[30], xenc38 )
n183 = or( n184, add1_i[30] )
result_o[32] = nand( n177, n178 )
n177 = nand( add1_i[31], xenc26 )
n178 = nand( add2_i[31], n179 )
n179 = or( xenc26, add1_i[31] )
result_o[14] = xnor( xenc0, keyinput0 )
xenc1 = xor( n203, keyinput1 )
result_o[22] = xnor( xenc2, keyinput2 )
xenc3 = xnor( n273, keyinput3 )
xenc4 = xor( n202, keyinput4 )
xenc5 = xnor( n228, keyinput5 )
xenc6 = xnor( n282, keyinput6 )
xenc7 = xor( n161, keyinput7 )
result_o[21] = xnor( xenc8, keyinput8 )
xenc9 = xnor( n168, keyinput9 )
result_o[20] = xnor( xenc10, keyinput10 )
xenc11 = xor( n320, keyinput11 )
xenc12 = xnor( n153, keyinput12 )
xenc13 = xor( n257, keyinput13 )
xenc14 = xor( n171, keyinput14 )
result_o[23] = xor( xenc15, keyinput15 )
xenc16 = xnor( n316, keyinput16 )
result_o[13] = xnor( xenc17, keyinput17 )
xenc18 = xnor( n298, keyinput18 )
xenc19 = xor( n231, keyinput19 )
xenc20 = xor( n209, keyinput20 )
xenc21 = xnor( n249, keyinput21 )
xenc22 = xor( n189, keyinput22 )
result_o[17] = xnor( xenc23, keyinput23 )
xenc24 = xnor( n261, keyinput24 )
xenc25 = xor( n235, keyinput25 )
xenc26 = xor( n180, keyinput26 )
xenc27 = xnor( n311, keyinput27 )
xenc28 = xor( n318, keyinput28 )
xenc29 = xor( n267, keyinput29 )
xenc30 = xor( n290, keyinput30 )
xenc31 = xor( n182, keyinput31 )
xenc32 = xor( n156, keyinput32 )
xenc33 = xnor( n159, keyinput33 )
xenc34 = xor( n148, keyinput34 )
result_o[26] = xnor( xenc35, keyinput35 )
xenc36 = xnor( n242, keyinput36 )
xenc37 = xor( n193, keyinput37 )
xenc38 = xnor( n183, keyinput38 )
xenc39 = xor( n167, keyinput39 )
xenc40 = xor( n333, keyinput40 )
xenc41 = xnor( n284, keyinput41 )
xenc42 = xnor( n323, keyinput42 )
xenc43 = xor( n240, keyinput43 )
xenc44 = xor( n263, keyinput44 )
xenc45 = xor( n211, keyinput45 )
xenc46 = xor( n205, keyinput46 )
xenc47 = xor( n236, keyinput47 )
xenc48 = xnor( n222, keyinput48 )
xenc49 = xor( n165, keyinput49 )
xenc50 = xor( n252, keyinput50 )
xenc51 = xor( n172, keyinput51 )
xenc52 = xor( n295, keyinput52 )
xenc53 = xnor( n194, keyinput53 )
xenc54 = xor( n186, keyinput54 )
xenc55 = xor( n326, keyinput55 )
xenc56 = xor( n254, keyinput56 )
xenc57 = xnor( n315, keyinput57 )
xenc58 = xor( n283, keyinput58 )
xenc59 = xnor( n281, keyinput59 )
xenc60 = xnor( n337, keyinput60 )
result_o[29] = xor( xenc61, keyinput61 )
xenc62 = xnor( n324, keyinput62 )
xenc63 = xor( n200, keyinput63 )
