# BENCH FILE 
# circuit:lower_part_or_ripple_carry_adder32.bench

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add1_i[16])
INPUT(add1_i[17])
INPUT(add1_i[18])
INPUT(add1_i[19])
INPUT(add1_i[20])
INPUT(add1_i[21])
INPUT(add1_i[22])
INPUT(add1_i[23])
INPUT(add1_i[24])
INPUT(add1_i[25])
INPUT(add1_i[26])
INPUT(add1_i[27])
INPUT(add1_i[28])
INPUT(add1_i[29])
INPUT(add1_i[30])
INPUT(add1_i[31])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(add2_i[16])
INPUT(add2_i[17])
INPUT(add2_i[18])
INPUT(add2_i[19])
INPUT(add2_i[20])
INPUT(add2_i[21])
INPUT(add2_i[22])
INPUT(add2_i[23])
INPUT(add2_i[24])
INPUT(add2_i[25])
INPUT(add2_i[26])
INPUT(add2_i[27])
INPUT(add2_i[28])
INPUT(add2_i[29])
INPUT(add2_i[30])
INPUT(add2_i[31])
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
INPUT(keyinput32)
INPUT(keyinput33)
INPUT(keyinput34)
INPUT(keyinput35)
INPUT(keyinput36)
INPUT(keyinput37)
INPUT(keyinput38)
INPUT(keyinput39)
INPUT(keyinput40)
INPUT(keyinput41)
INPUT(keyinput42)
INPUT(keyinput43)
INPUT(keyinput44)
INPUT(keyinput45)
INPUT(keyinput46)
INPUT(keyinput47)
INPUT(keyinput48)
INPUT(keyinput49)
INPUT(keyinput50)
INPUT(keyinput51)
INPUT(keyinput52)
INPUT(keyinput53)
INPUT(keyinput54)
INPUT(keyinput55)
INPUT(keyinput56)
INPUT(keyinput57)
INPUT(keyinput58)
INPUT(keyinput59)
INPUT(keyinput60)
INPUT(keyinput61)
INPUT(keyinput62)
INPUT(keyinput63)
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
OUTPUT(result_o[17])
OUTPUT(result_o[18])
OUTPUT(result_o[19])
OUTPUT(result_o[20])
OUTPUT(result_o[21])
OUTPUT(result_o[22])
OUTPUT(result_o[23])
OUTPUT(result_o[24])
OUTPUT(result_o[25])
OUTPUT(result_o[26])
OUTPUT(result_o[27])
OUTPUT(result_o[28])
OUTPUT(result_o[29])
OUTPUT(result_o[30])
OUTPUT(result_o[31])
OUTPUT(result_o[32])
xenc63 = xor( n101, n102 )
n102 = xor( add2_i[9], add1_i[9] )
xenc42 = xor( add2_i[8], n103 )
result_o[31] = xor( add2_i[31], xenc8 )
result_o[30] = xor( add2_i[30], xenc37 )
result_o[29] = xor( add2_i[29], n114 )
result_o[28] = xor( add2_i[28], n118 )
xenc48 = xor( add2_i[27], xenc18 )
result_o[26] = xor( add2_i[26], n126 )
result_o[25] = xor( add2_i[25], n130 )
n130 = xor( n131, add1_i[25] )
result_o[24] = xor( add2_i[24], xenc5 )
result_o[23] = xor( add2_i[23], n138 )
result_o[22] = xor( add2_i[22], n142 )
xenc29 = xor( add2_i[21], n146 )
result_o[20] = xor( add2_i[20], n150 )
xenc55 = xor( add2_i[19], xenc6 )
xenc27 = xor( add2_i[18], xenc39 )
xenc24 = xor( add2_i[17], xenc41 )
result_o[16] = xor( add2_i[16], xenc30 )
result_o[15] = xor( add2_i[15], n170 )
result_o[14] = xor( add2_i[14], n174 )
result_o[13] = xor( add2_i[13], xenc53 )
xenc16 = xor( n182, add2_i[12] )
n182 = xor( n183, add1_i[12] )
xenc21 = xor( xenc12, add2_i[11] )
n186 = xor( xenc28, add1_i[11] )
result_o[10] = xor( n190, add2_i[10] )
n190 = xor( xenc45, add1_i[10] )
n199 = not( add1_i[26] )
n201 = not( add1_i[24] )
n198 = not( add1_i[23] )
n138 = xnor( xenc14, xenc36 )
n126 = xnor( xenc26, xenc0 )
n205 = not( add1_i[22] )
n200 = not( add1_i[21] )
n146 = xnor( n147, xenc4 )
n134 = xnor( n135, xenc31 )
n208 = not( add1_i[20] )
n203 = not( add1_i[19] )
n202 = not( add1_i[29] )
n204 = not( add1_i[27] )
n114 = xnor( n115, xenc44 )
n154 = xnor( xenc47, n203 )
n122 = xnor( n123, xenc50 )
n142 = xnor( xenc54, n205 )
n211 = not( add1_i[18] )
n206 = not( add1_i[17] )
n207 = not( add1_i[28] )
n162 = xnor( n163, n206 )
n118 = xnor( xenc15, xenc51 )
n150 = xnor( n151, xenc35 )
n213 = not( add1_i[31] )
n209 = not( add1_i[15] )
n210 = not( add1_i[30] )
n170 = xnor( xenc62, xenc2 )
n110 = xnor( xenc20, xenc10 )
n158 = xnor( n159, n211 )
n212 = not( add1_i[16] )
n166 = xnor( n167, xenc1 )
n106 = xnor( xenc56, n213 )
n214 = not( add1_i[14] )
n215 = not( add1_i[13] )
n188 = nand( add1_i[10], xenc58 )
result_o[0] = or( add1_i[0], add2_i[0] )
result_o[1] = or( add1_i[1], add2_i[1] )
xenc40 = or( add1_i[2], add2_i[2] )
xenc13 = or( add1_i[3], add2_i[3] )
result_o[4] = or( add1_i[4], add2_i[4] )
result_o[5] = or( add1_i[5], add2_i[5] )
xenc34 = or( add1_i[6], add2_i[6] )
n184 = nand( add1_i[11], xenc28 )
n174 = xnor( n175, n214 )
n178 = xnor( n179, n215 )
xenc9 = or( add2_i[7], add1_i[7] )
n196 = nand( add1_i[8], add1_i[7], add2_i[7] )
n216 = nand( xenc22, n193 )
n191 = nand( n193, xenc22 )
n193 = nand( xenc49, add2_i[9] )
n180 = nand( n183, add1_i[12] )
n183 = nand( xenc46, n184 )
n104 = nand( xenc56, add1_i[31] )
n107 = nand( n109, n108 )
n197 = nand( add2_i[7], add1_i[7] )
n108 = nand( add1_i[30], xenc20 )
n156 = nand( add1_i[18], n159 )
n103 = xnor( xenc3, add1_i[8] )
n111 = nand( xenc7, n113 )
n112 = nand( add1_i[29], n115 )
n101 = nand( n195, n196 )
n187 = nand( xenc32, n189 )
n159 = nand( n160, n161 )
n115 = nand( xenc60, n117 )
n128 = nand( add1_i[25], n131 )
n152 = nand( add1_i[19], xenc47 )
n160 = nand( add1_i[17], n163 )
n164 = nand( add1_i[16], n167 )
n155 = nand( xenc52, n157 )
n131 = nand( n132, n133 )
n167 = nand( n168, xenc59 )
n163 = nand( n164, n165 )
n120 = nand( add1_i[27], n123 )
n124 = nand( add1_i[26], xenc26 )
n136 = nand( add1_i[23], xenc14 )
n123 = nand( n124, n125 )
n127 = nand( n128, n129 )
n139 = nand( n140, n141 )
n140 = nand( add1_i[22], xenc54 )
n168 = nand( add1_i[15], xenc62 )
n176 = nand( add1_i[13], n179 )
n143 = nand( xenc43, n145 )
n144 = nand( add1_i[21], n147 )
n171 = nand( xenc17, xenc11 )
n172 = nand( add1_i[14], n175 )
n179 = nand( n180, n181 )
n116 = nand( add1_i[28], xenc15 )
n117 = nand( add2_i[28], n118 )
n132 = nand( add1_i[24], n135 )
n133 = nand( add2_i[24], xenc5 )
n147 = nand( n148, xenc19 )
n148 = nand( add1_i[20], n151 )
n175 = nand( xenc23, n177 )
n181 = nand( add2_i[12], n182 )
xenc25 = nand( xenc57, xenc38 )
n105 = nand( add2_i[31], xenc8 )
n119 = nand( n120, n121 )
n129 = nand( add2_i[25], n130 )
n135 = nand( n136, xenc33 )
n145 = nand( add2_i[21], n146 )
n151 = nand( n152, xenc61 )
n157 = nand( add2_i[18], xenc39 )
n169 = nand( add2_i[15], n170 )
n192 = nand( add1_i[9], n101 )
n194 = or( n101, add1_i[9] )
n195 = nand( n103, add2_i[8] )
n185 = nand( add2_i[11], xenc12 )
n189 = nand( add2_i[10], n190 )
n113 = nand( add2_i[29], n114 )
n109 = nand( add2_i[30], xenc37 )
n125 = nand( add2_i[26], n126 )
n121 = nand( add2_i[27], xenc18 )
n141 = nand( add2_i[22], n142 )
n137 = nand( add2_i[23], n138 )
n153 = nand( add2_i[19], xenc6 )
n149 = nand( add2_i[20], n150 )
n165 = nand( add2_i[16], xenc30 )
n161 = nand( add2_i[17], xenc41 )
n177 = nand( add2_i[13], xenc53 )
n173 = nand( add2_i[14], n174 )
xenc0 = xnor( n199, keyinput0 )
xenc1 = xnor( n212, keyinput1 )
xenc2 = xor( n209, keyinput2 )
xenc3 = xnor( n197, keyinput3 )
xenc4 = xnor( n200, keyinput4 )
xenc5 = xnor( n134, keyinput5 )
xenc6 = xnor( n154, keyinput6 )
xenc7 = xor( n112, keyinput7 )
xenc8 = xor( n106, keyinput8 )
result_o[7] = xnor( xenc9, keyinput9 )
xenc10 = xor( n210, keyinput10 )
xenc11 = xor( n173, keyinput11 )
xenc12 = xor( n186, keyinput12 )
result_o[3] = xor( xenc13, keyinput13 )
xenc14 = xor( n139, keyinput14 )
xenc15 = xnor( n119, keyinput15 )
result_o[12] = xor( xenc16, keyinput16 )
xenc17 = xnor( n172, keyinput17 )
xenc18 = xor( n122, keyinput18 )
xenc19 = xnor( n149, keyinput19 )
xenc20 = xor( n111, keyinput20 )
result_o[11] = xor( xenc21, keyinput21 )
xenc22 = xnor( n192, keyinput22 )
xenc23 = xnor( n176, keyinput23 )
result_o[17] = xnor( xenc24, keyinput24 )
result_o[32] = xor( xenc25, keyinput25 )
xenc26 = xnor( n127, keyinput26 )
result_o[18] = xor( xenc27, keyinput27 )
xenc28 = xnor( n187, keyinput28 )
result_o[21] = xor( xenc29, keyinput29 )
xenc30 = xor( n166, keyinput30 )
xenc31 = xnor( n201, keyinput31 )
xenc32 = xor( n188, keyinput32 )
xenc33 = xnor( n137, keyinput33 )
result_o[6] = xnor( xenc34, keyinput34 )
xenc35 = xor( n208, keyinput35 )
xenc36 = xnor( n198, keyinput36 )
xenc37 = xnor( n110, keyinput37 )
xenc38 = xor( n105, keyinput38 )
xenc39 = xnor( n158, keyinput39 )
result_o[2] = xor( xenc40, keyinput40 )
xenc41 = xnor( n162, keyinput41 )
result_o[8] = xor( xenc42, keyinput42 )
xenc43 = xnor( n144, keyinput43 )
xenc44 = xor( n202, keyinput44 )
xenc45 = xnor( n191, keyinput45 )
xenc46 = xnor( n185, keyinput46 )
xenc47 = xnor( n155, keyinput47 )
result_o[27] = xnor( xenc48, keyinput48 )
xenc49 = xor( n194, keyinput49 )
xenc50 = xnor( n204, keyinput50 )
xenc51 = xnor( n207, keyinput51 )
xenc52 = xnor( n156, keyinput52 )
xenc53 = xor( n178, keyinput53 )
xenc54 = xnor( n143, keyinput54 )
result_o[19] = xnor( xenc55, keyinput55 )
xenc56 = xnor( n107, keyinput56 )
xenc57 = xnor( n104, keyinput57 )
xenc58 = xor( n216, keyinput58 )
xenc59 = xor( n169, keyinput59 )
xenc60 = xnor( n116, keyinput60 )
xenc61 = xnor( n153, keyinput61 )
xenc62 = xor( n171, keyinput62 )
result_o[9] = xor( xenc63, keyinput63 )
