# BENCH FILE 
# circuit:equal_segmentation_adder32.bench

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add1_i[16])
INPUT(add1_i[17])
INPUT(add1_i[18])
INPUT(add1_i[19])
INPUT(add1_i[20])
INPUT(add1_i[21])
INPUT(add1_i[22])
INPUT(add1_i[23])
INPUT(add1_i[24])
INPUT(add1_i[25])
INPUT(add1_i[26])
INPUT(add1_i[27])
INPUT(add1_i[28])
INPUT(add1_i[29])
INPUT(add1_i[30])
INPUT(add1_i[31])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(add2_i[16])
INPUT(add2_i[17])
INPUT(add2_i[18])
INPUT(add2_i[19])
INPUT(add2_i[20])
INPUT(add2_i[21])
INPUT(add2_i[22])
INPUT(add2_i[23])
INPUT(add2_i[24])
INPUT(add2_i[25])
INPUT(add2_i[26])
INPUT(add2_i[27])
INPUT(add2_i[28])
INPUT(add2_i[29])
INPUT(add2_i[30])
INPUT(add2_i[31])
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
INPUT(keyinput32)
INPUT(keyinput33)
INPUT(keyinput34)
INPUT(keyinput35)
INPUT(keyinput36)
INPUT(keyinput37)
INPUT(keyinput38)
INPUT(keyinput39)
INPUT(keyinput40)
INPUT(keyinput41)
INPUT(keyinput42)
INPUT(keyinput43)
INPUT(keyinput44)
INPUT(keyinput45)
INPUT(keyinput46)
INPUT(keyinput47)
INPUT(keyinput48)
INPUT(keyinput49)
INPUT(keyinput50)
INPUT(keyinput51)
INPUT(keyinput52)
INPUT(keyinput53)
INPUT(keyinput54)
INPUT(keyinput55)
INPUT(keyinput56)
INPUT(keyinput57)
INPUT(keyinput58)
INPUT(keyinput59)
INPUT(keyinput60)
INPUT(keyinput61)
INPUT(keyinput62)
INPUT(keyinput63)
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
OUTPUT(result_o[17])
OUTPUT(result_o[18])
OUTPUT(result_o[19])
OUTPUT(result_o[20])
OUTPUT(result_o[21])
OUTPUT(result_o[22])
OUTPUT(result_o[23])
OUTPUT(result_o[24])
OUTPUT(result_o[25])
OUTPUT(result_o[26])
OUTPUT(result_o[27])
OUTPUT(result_o[28])
OUTPUT(result_o[29])
OUTPUT(result_o[30])
OUTPUT(result_o[31])
OUTPUT(result_o[32])
result_o[9] = xor( add2_i[9], xenc0 )
result_o[8] = xor( add2_i[8], add1_i[8] )
xenc33 = xor( xenc18, n78 )
n78 = xor( add2_i[7], add1_i[7] )
xenc21 = xor( add2_i[6], xenc53 )
n81 = xor( n82, add1_i[6] )
xenc43 = xor( add2_i[5], xenc7 )
n85 = xor( xenc16, add1_i[5] )
xenc20 = xor( add2_i[4], n89 )
n89 = xor( xenc27, add1_i[4] )
xenc42 = xor( add2_i[3], n93 )
n93 = xor( n94, add1_i[3] )
result_o[31] = xor( add2_i[31], xenc39 )
n101 = xor( xenc11, add1_i[31] )
result_o[30] = xor( add2_i[30], xenc22 )
n105 = xor( xenc51, add1_i[30] )
xenc56 = xor( add2_i[2], xenc60 )
n97 = xor( n98, add1_i[2] )
xenc13 = xor( add2_i[29], n109 )
n109 = xor( n110, add1_i[29] )
result_o[28] = xor( add2_i[28], xenc44 )
n116 = xor( xenc32, add1_i[28] )
result_o[27] = xor( add2_i[27], n120 )
n120 = xor( xenc59, add1_i[27] )
xenc29 = xor( add2_i[26], xenc31 )
n124 = xor( n125, add1_i[26] )
xenc5 = xor( add2_i[25], xenc3 )
result_o[24] = xor( add2_i[24], add1_i[24] )
xenc26 = xor( n130, n131 )
n131 = xor( add2_i[23], add1_i[23] )
result_o[22] = xor( add2_i[22], n134 )
n134 = xor( xenc30, add1_i[22] )
result_o[21] = xor( add2_i[21], n138 )
n138 = xor( n139, add1_i[21] )
xenc62 = xor( add2_i[20], n142 )
n142 = xor( n143, add1_i[20] )
result_o[1] = xor( add2_i[1], n113 )
xenc41 = xor( add2_i[19], n146 )
n146 = xor( n147, add1_i[19] )
result_o[18] = xor( add2_i[18], n151 )
n151 = xor( n152, add1_i[18] )
result_o[17] = xor( add2_i[17], xenc15 )
result_o[16] = xor( add2_i[16], add1_i[16] )
xenc36 = xor( n157, xenc28 )
n158 = xor( add2_i[15], add1_i[15] )
result_o[14] = xor( add2_i[14], n161 )
n161 = xor( n162, add1_i[14] )
result_o[13] = xor( add2_i[13], n165 )
n165 = xor( xenc50, add1_i[13] )
xenc49 = xor( add2_i[12], xenc2 )
n169 = xor( xenc4, add1_i[12] )
xenc58 = xor( add2_i[11], n173 )
n173 = xor( n174, add1_i[11] )
xenc48 = xor( add2_i[10], xenc55 )
n177 = xor( xenc19, add1_i[10] )
result_o[0] = xor( add2_i[0], add1_i[0] )
n128 = xnor( n129, add1_i[25] )
n129 = nand( add2_i[24], add1_i[24] )
n113 = xnor( n148, add1_i[1] )
n148 = nand( add2_i[0], add1_i[0] )
n76 = xnor( n181, add1_i[9] )
n181 = nand( add2_i[8], add1_i[8] )
n155 = xnor( xenc23, add1_i[17] )
n156 = nand( add2_i[16], add1_i[16] )
n77 = nand( xenc40, xenc63 )
n79 = nand( add1_i[6], n82 )
n157 = nand( n159, n160 )
n159 = nand( add1_i[14], n162 )
n130 = nand( xenc8, n133 )
n132 = nand( add1_i[22], xenc30 )
n121 = nand( n122, xenc6 )
n122 = nand( add1_i[26], n125 )
n123 = nand( add2_i[26], xenc31 )
n94 = nand( xenc17, n96 )
n95 = nand( add1_i[2], n98 )
n96 = nand( add2_i[2], xenc60 )
n174 = nand( xenc57, xenc12 )
n175 = nand( add1_i[10], xenc19 )
n176 = nand( add2_i[10], xenc55 )
n147 = nand( n149, n150 )
n149 = nand( add1_i[18], n152 )
n150 = nand( add2_i[18], n151 )
n117 = nand( n118, xenc35 )
n118 = nand( add1_i[27], xenc59 )
n119 = nand( add2_i[27], n120 )
n90 = nand( xenc38, xenc9 )
n91 = nand( add1_i[3], n94 )
n92 = nand( add2_i[3], n93 )
n170 = nand( n171, n172 )
n171 = nand( add1_i[11], n174 )
n172 = nand( add2_i[11], n173 )
n143 = nand( xenc25, n145 )
n144 = nand( add1_i[19], n147 )
n145 = nand( add2_i[19], n146 )
n102 = nand( n103, n104 )
n103 = nand( add1_i[30], xenc51 )
n104 = nand( add2_i[30], xenc22 )
n110 = nand( n114, xenc47 )
n114 = nand( add1_i[28], xenc32 )
n115 = nand( add2_i[28], xenc44 )
n86 = nand( n87, n88 )
n87 = nand( add1_i[4], xenc27 )
n88 = nand( add2_i[4], n89 )
n166 = nand( n167, xenc61 )
n167 = nand( add1_i[12], xenc4 )
n168 = nand( add2_i[12], xenc2 )
n139 = nand( xenc14, n141 )
n140 = nand( add1_i[20], n143 )
n141 = nand( add2_i[20], n142 )
n106 = nand( n107, xenc1 )
n107 = nand( add1_i[29], n110 )
n108 = nand( add2_i[29], n109 )
n82 = nand( n83, n84 )
n83 = nand( add1_i[5], xenc16 )
n84 = nand( add2_i[5], xenc7 )
n162 = nand( n163, xenc54 )
n163 = nand( add1_i[13], xenc50 )
n164 = nand( add2_i[13], n165 )
n135 = nand( n136, xenc46 )
n136 = nand( add1_i[21], n139 )
n137 = nand( add2_i[21], n138 )
n80 = nand( add2_i[6], xenc53 )
n160 = nand( add2_i[14], n161 )
n133 = nand( add2_i[22], n134 )
n125 = nand( xenc34, xenc10 )
n127 = nand( add1_i[25], add1_i[24], add2_i[24] )
n126 = nand( add2_i[25], xenc3 )
n98 = nand( n111, n112 )
n112 = nand( add1_i[1], add1_i[0], add2_i[0] )
n111 = nand( add2_i[1], n113 )
n178 = nand( xenc52, n180 )
n180 = nand( add2_i[8], add1_i[8], add1_i[9] )
n179 = nand( add2_i[9], xenc0 )
n152 = nand( xenc37, xenc24 )
n154 = nand( add1_i[17], add1_i[16], add2_i[16] )
n153 = nand( add2_i[17], xenc15 )
result_o[32] = nand( xenc45, n100 )
n99 = nand( add1_i[31], xenc11 )
n100 = nand( add2_i[31], xenc39 )
xenc0 = xnor( n76, keyinput0 )
xenc1 = xnor( n108, keyinput1 )
xenc2 = xnor( n169, keyinput2 )
xenc3 = xnor( n128, keyinput3 )
xenc4 = xor( n170, keyinput4 )
result_o[25] = xor( xenc5, keyinput5 )
xenc6 = xor( n123, keyinput6 )
xenc7 = xnor( n85, keyinput7 )
xenc8 = xor( n132, keyinput8 )
xenc9 = xnor( n92, keyinput9 )
xenc10 = xnor( n127, keyinput10 )
xenc11 = xor( n102, keyinput11 )
xenc12 = xor( n176, keyinput12 )
result_o[29] = xnor( xenc13, keyinput13 )
xenc14 = xor( n140, keyinput14 )
xenc15 = xor( n155, keyinput15 )
xenc16 = xor( n86, keyinput16 )
xenc17 = xor( n95, keyinput17 )
xenc18 = xnor( n77, keyinput18 )
xenc19 = xnor( n178, keyinput19 )
result_o[4] = xnor( xenc20, keyinput20 )
result_o[6] = xnor( xenc21, keyinput21 )
xenc22 = xnor( n105, keyinput22 )
xenc23 = xor( n156, keyinput23 )
xenc24 = xor( n154, keyinput24 )
xenc25 = xor( n144, keyinput25 )
result_o[23] = xor( xenc26, keyinput26 )
xenc27 = xor( n90, keyinput27 )
xenc28 = xnor( n158, keyinput28 )
result_o[26] = xnor( xenc29, keyinput29 )
xenc30 = xnor( n135, keyinput30 )
xenc31 = xnor( n124, keyinput31 )
xenc32 = xnor( n117, keyinput32 )
result_o[7] = xor( xenc33, keyinput33 )
xenc34 = xnor( n126, keyinput34 )
xenc35 = xnor( n119, keyinput35 )
result_o[15] = xnor( xenc36, keyinput36 )
xenc37 = xor( n153, keyinput37 )
xenc38 = xnor( n91, keyinput38 )
xenc39 = xor( n101, keyinput39 )
xenc40 = xor( n79, keyinput40 )
result_o[19] = xnor( xenc41, keyinput41 )
result_o[3] = xor( xenc42, keyinput42 )
result_o[5] = xnor( xenc43, keyinput43 )
xenc44 = xnor( n116, keyinput44 )
xenc45 = xnor( n99, keyinput45 )
xenc46 = xor( n137, keyinput46 )
xenc47 = xor( n115, keyinput47 )
result_o[10] = xor( xenc48, keyinput48 )
result_o[12] = xor( xenc49, keyinput49 )
xenc50 = xor( n166, keyinput50 )
xenc51 = xor( n106, keyinput51 )
xenc52 = xnor( n179, keyinput52 )
xenc53 = xor( n81, keyinput53 )
xenc54 = xnor( n164, keyinput54 )
xenc55 = xor( n177, keyinput55 )
result_o[2] = xor( xenc56, keyinput56 )
xenc57 = xor( n175, keyinput57 )
result_o[11] = xnor( xenc58, keyinput58 )
xenc59 = xor( n121, keyinput59 )
xenc60 = xnor( n97, keyinput60 )
xenc61 = xnor( n168, keyinput61 )
result_o[20] = xor( xenc62, keyinput62 )
xenc63 = xnor( n80, keyinput63 )
