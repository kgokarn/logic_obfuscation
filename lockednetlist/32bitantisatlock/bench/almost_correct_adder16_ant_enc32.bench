# BENCH FILE 
# circuit:almost_correct_adder16.bench

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(keyinput1)
INPUT(keyinput0)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
INPUT(keyinput32)
INPUT(keyinput33)
INPUT(keyinput34)
INPUT(keyinput35)
INPUT(keyinput36)
INPUT(keyinput37)
INPUT(keyinput38)
INPUT(keyinput39)
INPUT(keyinput40)
INPUT(keyinput41)
INPUT(keyinput42)
INPUT(keyinput43)
INPUT(keyinput44)
INPUT(keyinput45)
INPUT(keyinput46)
INPUT(keyinput47)
INPUT(keyinput48)
INPUT(keyinput49)
INPUT(keyinput50)
INPUT(keyinput51)
INPUT(keyinput52)
INPUT(keyinput53)
INPUT(keyinput54)
INPUT(keyinput55)
INPUT(keyinput56)
INPUT(keyinput57)
INPUT(keyinput58)
INPUT(keyinput59)
INPUT(keyinput60)
INPUT(keyinput61)
INPUT(keyinput62)
INPUT(keyinput63)
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
result_o[9] = xor( n98, n99 )
n99 = xor( add2_i[9], add1_i[9] )
result_o[8] = xor( n106, n107 )
n107 = xor( add2_i[8], add1_i[8] )
result_o[7] = xor( n115, n116 )
n116 = xor( add2_i[7], add1_i[7] )
result_o[6] = xor( n119, n120 )
n120 = xor( add2_i[6], add1_i[6] )
result_o[5] = xor( n131, n132 )
n132 = xor( add2_i[5], add1_i[5] )
result_o[4] = xor( n134, n135 )
n135 = xor( add2_i[4], add1_i[4] )
result_o[3] = xor( n138, n139 )
n139 = xor( add2_i[3], add1_i[3] )
result_o[2] = xor( n142, n143 )
n143 = xor( add2_i[2], add1_i[2] )
result_o[1] = xor( n147, n148 )
n148 = xor( add2_i[1], add1_i[1] )
result_o[14] = xor( n162, n163 )
n163 = xor( add2_i[14], add1_i[14] )
result_o[13] = xor( n166, n167 )
n167 = xor( add2_i[13], add1_i[13] )
result_o[12] = xor( n178, n179 )
n179 = xor( add2_i[12], add1_i[12] )
result_o[11] = xor( n189, n190 )
n190 = xor( add2_i[11], add1_i[11] )
result_o[10]_ant0 = xor( n195, n196 )
n196 = xor( add2_i[10], add1_i[10] )
n89 = not( n100 )
n85 = not( n165 )
n157 = nand( n158, n159 )
n159 = nand( n160, n161 )
n102 = nor( n111, n200 )
n127 = nor( n97, n95 )
n183 = nor( n169, n201 )
n201 = nor( n108, n200 )
n100 = nor( n194, n198 )
n198 = and( n102, n104, n127 )
n165 = nor( n161, n173 )
n173 = and( n170, n172, n88 )
n88 = not( n174 )
n170 = and( n184, n185 )
n103 = nand( n97, n95 )
n194 = nand( n183, n199 )
n199 = nand( n92, n102 )
n92 = not( n112 )
n122 = and( n125, n103, n126 )
n180 = nand( n170, n181 )
n181 = nand( n174, n182 )
n182 = nand( n171, n90 )
n90 = not( n183 )
n192 = nand( n174, n193 )
n193 = nand( n171, n194 )
n93 = not( n118 )
n96 = not( n105 )
n91 = not( n111 )
n110 = nand( n112, n113 )
n113 = nand( n94, n104 )
n94 = not( n114 )
n152 = nand( n154, n155 )
n154 = nand( add1_i[14], n157 )
n155 = nand( add2_i[14], n156 )
n156 = or( n157, add1_i[14] )
n161 = nand( n175, n176 )
n175 = nand( add2_i[12], add1_i[12] )
n176 = nand( n177, n172 )
n188 = nand( add2_i[10], add1_i[10] )
n185 = or( add2_i[11], add1_i[11] )
n177 = nand( n186, n187 )
n186 = nand( add2_i[11], add1_i[11] )
n187 = nand( n87, n185 )
n87 = not( n188 )
result_o[16] = nand( n149, n150 )
n149 = nand( add1_i[15], n152 )
n150 = nand( add2_i[15], n151 )
n151 = or( n152, add1_i[15] )
n111 = nor( add2_i[7], add1_i[7] )
n200 = nor( add2_i[8], add1_i[8] )
n114 = nor( n127, n128 )
n128 = and( n129, n103 )
n129 = nand( n105, n130 )
n130 = nand( add1_i[3], n125, add2_i[3] )
n104 = or( add2_i[6], add1_i[6] )
n174 = nand( add1_i[9], add2_i[9] )
n171 = or( add2_i[9], add1_i[9] )
n147 = or( add2_i[0], add1_i[0] )
n112 = nand( add2_i[6], add1_i[6] )
n105 = nand( add2_i[4], add1_i[4] )
n172 = or( add2_i[12], add1_i[12] )
n125 = or( add2_i[4], add1_i[4] )
n189 = nand( n188, n191 )
n191 = nand( n192, n184 )
n162 = nand( n158, n164 )
n164 = nand( n85, n160 )
n131 = nand( n105, n133 )
n133 = nand( n134, n125 )
n115 = nand( n112, n117 )
n117 = nand( n118, n104 )
n178 = nand( n86, n180 )
n86 = not( n177 )
n119 = nand( n93, n121 )
n121 = nand( add2_i[1], add1_i[1], n122, n123 )
n166 = nand( n165, n168 )
n168 = nand( n169, n170, n171, n172 )
n98 = nand( n100, n101 )
n101 = nand( n96, n102, n103, n104 )
n118 = nand( n114, n124 )
n124 = nand( add1_i[2], n122, add2_i[2] )
n108 = nand( add2_i[7], add1_i[7] )
n158 = nand( add2_i[13], add1_i[13] )
n123 = or( add2_i[2], add1_i[2] )
n126 = or( add2_i[3], add1_i[3] )
n169 = and( add2_i[8], add1_i[8] )
n134 = nand( n136, n137 )
n136 = nand( add2_i[3], add1_i[3] )
n137 = nand( n138, n126 )
n138 = nand( n140, n141 )
n140 = nand( add2_i[2], add1_i[2] )
n141 = nand( n142, n123 )
n142 = nand( n144, n145 )
n144 = nand( add1_i[1], n147 )
n145 = nand( add2_i[1], n146 )
n146 = or( n147, add1_i[1] )
n160 = or( add2_i[13], add1_i[13] )
n95 = not( add1_i[5] )
n97 = not( add2_i[5] )
result_o[15] = xnor( n153, n152 )
n153 = xnor( add1_i[15], add2_i[15] )
n184 = or( add2_i[10], add1_i[10] )
n106 = nand( n108, n109 )
n109 = nand( n110, n91 )
n195 = nand( n174, n197 )
n197 = nand( n171, n89 )
result_o[0] = nand( n147, n202 )
n202 = nand( add2_i[0], add1_i[0] )
result_o[10] = xor( result_o[10]_ant0, antisat_out )
inter30_0 = and( in0xor_0, in1xor_0 )
inter29_0 = and( in2xor_0, in3xor_0 )
inter28_0 = and( in4xor_0, in5xor_0 )
inter27_0 = and( in6xor_0, in7xor_0 )
inter26_0 = and( in8xor_0, in9xor_0 )
inter25_0 = and( in10xor_0, in11xor_0 )
inter24_0 = and( in12xor_0, in13xor_0 )
inter23_0 = and( in14xor_0, in15xor_0 )
inter22_0 = and( in16xor_0, in17xor_0 )
inter21_0 = and( in18xor_0, in19xor_0 )
inter20_0 = and( in20xor_0, in21xor_0 )
inter19_0 = and( in22xor_0, in23xor_0 )
inter18_0 = and( in24xor_0, in25xor_0 )
inter17_0 = and( in26xor_0, in27xor_0 )
inter16_0 = and( in28xor_0, in29xor_0 )
inter15_0 = and( in30xor_0, in31xor_0 )
inter14_0 = and( inter30_0, inter29_0 )
inter13_0 = and( inter28_0, inter27_0 )
inter12_0 = and( inter26_0, inter25_0 )
inter11_0 = and( inter24_0, inter23_0 )
inter10_0 = and( inter22_0, inter21_0 )
inter9_0 = and( inter20_0, inter19_0 )
inter8_0 = and( inter18_0, inter17_0 )
inter7_0 = and( inter16_0, inter15_0 )
inter6_0 = and( inter14_0, inter13_0 )
inter5_0 = and( inter12_0, inter11_0 )
inter4_0 = and( inter10_0, inter9_0 )
inter3_0 = and( inter8_0, inter7_0 )
inter2_0 = and( inter6_0, inter5_0 )
inter1_0 = and( inter4_0, inter3_0 )
antisat_g_0 = and( inter2_0, inter1_0 )
in0xor_0 = xor( n196, keyinput0 )
in1xor_0 = xor( n198, keyinput1 )
in2xor_0 = xor( n100, keyinput2 )
in3xor_0 = xor( add2_i[10], keyinput3 )
in4xor_0 = xor( add2_i[7], keyinput4 )
in5xor_0 = xor( n112, keyinput5 )
in6xor_0 = xor( add2_i[6], keyinput6 )
in7xor_0 = xor( n174, keyinput7 )
in8xor_0 = xor( add2_i[9], keyinput8 )
in9xor_0 = xor( n97, keyinput9 )
in10xor_0 = xor( add2_i[8], keyinput10 )
in11xor_0 = xor( n169, keyinput11 )
in12xor_0 = xor( add1_i[8], keyinput12 )
in13xor_0 = xor( add1_i[6], keyinput13 )
in14xor_0 = xor( n127, keyinput14 )
in15xor_0 = xor( add2_i[5], keyinput15 )
in16xor_0 = xor( add1_i[7], keyinput16 )
in17xor_0 = xor( n92, keyinput17 )
in18xor_0 = xor( add1_i[5], keyinput18 )
in19xor_0 = xor( n199, keyinput19 )
in20xor_0 = xor( n194, keyinput20 )
in21xor_0 = xor( n102, keyinput21 )
in22xor_0 = xor( n200, keyinput22 )
in23xor_0 = xor( n171, keyinput23 )
in24xor_0 = xor( n111, keyinput24 )
in25xor_0 = xor( add1_i[10], keyinput25 )
in26xor_0 = xor( n183, keyinput26 )
in27xor_0 = xor( add1_i[9], keyinput27 )
in28xor_0 = xor( n201, keyinput28 )
in29xor_0 = xor( n108, keyinput29 )
in30xor_0 = xor( n195, keyinput30 )
in31xor_0 = xor( n104, keyinput31 )
inter30_b_0 = and( in0xor_b_0, in1xor_b_0 )
inter29_b_0 = and( in2xor_b_0, in3xor_b_0 )
inter28_b_0 = and( in4xor_b_0, in5xor_b_0 )
inter27_b_0 = and( in6xor_b_0, in7xor_b_0 )
inter26_b_0 = and( in8xor_b_0, in9xor_b_0 )
inter25_b_0 = and( in10xor_b_0, in11xor_b_0 )
inter24_b_0 = and( in12xor_b_0, in13xor_b_0 )
inter23_b_0 = and( in14xor_b_0, in15xor_b_0 )
inter22_b_0 = and( in16xor_b_0, in17xor_b_0 )
inter21_b_0 = and( in18xor_b_0, in19xor_b_0 )
inter20_b_0 = and( in20xor_b_0, in21xor_b_0 )
inter19_b_0 = and( in22xor_b_0, in23xor_b_0 )
inter18_b_0 = and( in24xor_b_0, in25xor_b_0 )
inter17_b_0 = and( in26xor_b_0, in27xor_b_0 )
inter16_b_0 = and( in28xor_b_0, in29xor_b_0 )
inter15_b_0 = and( in30xor_b_0, in31xor_b_0 )
inter14_b_0 = and( inter30_b_0, inter29_b_0 )
inter13_b_0 = and( inter28_b_0, inter27_b_0 )
inter12_b_0 = and( inter26_b_0, inter25_b_0 )
inter11_b_0 = and( inter24_b_0, inter23_b_0 )
inter10_b_0 = and( inter22_b_0, inter21_b_0 )
inter9_b_0 = and( inter20_b_0, inter19_b_0 )
inter8_b_0 = and( inter18_b_0, inter17_b_0 )
inter7_b_0 = and( inter16_b_0, inter15_b_0 )
inter6_b_0 = and( inter14_b_0, inter13_b_0 )
inter5_b_0 = and( inter12_b_0, inter11_b_0 )
inter4_b_0 = and( inter10_b_0, inter9_b_0 )
inter3_b_0 = and( inter8_b_0, inter7_b_0 )
inter2_b_0 = and( inter6_b_0, inter5_b_0 )
inter1_b_0 = and( inter4_b_0, inter3_b_0 )
inter0_b_0 = and( inter2_b_0, inter1_b_0 )
in0xor_b_0 = xor( n196, keyinput32 )
in1xor_b_0 = xor( n198, keyinput33 )
in2xor_b_0 = xor( n100, keyinput34 )
in3xor_b_0 = xor( add2_i[10], keyinput35 )
in4xor_b_0 = xor( add2_i[7], keyinput36 )
in5xor_b_0 = xor( n112, keyinput37 )
in6xor_b_0 = xor( add2_i[6], keyinput38 )
in7xor_b_0 = xor( n174, keyinput39 )
in8xor_b_0 = xor( add2_i[9], keyinput40 )
in9xor_b_0 = xor( n97, keyinput41 )
in10xor_b_0 = xor( add2_i[8], keyinput42 )
in11xor_b_0 = xor( n169, keyinput43 )
in12xor_b_0 = xor( add1_i[8], keyinput44 )
in13xor_b_0 = xor( add1_i[6], keyinput45 )
in14xor_b_0 = xor( n127, keyinput46 )
in15xor_b_0 = xor( add2_i[5], keyinput47 )
in16xor_b_0 = xor( add1_i[7], keyinput48 )
in17xor_b_0 = xor( n92, keyinput49 )
in18xor_b_0 = xor( add1_i[5], keyinput50 )
in19xor_b_0 = xor( n199, keyinput51 )
in20xor_b_0 = xor( n194, keyinput52 )
in21xor_b_0 = xor( n102, keyinput53 )
in22xor_b_0 = xor( n200, keyinput54 )
in23xor_b_0 = xor( n171, keyinput55 )
in24xor_b_0 = xor( n111, keyinput56 )
in25xor_b_0 = xor( add1_i[10], keyinput57 )
in26xor_b_0 = xor( n183, keyinput58 )
in27xor_b_0 = xor( add1_i[9], keyinput59 )
in28xor_b_0 = xor( n201, keyinput60 )
in29xor_b_0 = xor( n108, keyinput61 )
in30xor_b_0 = xor( n195, keyinput62 )
in31xor_b_0 = xor( n104, keyinput63 )
antisat_gbar_0 = not( inter0_b_0 )
antisat_out = and( antisat_g_0, antisat_gbar_0 )
