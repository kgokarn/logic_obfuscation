# BENCH FILE 
# circuit:array_multiplier8.bench

INPUT(op1_i[0])
INPUT(op1_i[1])
INPUT(op1_i[2])
INPUT(op1_i[3])
INPUT(op1_i[4])
INPUT(op1_i[5])
INPUT(op1_i[6])
INPUT(op1_i[7])
INPUT(op2_i[0])
INPUT(op2_i[1])
INPUT(op2_i[2])
INPUT(op2_i[3])
INPUT(op2_i[4])
INPUT(op2_i[5])
INPUT(op2_i[6])
INPUT(op2_i[7])
INPUT(keyinput1)
INPUT(keyinput0)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
INPUT(keyinput32)
INPUT(keyinput33)
INPUT(keyinput34)
INPUT(keyinput35)
INPUT(keyinput36)
INPUT(keyinput37)
INPUT(keyinput38)
INPUT(keyinput39)
INPUT(keyinput40)
INPUT(keyinput41)
INPUT(keyinput42)
INPUT(keyinput43)
INPUT(keyinput44)
INPUT(keyinput45)
INPUT(keyinput46)
INPUT(keyinput47)
INPUT(keyinput48)
INPUT(keyinput49)
INPUT(keyinput50)
INPUT(keyinput51)
INPUT(keyinput52)
INPUT(keyinput53)
INPUT(keyinput54)
INPUT(keyinput55)
INPUT(keyinput56)
INPUT(keyinput57)
INPUT(keyinput58)
INPUT(keyinput59)
INPUT(keyinput60)
INPUT(keyinput61)
INPUT(keyinput62)
INPUT(keyinput63)
OUTPUT(product_o[0])
OUTPUT(product_o[1])
OUTPUT(product_o[2])
OUTPUT(product_o[3])
OUTPUT(product_o[4])
OUTPUT(product_o[5])
OUTPUT(product_o[6])
OUTPUT(product_o[7])
OUTPUT(product_o[8])
OUTPUT(product_o[9])
OUTPUT(product_o[10])
OUTPUT(product_o[11])
OUTPUT(product_o[12])
OUTPUT(product_o[13])
OUTPUT(product_o[14])
OUTPUT(product_o[15])
product_o[7] = xor( n269, n270 )
product_o[2] = xor( n279, n280 )
product_o[1] = xor( n281, n282 )
product_o[14] = xor( n284, n285 )
product_o[13] = xor( n300, n299 )
n300 = xor( n298, n296 )
product_o[12] = xor( n318, n319 )
n319 = xor( n317, n315 )
n318 = xor( n326, n311 )
n326 = xor( n312, n309 )
n344 = xor( n337, n353 )
product_o[10] = xor( n351, n378 )
n378 = xor( n350, n348 )
n270 = xor( n393, n394 )
n351 = xor( n397, n376 )
n359 = xor( n405_ant0, n370 )
n405 = xor( n371, n368 )
n397 = xor( n377, n374 )
n389 = xor( n430, n431 )
n430 = xor( n432, n433 )
n422 = xor( n453, n417 )
n417 = xor( n411, n454 )
n454 = xor( n410, n409 )
n453 = xor( n416, n414 )
n445 = xor( n403, n401 )
n437 = xor( n473, n474 )
n473 = xor( n475, n476 )
n276 = xor( n506, n507 )
n507 = xor( n508, n509 )
n474 = xor( n510, n511 )
n510 = xor( n512, n513 )
n452 = xor( n514, n466 )
n514 = xor( n465, n463 )
n502 = xor( n540, n541 )
n540 = xor( n542, n543 )
n495 = xor( n555, n556 )
n555 = xor( n557, n558 )
n511 = xor( n530, n559 )
n559 = xor( n527, n529 )
n280 = xor( n580, n581 )
n530 = xor( n592, n523 )
n255 = not( n283 )
n283 = nor( n288, n287 )
n364 = nand( n407, n408 )
n408 = nand( n409, n410 )
n407 = nand( n409, n411 )
n353 = xnor( n335, n338 )
n592 = xnor( n521, n524 )
n267 = nor( n259, n258, n270 )
n393 = xnor( n395, n396 )
n581 = xnor( n582, n583 )
n383 = xnor( n445, n404 )
n404 = xnor( n422, n446 )
n446 = xnor( n420, n423 )
n325 = xnor( n352, n344 )
n352 = xnor( n343, n341 )
n410 = nor( n257, n517 )
n272 = xnor( n441, n442 )
n441 = xnor( n443, n444 )
n370 = xnor( n365, n406 )
n406 = xnor( n364, n363 )
n376 = xnor( n359, n398 )
n398 = xnor( n356, n358 )
n311 = xnor( n306, n327 )
n327 = xnor( n305, n304 )
n552 = xnor( n576, n577 )
n576 = xnor( n578, n579 )
n541 = xnor( n584, n585 )
n584 = xnor( n586, n587 )
n466 = xnor( n515, n460 )
n515 = xnor( n459, n457 )
n485 = xnor( n502, n503 )
n503 = xnor( n504, n505 )
n266 = xnor( n389, n390 )
n390 = xnor( n391, n392 )
n556 = xnor( n588, n589 )
n589 = xnor( n590, n591 )
n299 = xnor( n293, n301 )
n301 = xnor( n292, n291 )
n337 = xnor( n332, n360 )
n360 = xnor( n331, n330 )
n261 = xnor( n382, n383 )
n382 = xnor( n384, n385 )
n480 = xnor( n495, n496 )
n496 = xnor( n497, n498 )
n547 = xnor( n569, n570 )
n570 = xnor( n571, n572 )
n273 = xnor( n484, n485 )
n484 = xnor( n486, n487 )
n277 = xnor( n551, n552 )
n551 = xnor( n553, n554 )
n394 = xnor( n437, n438 )
n438 = xnor( n439, n440 )
n506 = xnor( n547, n548 )
n548 = xnor( n549, n550 )
n442 = xnor( n480, n481 )
n481 = xnor( n482, n483 )
n431 = xnor( n452, n488 )
n488 = xnor( n449, n451 )
n498 = nand( n537, n538 )
n537 = or( n505, n504 )
n538 = nand( n502, n539 )
n539 = nand( n504, n505 )
n358 = nand( n399, n400 )
n399 = nand( n404, n403 )
n400 = nand( n401, n402 )
n402 = or( n403, n404 )
n324 = nand( n346, n347 )
n346 = nand( n351, n350 )
n347 = nand( n348, n349 )
n349 = or( n350, n351 )
n423 = nand( n447, n448 )
n447 = nand( n452, n451 )
n448 = nand( n449, n450 )
n450 = or( n451, n452 )
n338 = nand( n354, n355 )
n354 = nand( n359, n358 )
n355 = nand( n356, n357 )
n357 = or( n358, n359 )
n384 = and( n427, n428 )
n427 = or( n392, n391 )
n428 = nand( n389, n429 )
n429 = nand( n391, n392 )
n579 = and( n605, n583 )
n605 = nand( n582, n580 )
n482 = and( n499, n500 )
n499 = or( n486, n487 )
n500 = nand( n485, n501 )
n501 = nand( n486, n487 )
n439 = and( n477, n478 )
n477 = or( n443, n444 )
n478 = nand( n442, n479 )
n479 = nand( n443, n444 )
n459 = and( n525, n526 )
n525 = or( n530, n529 )
n526 = nand( n527, n528 )
n528 = nand( n529, n530 )
n263 = and( n386, n387 )
n386 = nand( n267, n268 )
n387 = nand( n266, n388 )
n388 = or( n267, n268 )
n343 = and( n372, n373 )
n372 = nand( n376, n377 )
n373 = nand( n374, n375 )
n375 = or( n376, n377 )
n543 = nand( n566, n567 )
n566 = or( n550, n549 )
n567 = nand( n547, n568 )
n568 = nand( n549, n550 )
product_o[15] = nor( n259, n283, n257 )
n432 = nand( n470, n471 )
n470 = or( n440, n439 )
n471 = nand( n437, n472 )
n472 = nand( n439, n440 )
n350 = nand( n379, n380 )
n379 = or( n264, n263 )
n380 = nand( n261, n381 )
n381 = nand( n263, n264 )
n475 = nand( n492, n493 )
n492 = or( n483, n482 )
n493 = nand( n480, n494 )
n494 = nand( n482, n483 )
n512 = nand( n534, n535 )
n534 = nand( n495, n498 )
n535 = nand( n497, n536 )
n536 = or( n498, n495 )
n317 = nand( n320, n321 )
n320 = nand( n325, n324 )
n321 = nand( n322, n323 )
n323 = or( n324, n325 )
n465 = nand( n531, n532 )
n531 = nand( n511, n512 )
n532 = nand( n513, n533 )
n533 = or( n512, n511 )
n416 = nand( n461, n462 )
n461 = nand( n466, n465 )
n462 = nand( n463, n464 )
n464 = or( n465, n466 )
n298 = nand( n313, n314 )
n313 = nand( n318, n317 )
n314 = nand( n315, n316 )
n316 = or( n317, n318 )
n557 = nand( n563, n564 )
n563 = nand( n541, n543 )
n564 = nand( n542, n565 )
n565 = or( n543, n541 )
n377 = nand( n424, n425 )
n424 = or( n383, n384 )
n425 = nand( n385, n426 )
n426 = nand( n383, n384 )
n312 = nand( n339, n340 )
n339 = or( n344, n343 )
n340 = nand( n341, n342 )
n342 = nand( n343, n344 )
n371 = nand( n418, n419 )
n418 = nand( n422, n423 )
n419 = nand( n420, n421 )
n421 = or( n422, n423 )
n331 = nand( n361, n362 )
n362 = nand( n363, n364 )
n361 = nand( n363, n365 )
n305 = nand( n328, n329 )
n329 = nand( n330, n331 )
n328 = nand( n330, n332 )
n292 = nand( n302, n303 )
n303 = nand( n304, n305 )
n302 = nand( n304, n306 )
n306 = nand( n333, n334 )
n333 = nand( n337, n338 )
n334 = nand( n335, n336 )
n336 = or( n337, n338 )
n365 = nand( n412, n413 )
n412 = nand( n417, n416 )
n413 = nand( n414, n415 )
n415 = or( n416, n417 )
n332 = nand( n366, n367 )
n366 = nand( n370, n371 )
n367 = nand( n368, n369 )
n369 = or( n370, n371 )
n293 = nand( n307, n308 )
n307 = nand( n311, n312 )
n308 = nand( n309, n310 )
n310 = or( n311, n312 )
n529 = and( n560, n561 )
n560 = nand( n556, n557 )
n561 = nand( n558, n562 )
n562 = or( n557, n556 )
n288 = nand( n294, n295 )
n294 = nand( n299, n298 )
n295 = nand( n296, n297 )
n297 = or( n298, n299 )
n583 = nand( product_o[0], n580 )
n287 = nand( n289, n290 )
n290 = nand( n291, n292 )
n289 = nand( n291, n293 )
n411 = nand( n455, n456 )
n455 = or( n460, n459 )
n456 = nand( n457, n458 )
n458 = nand( n459, n460 )
n517 = and( n519, n520 )
n519 = nand( n524, n523 )
n520 = nand( n521, n522 )
n522 = or( n523, n524 )
n569 = and( n602, n603 )
n602 = or( n577, n579 )
n603 = nand( n578, n604 )
n604 = nand( n579, n577 )
n523 = nand( n593, n594 )
n593 = or( n591, n588 )
n594 = nand( n590, n595 )
n595 = nand( n588, n591 )
n549 = and( n573, n574 )
n573 = or( n553, n554 )
n574 = nand( n552, n575 )
n575 = nand( n553, n554 )
n451 = nand( n489, n490 )
n489 = nand( n474, n475 )
n490 = nand( n476, n491 )
n491 = or( n475, n474 )
n403 = nand( n467, n468 )
n467 = nand( n431, n432 )
n468 = nand( n433, n469 )
n469 = or( n432, n431 )
n585 = nand( n599, n600 )
n599 = or( n572, n569 )
n600 = nand( n571, n601 )
n601 = nand( n569, n572 )
n391 = and( n434, n435 )
n434 = or( n395, n396 )
n435 = nand( n394, n436 )
n436 = nand( n395, n396 )
n504 = and( n544, n545 )
n544 = or( n508, n509 )
n545 = nand( n506, n546 )
n546 = nand( n508, n509 )
n588 = and( n596, n597 )
n596 = nand( n586, n585 )
n597 = nand( n587, n598 )
n598 = or( n585, n586 )
n409 = nor( n257, n260 )
product_o[11] = xnor( n325, n345 )
n345 = xnor( n322, n324 )
product_o[8] = xnor( n265, n266 )
n265 = xnor( n267, n268 )
product_o[9] = xnor( n261, n262 )
n262 = xnor( n263, n264 )
n279 = nor( n260, n258 )
n553 = nand( op2_i[2], n280, op1_i[0] )
n486 = nand( op1_i[0], n276, op2_i[4] )
n395 = nand( op1_i[0], n272, op2_i[6] )
n443 = nand( op2_i[5], op1_i[0], n273 )
n577 = nand( op1_i[2], op2_i[1] )
n572 = nand( op2_i[1], op1_i[3] )
n550 = nand( op1_i[2], op2_i[2] )
n460 = nand( n256, n516 )
n516 = nand( n517, n518 )
n256 = not( n410 )
n518 = nand( op1_i[7], op2_i[1] )
n554 = nand( op1_i[1], op2_i[2] )
n508 = nand( op2_i[3], op1_i[0], n277 )
n580 = and( op2_i[1], op1_i[1] )
n586 = and( op2_i[1], op1_i[4] )
n587 = and( op2_i[0], op1_i[5] )
n285 = nand( op2_i[7], op1_i[7] )
n284 = nand( n255, n286 )
n286 = nand( n287, n288 )
n582 = and( op2_i[0], op1_i[2] )
n578 = and( op2_i[0], op1_i[3] )
n571 = and( op2_i[0], op1_i[4] )
product_o[0] = and( op1_i[0], op2_i[0] )
n505 = nand( op2_i[3], op1_i[2] )
n591 = nand( op2_i[1], op1_i[5] )
n483 = nand( op2_i[4], op1_i[2] )
n440 = nand( op2_i[5], op1_i[2] )
n487 = nand( op2_i[4], op1_i[1] )
n444 = nand( op2_i[5], op1_i[1] )
n524 = and( op2_i[1], op1_i[6] )
n257 = not( op1_i[7] )
n509 = nand( op2_i[3], op1_i[1] )
n457 = and( op2_i[2], op1_i[6] )
n269 = nand( op2_i[7], op1_i[0] )
n590 = and( op2_i[0], op1_i[6] )
n497 = and( op2_i[3], op1_i[3] )
n521 = and( op1_i[7], op2_i[0] )
n449 = and( op2_i[4], op1_i[4] )
n558 = and( op1_i[4], op2_i[2] )
n513 = and( op2_i[3], op1_i[4] )
n476 = and( op2_i[4], op1_i[3] )
n463 = and( op2_i[3], op1_i[5] )
n414 = and( op2_i[3], op1_i[6] )
n260 = not( op2_i[2] )
n542 = and( op1_i[3], op2_i[2] )
n527 = and( op1_i[5], op2_i[2] )
n392 = nand( op2_i[6], op1_i[2] )
n264 = nand( op2_i[7], op1_i[2] )
n363 = and( op2_i[3], op1_i[7] )
n330 = and( op2_i[4], op1_i[7] )
n304 = and( op2_i[5], op1_i[7] )
n396 = nand( op2_i[6], op1_i[1] )
n268 = and( op2_i[7], op1_i[1] )
n385 = and( op2_i[6], op1_i[3] )
n341 = and( op2_i[6], op1_i[5] )
product_o[4] = xnor( n606, n276 )
n606 = nand( op1_i[0], op2_i[4] )
product_o[5] = xnor( n273, n607 )
n607 = nand( op1_i[0], op2_i[5] )
n420 = and( op2_i[4], op1_i[5] )
n356 = and( op2_i[5], op1_i[5] )
n335 = and( op2_i[5], op1_i[6] )
n322 = and( op2_i[7], op1_i[4] )
n259 = not( op2_i[7] )
n433 = and( op2_i[5], op1_i[3] )
n401 = and( op2_i[5], op1_i[4] )
n368 = and( op2_i[4], op1_i[6] )
n374 = and( op2_i[6], op1_i[4] )
n348 = and( op2_i[7], op1_i[3] )
n309 = and( op2_i[6], op1_i[6] )
n258 = not( op1_i[0] )
product_o[6] = xnor( n271, n272 )
n271 = nand( op2_i[6], op1_i[0] )
n291 = and( op2_i[6], op1_i[7] )
n281 = nand( op2_i[0], op1_i[1] )
n282 = nand( op1_i[0], op2_i[1] )
product_o[3] = xnor( n277, n608 )
n608 = nand( op1_i[0], op2_i[3] )
n315 = and( op2_i[7], op1_i[5] )
n296 = and( op2_i[7], op1_i[6] )
n405_ant0 = xor( n405, antisat_out )
inter30_0 = and( in0xor_0, in1xor_0 )
inter29_0 = and( in2xor_0, in3xor_0 )
inter28_0 = and( in4xor_0, in5xor_0 )
inter27_0 = and( in6xor_0, in7xor_0 )
inter26_0 = and( in8xor_0, in9xor_0 )
inter25_0 = and( in10xor_0, in11xor_0 )
inter24_0 = and( in12xor_0, in13xor_0 )
inter23_0 = and( in14xor_0, in15xor_0 )
inter22_0 = and( in16xor_0, in17xor_0 )
inter21_0 = and( in18xor_0, in19xor_0 )
inter20_0 = and( in20xor_0, in21xor_0 )
inter19_0 = and( in22xor_0, in23xor_0 )
inter18_0 = and( in24xor_0, in25xor_0 )
inter17_0 = and( in26xor_0, in27xor_0 )
inter16_0 = and( in28xor_0, in29xor_0 )
inter15_0 = and( in30xor_0, in31xor_0 )
inter14_0 = and( inter30_0, inter29_0 )
inter13_0 = and( inter28_0, inter27_0 )
inter12_0 = and( inter26_0, inter25_0 )
inter11_0 = and( inter24_0, inter23_0 )
inter10_0 = and( inter22_0, inter21_0 )
inter9_0 = and( inter20_0, inter19_0 )
inter8_0 = and( inter18_0, inter17_0 )
inter7_0 = and( inter16_0, inter15_0 )
inter6_0 = and( inter14_0, inter13_0 )
inter5_0 = and( inter12_0, inter11_0 )
inter4_0 = and( inter10_0, inter9_0 )
inter3_0 = and( inter8_0, inter7_0 )
inter2_0 = and( inter6_0, inter5_0 )
inter1_0 = and( inter4_0, inter3_0 )
antisat_g_0 = and( inter2_0, inter1_0 )
in0xor_0 = xor( n603, keyinput0 )
in1xor_0 = xor( n596, keyinput1 )
in2xor_0 = xor( n465, keyinput2 )
in3xor_0 = xor( n587, keyinput3 )
in4xor_0 = xor( n502, keyinput4 )
in5xor_0 = xor( n461, keyinput5 )
in6xor_0 = xor( n525, keyinput6 )
in7xor_0 = xor( op1_i[1], keyinput7 )
in8xor_0 = xor( op1_i[2], keyinput8 )
in9xor_0 = xor( op2_i[0], keyinput9 )
in10xor_0 = xor( n489, keyinput10 )
in11xor_0 = xor( n511, keyinput11 )
in12xor_0 = xor( op2_i[1], keyinput12 )
in13xor_0 = xor( n558, keyinput13 )
in14xor_0 = xor( n594, keyinput14 )
in15xor_0 = xor( op1_i[3], keyinput15 )
in16xor_0 = xor( op1_i[7], keyinput16 )
in17xor_0 = xor( op2_i[2], keyinput17 )
in18xor_0 = xor( n547, keyinput18 )
in19xor_0 = xor( op1_i[0], keyinput19 )
in20xor_0 = xor( n537, keyinput20 )
in21xor_0 = xor( n555, keyinput21 )
in22xor_0 = xor( op1_i[4], keyinput22 )
in23xor_0 = xor( n551, keyinput23 )
in24xor_0 = xor( op2_i[3], keyinput24 )
in25xor_0 = xor( n582, keyinput25 )
in26xor_0 = xor( n475, keyinput26 )
in27xor_0 = xor( op1_i[5], keyinput27 )
in28xor_0 = xor( n518, keyinput28 )
in29xor_0 = xor( op1_i[6], keyinput29 )
in30xor_0 = xor( op2_i[4], keyinput30 )
in31xor_0 = xor( n457, keyinput31 )
inter30_b_0 = and( in0xor_b_0, in1xor_b_0 )
inter29_b_0 = and( in2xor_b_0, in3xor_b_0 )
inter28_b_0 = and( in4xor_b_0, in5xor_b_0 )
inter27_b_0 = and( in6xor_b_0, in7xor_b_0 )
inter26_b_0 = and( in8xor_b_0, in9xor_b_0 )
inter25_b_0 = and( in10xor_b_0, in11xor_b_0 )
inter24_b_0 = and( in12xor_b_0, in13xor_b_0 )
inter23_b_0 = and( in14xor_b_0, in15xor_b_0 )
inter22_b_0 = and( in16xor_b_0, in17xor_b_0 )
inter21_b_0 = and( in18xor_b_0, in19xor_b_0 )
inter20_b_0 = and( in20xor_b_0, in21xor_b_0 )
inter19_b_0 = and( in22xor_b_0, in23xor_b_0 )
inter18_b_0 = and( in24xor_b_0, in25xor_b_0 )
inter17_b_0 = and( in26xor_b_0, in27xor_b_0 )
inter16_b_0 = and( in28xor_b_0, in29xor_b_0 )
inter15_b_0 = and( in30xor_b_0, in31xor_b_0 )
inter14_b_0 = and( inter30_b_0, inter29_b_0 )
inter13_b_0 = and( inter28_b_0, inter27_b_0 )
inter12_b_0 = and( inter26_b_0, inter25_b_0 )
inter11_b_0 = and( inter24_b_0, inter23_b_0 )
inter10_b_0 = and( inter22_b_0, inter21_b_0 )
inter9_b_0 = and( inter20_b_0, inter19_b_0 )
inter8_b_0 = and( inter18_b_0, inter17_b_0 )
inter7_b_0 = and( inter16_b_0, inter15_b_0 )
inter6_b_0 = and( inter14_b_0, inter13_b_0 )
inter5_b_0 = and( inter12_b_0, inter11_b_0 )
inter4_b_0 = and( inter10_b_0, inter9_b_0 )
inter3_b_0 = and( inter8_b_0, inter7_b_0 )
inter2_b_0 = and( inter6_b_0, inter5_b_0 )
inter1_b_0 = and( inter4_b_0, inter3_b_0 )
inter0_b_0 = and( inter2_b_0, inter1_b_0 )
in0xor_b_0 = xor( n603, keyinput32 )
in1xor_b_0 = xor( n596, keyinput33 )
in2xor_b_0 = xor( n465, keyinput34 )
in3xor_b_0 = xor( n587, keyinput35 )
in4xor_b_0 = xor( n502, keyinput36 )
in5xor_b_0 = xor( n461, keyinput37 )
in6xor_b_0 = xor( n525, keyinput38 )
in7xor_b_0 = xor( op1_i[1], keyinput39 )
in8xor_b_0 = xor( op1_i[2], keyinput40 )
in9xor_b_0 = xor( op2_i[0], keyinput41 )
in10xor_b_0 = xor( n489, keyinput42 )
in11xor_b_0 = xor( n511, keyinput43 )
in12xor_b_0 = xor( op2_i[1], keyinput44 )
in13xor_b_0 = xor( n558, keyinput45 )
in14xor_b_0 = xor( n594, keyinput46 )
in15xor_b_0 = xor( op1_i[3], keyinput47 )
in16xor_b_0 = xor( op1_i[7], keyinput48 )
in17xor_b_0 = xor( op2_i[2], keyinput49 )
in18xor_b_0 = xor( n547, keyinput50 )
in19xor_b_0 = xor( op1_i[0], keyinput51 )
in20xor_b_0 = xor( n537, keyinput52 )
in21xor_b_0 = xor( n555, keyinput53 )
in22xor_b_0 = xor( op1_i[4], keyinput54 )
in23xor_b_0 = xor( n551, keyinput55 )
in24xor_b_0 = xor( op2_i[3], keyinput56 )
in25xor_b_0 = xor( n582, keyinput57 )
in26xor_b_0 = xor( n475, keyinput58 )
in27xor_b_0 = xor( op1_i[5], keyinput59 )
in28xor_b_0 = xor( n518, keyinput60 )
in29xor_b_0 = xor( op1_i[6], keyinput61 )
in30xor_b_0 = xor( op2_i[4], keyinput62 )
in31xor_b_0 = xor( n457, keyinput63 )
antisat_gbar_0 = not( inter0_b_0 )
antisat_out = and( antisat_g_0, antisat_gbar_0 )
