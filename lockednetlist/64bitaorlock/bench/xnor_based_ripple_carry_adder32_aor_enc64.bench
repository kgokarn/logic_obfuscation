# BENCH FILE 
# circuit:xnor_based_ripple_carry_adder32.bench

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add1_i[16])
INPUT(add1_i[17])
INPUT(add1_i[18])
INPUT(add1_i[19])
INPUT(add1_i[20])
INPUT(add1_i[21])
INPUT(add1_i[22])
INPUT(add1_i[23])
INPUT(add1_i[24])
INPUT(add1_i[25])
INPUT(add1_i[26])
INPUT(add1_i[27])
INPUT(add1_i[28])
INPUT(add1_i[29])
INPUT(add1_i[30])
INPUT(add1_i[31])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(add2_i[16])
INPUT(add2_i[17])
INPUT(add2_i[18])
INPUT(add2_i[19])
INPUT(add2_i[20])
INPUT(add2_i[21])
INPUT(add2_i[22])
INPUT(add2_i[23])
INPUT(add2_i[24])
INPUT(add2_i[25])
INPUT(add2_i[26])
INPUT(add2_i[27])
INPUT(add2_i[28])
INPUT(add2_i[29])
INPUT(add2_i[30])
INPUT(add2_i[31])
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
INPUT(keyinput32)
INPUT(keyinput33)
INPUT(keyinput34)
INPUT(keyinput35)
INPUT(keyinput36)
INPUT(keyinput37)
INPUT(keyinput38)
INPUT(keyinput39)
INPUT(keyinput40)
INPUT(keyinput41)
INPUT(keyinput42)
INPUT(keyinput43)
INPUT(keyinput44)
INPUT(keyinput45)
INPUT(keyinput46)
INPUT(keyinput47)
INPUT(keyinput48)
INPUT(keyinput49)
INPUT(keyinput50)
INPUT(keyinput51)
INPUT(keyinput52)
INPUT(keyinput53)
INPUT(keyinput54)
INPUT(keyinput55)
INPUT(keyinput56)
INPUT(keyinput57)
INPUT(keyinput58)
INPUT(keyinput59)
INPUT(keyinput60)
INPUT(keyinput61)
INPUT(keyinput62)
INPUT(keyinput63)
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
OUTPUT(result_o[17])
OUTPUT(result_o[18])
OUTPUT(result_o[19])
OUTPUT(result_o[20])
OUTPUT(result_o[21])
OUTPUT(result_o[22])
OUTPUT(result_o[23])
OUTPUT(result_o[24])
OUTPUT(result_o[25])
OUTPUT(result_o[26])
OUTPUT(result_o[27])
OUTPUT(result_o[28])
OUTPUT(result_o[29])
OUTPUT(result_o[30])
OUTPUT(result_o[31])
OUTPUT(result_o[32])
xenc57 = xor( add2_i[8], n345 )
n203 = xor( add2_i[3], add1_i[3] )
result_o[29] = xor( add2_i[29], n331 )
result_o[28] = xor( xenc1, n228 )
result_o[25] = xor( n237, add2_i[25] )
result_o[24] = xor( xenc9, add2_i[24] )
result_o[22] = xor( add2_i[22], n250 )
result_o[16] = xor( add2_i[16], xenc46 )
result_o[15] = xor( n284, add2_i[15] )
result_o[14] = xor( add2_i[14], n288 )
result_o[13] = xor( add2_i[13], n292 )
xenc53 = xor( add2_i[12], n296 )
result_o[10] = xor( add2_i[10], xenc19 )
n190 = xor( add1_i[7], add2_i[7] )
n199 = xor( add1_i[4], add2_i[4] )
n216 = xor( add1_i[2], add2_i[2] )
n267 = xor( add1_i[0], add2_i[0] )
n326 = xnor( n277, n348 )
n327 = not( xenc26 )
n328 = not( xenc23 )
n325 = or( n217, xenc33, n218 )
n340 = nand( xenc28, add1_i[18] )
n329 = not( n274 )
n322 = nand( xenc41, n199, n201 )
n339 = nand( xenc58, add2_i[17], add1_i[18] )
n313 = nand( xenc21, n321, n322, xenc47 )
n335 = and( n339, add2_i[18], n340 )
n320 = nand( n195, add2_i[5], add1_i[5] )
n249 = nand( n248, n251, add2_i[22] )
xenc61 = xor( add2_i[9], n187 )
result_o[11] = xor( add2_i[11], n300 )
result_o[17] = xor( add2_i[17], xenc58 )
result_o[19] = xor( add2_i[19], xenc16 )
result_o[20] = xor( add2_i[20], n260 )
result_o[21] = xor( add2_i[21], xenc14 )
result_o[26] = xor( add2_i[26], xenc56 )
xenc50 = xor( add2_i[30], n328 )
result_o[31] = xor( n206, add2_i[31] )
n343 = not( add1_i[24] )
n342 = not( add1_i[19] )
n346 = not( add1_i[25] )
n330 = not( n214 )
n331 = not( n330 )
n332 = and( n321, n322 )
n333 = nand( n209, n208 )
n268 = and( add1_i[1], add2_i[1] )
n334 = or( add1_i[0], add2_i[0] )
n270 = nand( xenc60, n335 )
n336 = or( n273, add1_i[18] )
n337 = nand( n212, n213 )
n338 = nand( n235, n236 )
n269 = and( n339, n340 )
n341 = nand( xenc4, xenc52 )
n263 = xnor( n264, n342 )
n241 = xnor( n242, n343 )
n344 = not( n188 )
n345 = not( n344 )
n237 = xnor( n238, n346 )
n350 = not( add1_i[13] )
n217 = nor( xenc12, n268 )
n347 = xor( n242, add1_i[24] )
n349 = not( add1_i[15] )
n348 = not( add1_i[17] )
n276 = xnor( n277, n348 )
n284 = xnor( n285, n349 )
n292 = xnor( n293, n350 )
n351 = not( add1_i[14] )
n352 = not( add1_i[16] )
n288 = xnor( xenc6, n351 )
n280 = xnor( n281, xenc11 )
n353 = nor( add1_i[0], add2_i[0], n367 )
n362 = not( add1_i[29] )
n355 = not( add1_i[12] )
n354 = not( add1_i[20] )
n356 = not( add1_i[30] )
n260 = xnor( n259, n354 )
n296 = xnor( n297, xenc0 )
n210 = xnor( n211, n356 )
n357 = xor( add1_i[6], add2_i[6] )
n361 = not( add1_i[21] )
n358 = not( add1_i[26] )
n360 = not( add1_i[31] )
n233 = xnor( n234, xenc51 )
n359 = xnor( add1_i[2], add2_i[2] )
n206 = xnor( xenc15, n360 )
n255 = xnor( xenc39, xenc54 )
n214 = xnor( n215, n362 )
n183 = not( n200 )
n181 = not( n193 )
result_o[7] = nor( n189, n190 )
n189 = nor( xenc30, n192 )
xenc5 = nor( n199, n369, n200 )
result_o[0] = not( n267 )
n366 = not( add1_i[11] )
n365 = not( add1_i[9] )
n195 = xor( add1_i[6], add2_i[6] )
n193 = xnor( add1_i[5], add2_i[5] )
n218 = nor( add2_i[1], add1_i[1] )
n200 = nor( add2_i[3], add1_i[3] )
n319 = nand( add1_i[6], add2_i[6] )
n221 = nand( xenc20, n178 )
n228 = xnor( add2_i[28], n178 )
xenc38 = xor( n363, n246 )
n363 = xor( add1_i[23], add2_i[23] )
n250 = and( n251, n248 )
n315 = nand( add2_i[7], add1_i[7] )
n321 = nand( add1_i[4], add2_i[4] )
xenc49 = xnor( add2_i[18], xenc34 )
n364 = nand( n269, n272 )
n178 = not( add1_i[28] )
n186 = not( add2_i[27] )
n196 = nor( xenc3, n198 )
n198 = and( add1_i[5], add2_i[5] )
result_o[1] = nor( n265, n266 )
n265 = nor( n367, n218 )
n266 = nor( add1_i[0], n267 )
n304 = and( n305, n302 )
n239 = nand( add1_i[24], n242 )
n309 = nand( n310, xenc48 )
n187 = xnor( n309, n365 )
n300 = xnor( xenc36, xenc43 )
n367 = and( add1_i[1], add2_i[1] )
n312 = nand( xenc47, n316 )
n179 = not( n192 )
n316 = nand( n190, xenc10 )
n317 = nand( xenc21, n318 )
n368 = and( n324, xenc31 )
n369 = and( n202, xenc31 )
n324 = nand( add1_i[2], add2_i[2] )
n323 = nand( add2_i[3], add1_i[3] )
n202 = and( n325, n324 )
result_o[3] = nor( n202, n203 )
n201 = nand( n325, n368 )
n212 = nand( add1_i[29], n215 )
n290 = nand( n293, add1_i[13] )
n298 = nand( add1_i[11], xenc43 )
n307 = nand( n309, add1_i[9] )
n215 = nand( xenc55, n220 )
n220 = nand( add2_i[28], n221 )
n293 = nand( xenc13, n294 )
n301 = nand( xenc18, n302 )
n303 = nand( add2_i[10], xenc19 )
n242 = nand( n244, n243 )
n244 = nand( xenc8, add2_i[23] )
n272 = or( n273, add1_i[18] )
n264 = nand( n270, n269 )
n261 = nand( add1_i[19], n264 )
n231 = nand( add1_i[26], xenc40 )
n246 = nand( n249, n248 )
n273 = nand( xenc24, n274 )
n274 = nand( add1_i[17], n277 )
n204 = nand( add1_i[31], n333 )
n208 = nand( add1_i[30], n337 )
n253 = nand( add1_i[21], xenc39 )
n277 = nand( n279, n278 )
n207 = nand( n209, n208 )
n211 = nand( n212, n213 )
n234 = nand( n235, n236 )
n256 = nand( n257, xenc42 )
n281 = nand( n283, n282 )
n282 = nand( n285, add1_i[15] )
n305 = or( n306, add1_i[10] )
n302 = nand( add1_i[10], n306 )
n188 = xnor( n314, add1_i[8] )
n235 = nand( add1_i[25], n238 )
n248 = nand( add1_i[22], xenc63 )
n251 = or( xenc63, add1_i[22] )
n286 = nand( add1_i[14], xenc6 )
n294 = nand( add1_i[12], n297 )
n306 = nand( n308, n307 )
n311 = nand( n312, n313, add1_i[8] )
n314 = nand( n313, n312 )
result_o[6] = nor( n196, n357 )
xenc37 = xnor( add2_i[27], xenc22 )
n180 = not( n357 )
n219 = nand( add1_i[28], xenc1 )
n229 = or( xenc22, n186 )
n226 = nand( xenc4, xenc52 )
n238 = nand( xenc27, n240 )
n252 = nand( n254, n253 )
n285 = nand( xenc7, n286 )
n289 = nand( n291, n290 )
n318 = nand( n181, n357 )
n192 = nand( xenc45, xenc29 )
xenc62 = nand( n204, xenc35 )
xenc25 = nor( n332, n181 )
n205 = nand( add2_i[31], n206 )
n197 = nor( n332, n193 )
n191 = nor( n193, n332, xenc17 )
n227 = nand( n229, n225 )
n222 = nand( xenc59, n224 )
n224 = nand( n225, n186 )
n243 = nand( add1_i[23], n246 )
n245 = or( n246, add1_i[23] )
n258 = nand( add1_i[20], n259 )
n257 = nand( add2_i[20], n260 )
n259 = nand( n261, xenc32 )
n278 = nand( add1_i[16], n281 )
n283 = nand( add2_i[15], n284 )
n297 = nand( n299, xenc44 )
n310 = nand( n188, add2_i[8] )
xenc2 = nor( n216, n353, n218 )
n209 = nand( add2_i[30], xenc26 )
n213 = nand( add2_i[29], n214 )
n223 = or( n341, add1_i[27] )
n225 = nand( add1_i[27], n341 )
n230 = xnor( n226, add1_i[27] )
n232 = nand( add2_i[26], xenc56 )
n236 = nand( add2_i[25], n237 )
n240 = nand( n241, add2_i[24] )
n254 = nand( xenc14, add2_i[21] )
n262 = nand( add2_i[19], xenc16 )
n275 = nand( n276, add2_i[17] )
n279 = nand( xenc46, add2_i[16] )
n287 = nand( add2_i[14], n288 )
n291 = nand( add2_i[13], n292 )
n295 = nand( add2_i[12], n296 )
n299 = nand( add2_i[11], n300 )
n308 = nand( add2_i[9], n187 )
xenc0 = or( n355, keyinput0 )
xenc1 = and( n227, keyinput1 )
result_o[2] = and( xenc2, keyinput2 )
xenc3 = and( n197, keyinput3 )
xenc4 = and( n231, keyinput4 )
result_o[4] = and( xenc5, keyinput5 )
xenc6 = and( n289, keyinput6 )
xenc7 = and( n287, keyinput7 )
xenc8 = and( n245, keyinput8 )
xenc9 = and( n347, keyinput9 )
xenc10 = or( n317, keyinput10 )
xenc11 = and( n352, keyinput11 )
xenc12 = and( n334, keyinput12 )
xenc13 = or( n295, keyinput13 )
xenc14 = or( n255, keyinput14 )
xenc15 = or( n207, keyinput15 )
xenc16 = or( n263, keyinput16 )
xenc17 = or( n180, keyinput17 )
xenc18 = and( n303, keyinput18 )
xenc19 = and( n304, keyinput19 )
xenc20 = and( n222, keyinput20 )
xenc21 = or( n179, keyinput21 )
xenc22 = and( n230, keyinput22 )
xenc23 = and( n327, keyinput23 )
xenc24 = or( n275, keyinput24 )
result_o[5] = or( xenc25, keyinput25 )
xenc26 = or( n210, keyinput26 )
xenc27 = and( n239, keyinput27 )
xenc28 = and( n329, keyinput28 )
xenc29 = or( n320, keyinput29 )
xenc30 = and( n191, keyinput30 )
xenc31 = or( n323, keyinput31 )
xenc32 = or( n262, keyinput32 )
xenc33 = and( n359, keyinput33 )
xenc34 = and( n364, keyinput34 )
xenc35 = or( n205, keyinput35 )
xenc36 = or( n366, keyinput36 )
result_o[27] = and( xenc37, keyinput37 )
result_o[23] = or( xenc38, keyinput38 )
xenc39 = or( n256, keyinput39 )
xenc40 = and( n338, keyinput40 )
xenc41 = and( n183, keyinput41 )
xenc42 = or( n258, keyinput42 )
xenc43 = and( n301, keyinput43 )
xenc44 = and( n298, keyinput44 )
xenc45 = and( n319, keyinput45 )
xenc46 = and( n280, keyinput46 )
xenc47 = or( n315, keyinput47 )
xenc48 = or( n311, keyinput48 )
result_o[18] = and( xenc49, keyinput49 )
result_o[30] = and( xenc50, keyinput50 )
xenc51 = or( n358, keyinput51 )
xenc52 = or( n232, keyinput52 )
result_o[12] = and( xenc53, keyinput53 )
xenc54 = and( n361, keyinput54 )
xenc55 = and( n219, keyinput55 )
xenc56 = and( n233, keyinput56 )
result_o[8] = or( xenc57, keyinput57 )
xenc58 = and( n326, keyinput58 )
xenc59 = and( n223, keyinput59 )
xenc60 = and( n336, keyinput60 )
result_o[9] = and( xenc61, keyinput61 )
result_o[32] = or( xenc62, keyinput62 )
xenc63 = or( n252, keyinput63 )
