# BENCH FILE 
# circuit:almost_correct_adder32.bench

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add1_i[16])
INPUT(add1_i[17])
INPUT(add1_i[18])
INPUT(add1_i[19])
INPUT(add1_i[20])
INPUT(add1_i[21])
INPUT(add1_i[22])
INPUT(add1_i[23])
INPUT(add1_i[24])
INPUT(add1_i[25])
INPUT(add1_i[26])
INPUT(add1_i[27])
INPUT(add1_i[28])
INPUT(add1_i[29])
INPUT(add1_i[30])
INPUT(add1_i[31])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(add2_i[16])
INPUT(add2_i[17])
INPUT(add2_i[18])
INPUT(add2_i[19])
INPUT(add2_i[20])
INPUT(add2_i[21])
INPUT(add2_i[22])
INPUT(add2_i[23])
INPUT(add2_i[24])
INPUT(add2_i[25])
INPUT(add2_i[26])
INPUT(add2_i[27])
INPUT(add2_i[28])
INPUT(add2_i[29])
INPUT(add2_i[30])
INPUT(add2_i[31])
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
INPUT(keyinput32)
INPUT(keyinput33)
INPUT(keyinput34)
INPUT(keyinput35)
INPUT(keyinput36)
INPUT(keyinput37)
INPUT(keyinput38)
INPUT(keyinput39)
INPUT(keyinput40)
INPUT(keyinput41)
INPUT(keyinput42)
INPUT(keyinput43)
INPUT(keyinput44)
INPUT(keyinput45)
INPUT(keyinput46)
INPUT(keyinput47)
INPUT(keyinput48)
INPUT(keyinput49)
INPUT(keyinput50)
INPUT(keyinput51)
INPUT(keyinput52)
INPUT(keyinput53)
INPUT(keyinput54)
INPUT(keyinput55)
INPUT(keyinput56)
INPUT(keyinput57)
INPUT(keyinput58)
INPUT(keyinput59)
INPUT(keyinput60)
INPUT(keyinput61)
INPUT(keyinput62)
INPUT(keyinput63)
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
OUTPUT(result_o[17])
OUTPUT(result_o[18])
OUTPUT(result_o[19])
OUTPUT(result_o[20])
OUTPUT(result_o[21])
OUTPUT(result_o[22])
OUTPUT(result_o[23])
OUTPUT(result_o[24])
OUTPUT(result_o[25])
OUTPUT(result_o[26])
OUTPUT(result_o[27])
OUTPUT(result_o[28])
OUTPUT(result_o[29])
OUTPUT(result_o[30])
OUTPUT(result_o[31])
OUTPUT(result_o[32])
result_o[9] = xor( n262, n263 )
n263 = xor( add2_i[9], add1_i[9] )
result_o[8] = xor( n268, xenc49 )
n269 = xor( add2_i[8], add1_i[8] )
result_o[7] = xor( n273, xenc42 )
n274 = xor( add2_i[7], add1_i[7] )
result_o[6] = xor( n286, n287 )
n287 = xor( add2_i[6], add1_i[6] )
result_o[5] = xor( n290, n291 )
n291 = xor( add2_i[5], add1_i[5] )
result_o[4] = xor( xenc60, n295 )
n295 = xor( add2_i[4], add1_i[4] )
xenc34 = xor( n298, n299 )
n299 = xor( add2_i[3], add1_i[3] )
result_o[30] = xor( xenc25, n317 )
result_o[2] = xor( n302, n321 )
n321 = xor( add2_i[2], add1_i[2] )
result_o[29] = xor( n326, n327 )
n327 = xor( add2_i[29], add1_i[29] )
result_o[28] = xor( n338, xenc10 )
n339 = xor( add2_i[28], add1_i[28] )
xenc30 = xor( n351, n352 )
n352 = xor( add2_i[27], add1_i[27] )
result_o[26] = xor( n355, xenc5 )
n356 = xor( add2_i[26], add1_i[26] )
result_o[25] = xor( n365, n366 )
n366 = xor( add2_i[25], add1_i[25] )
result_o[24] = xor( n375, n376 )
n376 = xor( add2_i[24], add1_i[24] )
result_o[23] = xor( xenc39, n380 )
n380 = xor( add2_i[23], add1_i[23] )
result_o[22] = xor( n389, n390 )
n390 = xor( add2_i[22], add1_i[22] )
result_o[21] = xor( n399, n400 )
n400 = xor( add2_i[21], add1_i[21] )
result_o[20] = xor( n403, n404 )
n404 = xor( add2_i[20], add1_i[20] )
result_o[1] = xor( n325, xenc41 )
n413 = xor( add2_i[1], add1_i[1] )
xenc23 = xor( xenc9, xenc31 )
n415 = xor( add2_i[19], add1_i[19] )
result_o[18] = xor( n424, n425 )
n425 = xor( add2_i[18], add1_i[18] )
xenc7 = xor( xenc59, n429 )
n429 = xor( add2_i[17], add1_i[17] )
result_o[16] = xor( n436, xenc61 )
n437 = xor( add2_i[16], add1_i[16] )
result_o[15] = xor( xenc24, n447 )
n447 = xor( add2_i[15], add1_i[15] )
result_o[14] = xor( xenc22, n451 )
n451 = xor( add2_i[14], add1_i[14] )
result_o[13] = xor( n459, n460 )
n460 = xor( add2_i[13], add1_i[13] )
result_o[12] = xor( xenc13, n472 )
result_o[11] = xor( n479, xenc44 )
xenc45 = xor( n484, n485 )
n485 = xor( add2_i[10], add1_i[10] )
n228 = not( xenc35 )
n223 = not( n378 )
n218 = not( n354 )
n402 = nor( n398, n409 )
n409 = and( n410, n394 )
n410 = nand( n392, n411 )
n411 = nand( n412, n406 )
n378 = nor( n374, n385 )
n385 = and( n386, n370 )
n386 = nand( n368, n387 )
n387 = nand( n388, n382 )
n354 = nor( xenc36, n361 )
n361 = and( n362, n344 )
n362 = nand( n341, n363 )
n363 = nand( n364, n358 )
n340 = nand( n329, xenc17 )
n220 = not( n341 )
n244 = not( n478 )
n240 = not( n439 )
n235 = not( n417 )
n230 = not( n392 )
n225 = not( n368 )
n243 = not( n462 )
n238 = not( xenc20 )
n233 = not( n427 )
n350 = nor( xenc0, n219 )
n290 = nand( n292, xenc38 )
n293 = nand( xenc60, n285 )
n349 = nand( xenc36, n342 )
n454 = nor( n463, xenc43, xenc58 )
n439 = nor( n435, n466 )
n466 = and( n467, n241 )
n467 = nand( n468, n469 )
n469 = or( xenc32, n463 )
n417 = nor( n412, xenc27 )
n442 = and( n443, n407 )
n443 = nand( n408, n444 )
n444 = nand( xenc26, n440 )
n392 = nor( n388, n420 )
n420 = and( n421, n383 )
n421 = nand( n384, n422 )
n422 = nand( n423, xenc21 )
n368 = nor( n364, n395 )
n395 = and( n396, n359 )
n396 = nand( n360, n397 )
n397 = nand( n398, n393 )
n341 = nor( n334, n371 )
n371 = and( n372, n330 )
n372 = nand( n332, xenc47 )
n373 = nand( n374, xenc29 )
n462 = nor( n458, n491 )
n491 = nor( n489, n264 )
n334 = nor( xenc18, n221 )
n445 = nor( n261, xenc56 )
n423 = nor( n259, n234 )
n412 = nor( n260, n236 )
n398 = nor( xenc40, n229 )
n388 = nor( n258, n231 )
n374 = nor( n255, n224 )
n364 = nor( n256, xenc51 )
n264 = nor( n453, n492 )
n492 = nor( n270, n490 )
n449 = nor( xenc26, xenc46 )
n455 = and( n456, xenc53 )
n456 = nand( n439, n457 )
n457 = nand( n458, n454 )
n427 = nor( n423, n432 )
n432 = and( n433, n419 )
n433 = nand( n417, n434 )
n434 = nand( n435, xenc14 )
n478 = nand( n266, n246, n245 )
n441 = nand( n261, xenc56 )
n419 = nand( n259, n234 )
n394 = nand( xenc40, n229 )
n370 = nand( n255, n224 )
n344 = nand( xenc0, n219 )
n407 = nand( n260, n236 )
n383 = nand( n258, n231 )
n359 = nand( n256, xenc51 )
n330 = nand( xenc18, n221 )
n318 = nor( n314, n320 )
n474 = nor( n475, n476 )
n475 = nor( n477, xenc58, n478 )
n276 = nor( n278, n279 )
n281 = nand( n483, n487 )
n487 = nand( n283, n284, n250 )
n250 = not( n292 )
n476 = nand( xenc32, n482 )
n482 = or( n462, xenc58 )
n320 = and( xenc37, n333 )
n333 = nand( n329, xenc50, n334 )
n277 = and( n283, n284, n285 )
n431 = and( n440, n407, xenc53 )
n406 = and( xenc21, n383, n419 )
n382 = and( n393, n359, n394 )
n358 = and( xenc29, n330, n370 )
n251 = not( n278 )
n329 = and( n342, n343, n344 )
n245 = not( n489 )
n246 = not( n490 )
n242 = not( n468 )
n241 = not( xenc43 )
n483 = and( n477, xenc1 )
n488 = nand( xenc55, n284 )
n249 = not( xenc12 )
n247 = not( n272 )
n237 = not( n408 )
n232 = not( n384 )
n227 = not( n360 )
n222 = not( n332 )
n248 = not( n267 )
n306 = nand( n308, xenc52 )
n308 = nand( add1_i[30], xenc3 )
n309 = nand( add2_i[30], n310 )
n310 = or( xenc3, add1_i[30] )
n325 = or( add2_i[0], add1_i[0] )
n342 = or( add2_i[26], add1_i[26] )
n286 = nand( xenc12, n289 )
n289 = nand( n290, n283 )
n337 = nand( xenc48, n346 )
n345 = nand( add2_i[27], add1_i[27] )
n346 = nand( n347, n343 )
n347 = nand( n348, xenc19 )
n348 = nand( add2_i[26], add1_i[26] )
n294 = nand( n296, xenc4 )
n296 = nand( add2_i[3], add1_i[3] )
n297 = nand( n298, n251 )
n298 = nand( n300, n301 )
n300 = nand( add2_i[2], add1_i[2] )
n301 = nand( n302, n252 )
n252 = not( n279 )
n302 = nand( xenc62, n323 )
n322 = nand( add1_i[1], n325 )
n323 = nand( add2_i[1], xenc16 )
n324 = or( n325, add1_i[1] )
n219 = not( add1_i[25] )
n253 = not( add2_i[25] )
result_o[31] = xnor( n307, n306 )
n307 = xnor( add1_i[31], add2_i[31] )
n315 = and( n335, xenc54 )
n335 = nand( add2_i[28], add1_i[28] )
n336 = nand( n337, xenc50 )
n311 = nand( n312, xenc6 )
n312 = nand( add2_i[29], add1_i[29] )
n313 = or( n314, xenc37 )
result_o[32] = nand( n303, n304 )
n303 = nand( add1_i[31], n306 )
n304 = nand( add2_i[31], n305 )
n305 = or( n306, add1_i[31] )
n465 = nor( add2_i[10], add1_i[10] )
n463 = nor( add2_i[11], add1_i[11] )
n464 = nor( add2_i[12], add1_i[12] )
n278 = nor( add2_i[3], add1_i[3] )
n489 = nor( add2_i[9], add1_i[9] )
n279 = nor( add2_i[2], add1_i[2] )
n490 = nor( add2_i[8], add1_i[8] )
n267 = nor( n281, n282 )
n282 = and( add1_i[3], xenc2, add2_i[3] )
n314 = nor( add2_i[29], add1_i[29] )
n408 = nand( add2_i[14], add1_i[14] )
n384 = nand( add2_i[17], add1_i[17] )
n360 = nand( add2_i[20], add1_i[20] )
n332 = nand( add2_i[23], add1_i[23] )
n331 = or( add2_i[28], add1_i[28] )
n440 = or( add2_i[14], add1_i[14] )
n418 = or( add2_i[17], add1_i[17] )
n393 = or( add2_i[20], add1_i[20] )
n369 = or( add2_i[23], add1_i[23] )
n284 = or( add2_i[6], add1_i[6] )
n283 = or( add2_i[5], add1_i[5] )
n266 = or( add2_i[7], add1_i[7] )
n484 = nand( n462, xenc33 )
n486 = nand( n244, n281 )
n446 = nand( n408, n448 )
n448 = nand( n238, n440 )
n424 = nand( n384, n426 )
n426 = nand( n233, xenc21 )
n414 = nand( n392, n416 )
n416 = nand( n406, xenc11 )
n399 = nand( n360, n401 )
n401 = nand( n228, n393 )
n389 = nand( n368, xenc63 )
n391 = nand( n382, n230 )
n375 = nand( n332, n377 )
n377 = nand( n223, xenc29 )
n365 = nand( n341, n367 )
n367 = nand( n358, n225 )
n351 = nand( n348, n353 )
n353 = nand( n218, n342 )
n338 = nand( n217, n340 )
n217 = not( n337 )
n262 = nand( n264, n265 )
n265 = nand( n266, n246, n248 )
n459 = nand( n439, n461 )
n461 = nand( n454, n243 )
n273 = nand( n247, n275 )
n275 = nand( add2_i[1], add1_i[1], n276, xenc2 )
n428 = nand( n427, n430 )
n430 = nand( n242, xenc14, n241, n419 )
n403 = nand( xenc35, n405 )
n405 = nand( n237, n406, n407, n394 )
n379 = nand( n378, n381 )
n381 = nand( n232, n382, n383, n370 )
n355 = nand( n354, n357 )
n357 = nand( n227, n358, n359, n344 )
n326 = nand( n320, n328 )
n328 = nand( n222, n329, n330, xenc50 )
n450 = nand( xenc20, n452 )
n452 = nand( n453, n454, n245, xenc53 )
n479 = xnor( add1_i[11], add2_i[11] )
n480 = nor( xenc57, n476 )
n481 = nor( n478, n483, xenc58 )
n471 = xnor( add1_i[12], add2_i[12] )
n472 = nor( n473, n242 )
n473 = nor( n463, n474 )
n316 = xnor( add1_i[30], add2_i[30] )
n317 = nor( n318, n319 )
n319 = and( add1_i[29], add2_i[29] )
n272 = nand( n267, xenc8 )
n280 = nand( add2_i[2], add1_i[2], xenc2, n251 )
n270 = nand( add2_i[7], add1_i[7] )
n292 = nand( add2_i[4], add1_i[4] )
n288 = nand( add2_i[5], add1_i[5] )
n468 = nand( add2_i[11], add1_i[11] )
n458 = and( add1_i[9], add2_i[9] )
n435 = and( add2_i[12], add1_i[12] )
n285 = or( add2_i[4], add1_i[4] )
n453 = and( add2_i[8], add1_i[8] )
n343 = or( add2_i[27], add1_i[27] )
n477 = nand( add2_i[6], add1_i[6] )
n239 = not( add1_i[13] )
n234 = not( add1_i[16] )
n236 = not( add1_i[15] )
n229 = not( add1_i[19] )
n231 = not( add1_i[18] )
n224 = not( add1_i[22] )
n226 = not( add1_i[21] )
n221 = not( add1_i[24] )
n470 = nand( add2_i[10], add1_i[10] )
n261 = not( add2_i[13] )
n259 = not( add2_i[16] )
n260 = not( add2_i[15] )
n257 = not( add2_i[19] )
n258 = not( add2_i[18] )
n255 = not( add2_i[22] )
n256 = not( add2_i[21] )
n254 = not( add2_i[24] )
n436 = nand( n417, xenc15 )
n438 = nand( xenc14, n240 )
n268 = nand( n270, xenc28 )
n271 = nand( n272, n266 )
result_o[0] = nand( n325, n493 )
n493 = nand( add2_i[0], add1_i[0] )
xenc0 = or( n253, keyinput0 )
xenc1 = and( n488, keyinput1 )
xenc2 = and( n277, keyinput2 )
xenc3 = or( n311, keyinput3 )
xenc4 = and( n297, keyinput4 )
xenc5 = or( n356, keyinput5 )
xenc6 = and( n313, keyinput6 )
result_o[17] = or( xenc7, keyinput7 )
xenc8 = and( n280, keyinput8 )
xenc9 = or( n414, keyinput9 )
xenc10 = and( n339, keyinput10 )
xenc11 = and( n235, keyinput11 )
xenc12 = and( n288, keyinput12 )
xenc13 = and( n471, keyinput13 )
xenc14 = or( n431, keyinput14 )
xenc15 = or( n438, keyinput15 )
xenc16 = or( n324, keyinput16 )
xenc17 = and( n220, keyinput17 )
xenc18 = or( n254, keyinput18 )
xenc19 = and( n349, keyinput19 )
xenc20 = or( n449, keyinput20 )
xenc21 = or( n418, keyinput21 )
xenc22 = and( n450, keyinput22 )
result_o[19] = and( xenc23, keyinput23 )
xenc24 = and( n446, keyinput24 )
xenc25 = or( n316, keyinput25 )
xenc26 = or( n445, keyinput26 )
xenc27 = or( n442, keyinput27 )
xenc28 = or( n271, keyinput28 )
xenc29 = or( n369, keyinput29 )
result_o[27] = or( xenc30, keyinput30 )
xenc31 = or( n415, keyinput31 )
xenc32 = or( n470, keyinput32 )
xenc33 = or( n486, keyinput33 )
result_o[3] = and( xenc34, keyinput34 )
xenc35 = or( n402, keyinput35 )
xenc36 = and( n350, keyinput36 )
xenc37 = or( n315, keyinput37 )
xenc38 = and( n293, keyinput38 )
xenc39 = or( n379, keyinput39 )
xenc40 = and( n257, keyinput40 )
xenc41 = or( n413, keyinput41 )
xenc42 = or( n274, keyinput42 )
xenc43 = or( n464, keyinput43 )
xenc44 = or( n480, keyinput44 )
result_o[10] = and( xenc45, keyinput45 )
xenc46 = and( n455, keyinput46 )
xenc47 = or( n373, keyinput47 )
xenc48 = and( n345, keyinput48 )
xenc49 = or( n269, keyinput49 )
xenc50 = or( n331, keyinput50 )
xenc51 = or( n226, keyinput51 )
xenc52 = and( n309, keyinput52 )
xenc53 = or( n441, keyinput53 )
xenc54 = and( n336, keyinput54 )
xenc55 = and( n249, keyinput55 )
xenc56 = or( n239, keyinput56 )
xenc57 = or( n481, keyinput57 )
xenc58 = and( n465, keyinput58 )
xenc59 = and( n428, keyinput59 )
xenc60 = and( n294, keyinput60 )
xenc61 = or( n437, keyinput61 )
xenc62 = or( n322, keyinput62 )
xenc63 = or( n391, keyinput63 )
