# BENCH FILE 
# circuit:carry_lookahead_adder16.bench

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
xenc2 = xor( xenc10, xenc30 )
n62 = xor( add2_i[9], add1_i[9] )
result_o[8] = xor( n63, xenc3 )
n64 = xor( add2_i[8], add1_i[8] )
result_o[7] = xor( n65, xenc23 )
n66 = xor( add2_i[7], add1_i[7] )
result_o[6] = xor( xenc13, xenc31 )
n68 = xor( add2_i[6], add1_i[6] )
result_o[5] = xor( n69, n70 )
n70 = xor( add2_i[5], add1_i[5] )
result_o[4] = xor( n71, n72 )
n72 = xor( add2_i[4], add1_i[4] )
xenc15 = xor( xenc26, xenc7 )
n74 = xor( add2_i[3], add1_i[3] )
xenc18 = xor( n75, n76 )
n76 = xor( add2_i[2], add1_i[2] )
result_o[1] = xor( n77, n78 )
n78 = xor( add2_i[1], add1_i[1] )
result_o[15] = xor( xenc4, n83 )
n83 = xor( add2_i[15], add1_i[15] )
xenc28 = xor( xenc6, n88 )
n88 = xor( add2_i[14], add1_i[14] )
result_o[13] = xor( xenc21, xenc20 )
n93 = xor( add2_i[13], add1_i[13] )
result_o[12] = xor( n97, n98 )
n98 = xor( add2_i[12], add1_i[12] )
result_o[11] = xor( n102, xenc17 )
n103 = xor( add2_i[11], add1_i[11] )
result_o[10] = xor( n107, xenc9 )
n108 = xor( add2_i[10], add1_i[10] )
n77 = or( add2_i[0], add1_i[0] )
n75 = nand( n133, n134 )
n133 = nand( add1_i[1], n77 )
n134 = nand( add2_i[1], n135 )
n135 = or( n77, add1_i[1] )
n73 = nand( xenc0, xenc8 )
n130 = nand( add1_i[2], n75 )
n131 = nand( add2_i[2], n132 )
n132 = or( n75, add1_i[2] )
n92 = nand( n94, n95 )
n94 = nand( add1_i[12], n97 )
n95 = nand( add2_i[12], n96 )
n96 = or( n97, add1_i[12] )
n87 = nand( n89, xenc22 )
n89 = nand( add1_i[13], xenc21 )
n90 = nand( add2_i[13], xenc14 )
n91 = or( xenc21, add1_i[13] )
n82 = nand( xenc24, n85 )
n84 = nand( add1_i[14], xenc6 )
n85 = nand( add2_i[14], n86 )
n86 = or( xenc6, add1_i[14] )
n71 = nand( n127, n128 )
n127 = nand( add1_i[3], xenc26 )
n128 = nand( add2_i[3], xenc5 )
n129 = or( xenc26, add1_i[3] )
n69 = nand( xenc1, xenc16 )
n124 = nand( add1_i[4], n71 )
n125 = nand( add2_i[4], n126 )
n126 = or( n71, add1_i[4] )
n67 = nand( n121, n122 )
n121 = nand( add1_i[5], n69 )
n122 = nand( add2_i[5], n123 )
n123 = or( n69, add1_i[5] )
n65 = nand( n118, n119 )
n118 = nand( add1_i[6], xenc13 )
n119 = nand( add2_i[6], n120 )
n120 = or( xenc13, add1_i[6] )
n63 = nand( n115, xenc12 )
n115 = nand( add1_i[7], n65 )
n116 = nand( add2_i[7], n117 )
n117 = or( n65, add1_i[7] )
n61 = nand( n112, xenc27 )
n112 = nand( add1_i[8], n63 )
n113 = nand( add2_i[8], xenc25 )
n114 = or( n63, add1_i[8] )
n107 = nand( n109, n110 )
n109 = nand( add1_i[9], xenc10 )
n110 = nand( add2_i[9], n111 )
n111 = or( xenc10, add1_i[9] )
n102 = nand( xenc29, xenc11 )
n104 = nand( add1_i[10], n107 )
n105 = nand( add2_i[10], n106 )
n106 = or( n107, add1_i[10] )
n97 = nand( n99, n100 )
n99 = nand( add1_i[11], n102 )
n100 = nand( add2_i[11], xenc19 )
n101 = or( n102, add1_i[11] )
result_o[16] = nand( n79, n80 )
n79 = nand( add1_i[15], xenc4 )
n80 = nand( add2_i[15], n81 )
n81 = or( xenc4, add1_i[15] )
result_o[0] = nand( n77, n136 )
n136 = nand( add2_i[0], add1_i[0] )
xenc0 = xnor( n130, keyinput0 )
xenc1 = xnor( n124, keyinput1 )
result_o[9] = xor( xenc2, keyinput2 )
xenc3 = xnor( n64, keyinput3 )
xenc4 = xnor( n82, keyinput4 )
xenc5 = xor( n129, keyinput5 )
xenc6 = xnor( n87, keyinput6 )
xenc7 = xnor( n74, keyinput7 )
xenc8 = xnor( n131, keyinput8 )
xenc9 = xnor( n108, keyinput9 )
xenc10 = xor( n61, keyinput10 )
xenc11 = xor( n105, keyinput11 )
xenc12 = xor( n116, keyinput12 )
xenc13 = xor( n67, keyinput13 )
xenc14 = xor( n91, keyinput14 )
result_o[3] = xnor( xenc15, keyinput15 )
xenc16 = xnor( n125, keyinput16 )
xenc17 = xnor( n103, keyinput17 )
result_o[2] = xor( xenc18, keyinput18 )
xenc19 = xnor( n101, keyinput19 )
xenc20 = xnor( n93, keyinput20 )
xenc21 = xnor( n92, keyinput21 )
xenc22 = xnor( n90, keyinput22 )
xenc23 = xor( n66, keyinput23 )
xenc24 = xnor( n84, keyinput24 )
xenc25 = xor( n114, keyinput25 )
xenc26 = xor( n73, keyinput26 )
xenc27 = xor( n113, keyinput27 )
result_o[14] = xnor( xenc28, keyinput28 )
xenc29 = xnor( n104, keyinput29 )
xenc30 = xnor( n62, keyinput30 )
xenc31 = xnor( n68, keyinput31 )
