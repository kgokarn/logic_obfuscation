# BENCH FILE 
# circuit:xnor_based_ripple_carry_adder32.bench

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add1_i[16])
INPUT(add1_i[17])
INPUT(add1_i[18])
INPUT(add1_i[19])
INPUT(add1_i[20])
INPUT(add1_i[21])
INPUT(add1_i[22])
INPUT(add1_i[23])
INPUT(add1_i[24])
INPUT(add1_i[25])
INPUT(add1_i[26])
INPUT(add1_i[27])
INPUT(add1_i[28])
INPUT(add1_i[29])
INPUT(add1_i[30])
INPUT(add1_i[31])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(add2_i[16])
INPUT(add2_i[17])
INPUT(add2_i[18])
INPUT(add2_i[19])
INPUT(add2_i[20])
INPUT(add2_i[21])
INPUT(add2_i[22])
INPUT(add2_i[23])
INPUT(add2_i[24])
INPUT(add2_i[25])
INPUT(add2_i[26])
INPUT(add2_i[27])
INPUT(add2_i[28])
INPUT(add2_i[29])
INPUT(add2_i[30])
INPUT(add2_i[31])
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
INPUT(keyinput32)
INPUT(keyinput33)
INPUT(keyinput34)
INPUT(keyinput35)
INPUT(keyinput36)
INPUT(keyinput37)
INPUT(keyinput38)
INPUT(keyinput39)
INPUT(keyinput40)
INPUT(keyinput41)
INPUT(keyinput42)
INPUT(keyinput43)
INPUT(keyinput44)
INPUT(keyinput45)
INPUT(keyinput46)
INPUT(keyinput47)
INPUT(keyinput48)
INPUT(keyinput49)
INPUT(keyinput50)
INPUT(keyinput51)
INPUT(keyinput52)
INPUT(keyinput53)
INPUT(keyinput54)
INPUT(keyinput55)
INPUT(keyinput56)
INPUT(keyinput57)
INPUT(keyinput58)
INPUT(keyinput59)
INPUT(keyinput60)
INPUT(keyinput61)
INPUT(keyinput62)
INPUT(keyinput63)
INPUT(keyinput64)
INPUT(keyinput65)
INPUT(keyinput66)
INPUT(keyinput67)
INPUT(keyinput68)
INPUT(keyinput69)
INPUT(keyinput70)
INPUT(keyinput71)
INPUT(keyinput72)
INPUT(keyinput73)
INPUT(keyinput74)
INPUT(keyinput75)
INPUT(keyinput76)
INPUT(keyinput77)
INPUT(keyinput78)
INPUT(keyinput79)
INPUT(keyinput80)
INPUT(keyinput81)
INPUT(keyinput82)
INPUT(keyinput83)
INPUT(keyinput84)
INPUT(keyinput85)
INPUT(keyinput86)
INPUT(keyinput87)
INPUT(keyinput88)
INPUT(keyinput89)
INPUT(keyinput90)
INPUT(keyinput91)
INPUT(keyinput92)
INPUT(keyinput93)
INPUT(keyinput94)
INPUT(keyinput95)
INPUT(keyinput96)
INPUT(keyinput97)
INPUT(keyinput98)
INPUT(keyinput99)
INPUT(keyinput100)
INPUT(keyinput101)
INPUT(keyinput102)
INPUT(keyinput103)
INPUT(keyinput104)
INPUT(keyinput105)
INPUT(keyinput106)
INPUT(keyinput107)
INPUT(keyinput108)
INPUT(keyinput109)
INPUT(keyinput110)
INPUT(keyinput111)
INPUT(keyinput112)
INPUT(keyinput113)
INPUT(keyinput114)
INPUT(keyinput115)
INPUT(keyinput116)
INPUT(keyinput117)
INPUT(keyinput118)
INPUT(keyinput119)
INPUT(keyinput120)
INPUT(keyinput121)
INPUT(keyinput122)
INPUT(keyinput123)
INPUT(keyinput124)
INPUT(keyinput125)
INPUT(keyinput126)
INPUT(keyinput127)
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
OUTPUT(result_o[17])
OUTPUT(result_o[18])
OUTPUT(result_o[19])
OUTPUT(result_o[20])
OUTPUT(result_o[21])
OUTPUT(result_o[22])
OUTPUT(result_o[23])
OUTPUT(result_o[24])
OUTPUT(result_o[25])
OUTPUT(result_o[26])
OUTPUT(result_o[27])
OUTPUT(result_o[28])
OUTPUT(result_o[29])
OUTPUT(result_o[30])
OUTPUT(result_o[31])
OUTPUT(result_o[32])
xenc72 = xor( add2_i[8], xenc23 )
n203 = xor( add2_i[3], add1_i[3] )
result_o[29] = xor( add2_i[29], n331 )
xenc119 = xor( xenc76, n228 )
xenc58 = xor( n237, add2_i[25] )
result_o[24] = xor( xenc40, add2_i[24] )
xenc33 = xor( add2_i[22], n250 )
result_o[16] = xor( add2_i[16], xenc96 )
xenc86 = xor( xenc92, add2_i[15] )
xenc116 = xor( add2_i[14], n288 )
xenc113 = xor( add2_i[13], n292 )
result_o[12] = xor( add2_i[12], n296 )
result_o[10] = xor( add2_i[10], xenc71 )
n190 = xor( add1_i[7], add2_i[7] )
n199 = xor( add1_i[4], add2_i[4] )
n216 = xor( add1_i[2], add2_i[2] )
n267 = xor( add1_i[0], add2_i[0] )
n326 = xnor( xenc42, xenc98 )
n327 = not( xenc105 )
n328 = not( n327 )
n325 = or( n217, xenc35, n218 )
n340 = nand( n329, add1_i[18] )
n329 = not( n274 )
n322 = nand( xenc101, xenc77, n201 )
n339 = nand( xenc14, add2_i[17], add1_i[18] )
n313 = nand( n179, xenc57, xenc6, xenc109 )
n335 = and( xenc66, add2_i[18], xenc12 )
n320 = nand( xenc16, add2_i[5], add1_i[5] )
n249 = nand( xenc2, xenc90, add2_i[22] )
xenc110 = xor( add2_i[9], xenc79 )
xenc107 = xor( add2_i[11], xenc43 )
xenc74 = xor( add2_i[17], xenc14 )
xenc25 = xor( add2_i[19], xenc61 )
result_o[20] = xor( add2_i[20], xenc9 )
result_o[21] = xor( add2_i[21], n255 )
xenc87 = xor( add2_i[26], n233 )
xenc18 = xor( add2_i[30], n328 )
xenc83 = xor( xenc121, add2_i[31] )
n343 = not( add1_i[24] )
n342 = not( add1_i[19] )
n346 = not( add1_i[25] )
n330 = not( xenc13 )
n331 = not( n330 )
n332 = and( xenc57, xenc6 )
n333 = nand( xenc7, xenc95 )
n268 = and( add1_i[1], add2_i[1] )
n334 = or( add1_i[0], add2_i[0] )
n270 = nand( xenc31, xenc48 )
n336 = or( xenc111, add1_i[18] )
n337 = nand( n212, xenc50 )
n338 = nand( xenc85, xenc102 )
n269 = and( xenc66, xenc12 )
n341 = nand( xenc103, n232 )
n263 = xnor( n264, xenc49 )
n241 = xnor( n242, n343 )
n344 = not( xenc19 )
n345 = not( xenc84 )
n237 = xnor( n238, n346 )
n350 = not( add1_i[13] )
n217 = nor( xenc60, xenc126 )
n347 = xor( n242, add1_i[24] )
n349 = not( add1_i[15] )
n348 = not( add1_i[17] )
n276 = xnor( xenc42, xenc98 )
n284 = xnor( n285, xenc82 )
n292 = xnor( xenc15, xenc97 )
n351 = not( add1_i[14] )
n352 = not( add1_i[16] )
n288 = xnor( xenc22, xenc123 )
n280 = xnor( n281, n352 )
n353 = nor( add1_i[0], add2_i[0], n367 )
n362 = not( add1_i[29] )
n355 = not( add1_i[12] )
n354 = not( add1_i[20] )
n356 = not( add1_i[30] )
n260 = xnor( xenc41, xenc118 )
n296 = xnor( n297, n355 )
n210 = xnor( xenc106, xenc46 )
n357 = xor( add1_i[6], add2_i[6] )
n361 = not( add1_i[21] )
n358 = not( add1_i[26] )
n360 = not( add1_i[31] )
n233 = xnor( n234, xenc36 )
n359 = xnor( add1_i[2], add2_i[2] )
n206 = xnor( xenc29, xenc65 )
n255 = xnor( xenc100, n361 )
n214 = xnor( n215, xenc55 )
n183 = not( xenc67 )
n181 = not( n193 )
xenc38 = nor( n189, xenc54 )
n189 = nor( n191, xenc69 )
xenc59 = nor( xenc77, xenc17, xenc67 )
result_o[0] = not( n267 )
n366 = not( add1_i[11] )
n365 = not( add1_i[9] )
n195 = xor( add1_i[6], add2_i[6] )
n193 = xnor( add1_i[5], add2_i[5] )
n218 = nor( add2_i[1], add1_i[1] )
n200 = nor( add2_i[3], add1_i[3] )
n319 = nand( add1_i[6], add2_i[6] )
n221 = nand( n222, n178 )
n228 = xnor( add2_i[28], n178 )
xenc20 = xor( xenc4, xenc117 )
n363 = xor( add1_i[23], add2_i[23] )
n250 = and( xenc90, xenc2 )
n315 = nand( add2_i[7], add1_i[7] )
n321 = nand( add1_i[4], add2_i[4] )
xenc80 = xnor( add2_i[18], n364 )
n364 = nand( xenc24, n272 )
n178 = not( add1_i[28] )
n186 = not( add2_i[27] )
n196 = nor( xenc10, xenc62 )
n198 = and( add1_i[5], add2_i[5] )
xenc45 = nor( n265, xenc127 )
n265 = nor( n367, n218 )
n266 = nor( add1_i[0], n267 )
n304 = and( n305, xenc39 )
n239 = nand( add1_i[24], n242 )
n309 = nand( xenc108, xenc51 )
n187 = xnor( xenc112, xenc52 )
n300 = xnor( xenc89, n301 )
n367 = and( add1_i[1], add2_i[1] )
n312 = nand( xenc109, n316 )
n179 = not( xenc69 )
n316 = nand( xenc54, xenc21 )
n317 = nand( n179, n318 )
n368 = and( n324, n323 )
n369 = and( n202, n323 )
n324 = nand( add1_i[2], add2_i[2] )
n323 = nand( add2_i[3], add1_i[3] )
n202 = and( xenc63, n324 )
xenc68 = nor( n202, xenc0 )
n201 = nand( xenc63, n368 )
n212 = nand( add1_i[29], n215 )
n290 = nand( xenc15, add1_i[13] )
n298 = nand( add1_i[11], n301 )
n307 = nand( xenc112, add1_i[9] )
n215 = nand( xenc37, xenc32 )
n220 = nand( add2_i[28], xenc3 )
n293 = nand( xenc122, n294 )
n301 = nand( xenc115, xenc39 )
n303 = nand( add2_i[10], xenc71 )
n242 = nand( n244, n243 )
n244 = nand( n245, add2_i[23] )
n272 = or( xenc111, add1_i[18] )
n264 = nand( n270, xenc24 )
n261 = nand( add1_i[19], n264 )
n231 = nand( add1_i[26], xenc73 )
n246 = nand( n249, xenc2 )
n273 = nand( n275, n274 )
n274 = nand( add1_i[17], xenc42 )
n204 = nand( add1_i[31], xenc81 )
n208 = nand( add1_i[30], xenc114 )
n253 = nand( add1_i[21], xenc100 )
n277 = nand( n279, n278 )
n207 = nand( xenc7, xenc95 )
n211 = nand( n212, xenc50 )
n234 = nand( xenc85, xenc102 )
n256 = nand( xenc64, xenc47 )
n281 = nand( n283, xenc28 )
n282 = nand( n285, add1_i[15] )
n305 = or( n306, add1_i[10] )
n302 = nand( add1_i[10], n306 )
n188 = xnor( n314, add1_i[8] )
n235 = nand( add1_i[25], n238 )
n248 = nand( add1_i[22], xenc94 )
n251 = or( xenc94, add1_i[22] )
n286 = nand( add1_i[14], xenc22 )
n294 = nand( add1_i[12], n297 )
n306 = nand( xenc70, xenc5 )
n311 = nand( xenc104, n313, add1_i[8] )
n314 = nand( n313, xenc104 )
xenc30 = nor( n196, n357 )
xenc44 = xnor( add2_i[27], xenc88 )
n180 = not( n357 )
n219 = nand( add1_i[28], xenc76 )
n229 = or( xenc88, xenc34 )
n226 = nand( xenc103, n232 )
n238 = nand( n239, xenc91 )
n252 = nand( xenc8, n253 )
n285 = nand( xenc93, n286 )
n289 = nand( n291, xenc75 )
n318 = nand( xenc56, n357 )
n192 = nand( n319, n320 )
result_o[32] = nand( xenc99, xenc27 )
xenc1 = nor( n332, xenc56 )
n205 = nand( add2_i[31], xenc121 )
n197 = nor( n332, n193 )
n191 = nor( n193, n332, xenc53 )
n227 = nand( n229, n225 )
n222 = nand( n223, xenc26 )
n224 = nand( n225, xenc34 )
n243 = nand( add1_i[23], xenc117 )
n245 = or( xenc117, add1_i[23] )
n258 = nand( add1_i[20], xenc41 )
n257 = nand( add2_i[20], xenc9 )
n259 = nand( xenc78, xenc124 )
n278 = nand( add1_i[16], n281 )
n283 = nand( add2_i[15], xenc92 )
n297 = nand( n299, xenc11 )
n310 = nand( xenc19, add2_i[8] )
xenc125 = nor( n216, n353, n218 )
n209 = nand( add2_i[30], xenc105 )
n213 = nand( add2_i[29], xenc13 )
n223 = or( n341, add1_i[27] )
n225 = nand( add1_i[27], n341 )
n230 = xnor( n226, add1_i[27] )
n232 = nand( add2_i[26], n233 )
n236 = nand( add2_i[25], n237 )
n240 = nand( xenc120, add2_i[24] )
n254 = nand( n255, add2_i[21] )
n262 = nand( add2_i[19], xenc61 )
n275 = nand( n276, add2_i[17] )
n279 = nand( xenc96, add2_i[16] )
n287 = nand( add2_i[14], n288 )
n291 = nand( add2_i[13], n292 )
n295 = nand( add2_i[12], n296 )
n299 = nand( add2_i[11], xenc43 )
n308 = nand( add2_i[9], xenc79 )
xenc0 = and( n203, keyinput0 )
result_o[5] = and( xenc1, keyinput1 )
xenc2 = or( n248, keyinput2 )
xenc3 = and( n221, keyinput3 )
xenc4 = and( n363, keyinput4 )
xenc5 = and( n307, keyinput5 )
xenc6 = and( n322, keyinput6 )
xenc7 = and( n209, keyinput7 )
xenc8 = or( n254, keyinput8 )
xenc9 = or( n260, keyinput9 )
xenc10 = or( n197, keyinput10 )
xenc11 = or( n298, keyinput11 )
xenc12 = or( n340, keyinput12 )
xenc13 = and( n214, keyinput13 )
xenc14 = or( n326, keyinput14 )
xenc15 = and( n293, keyinput15 )
xenc16 = or( n195, keyinput16 )
xenc17 = and( n369, keyinput17 )
result_o[30] = or( xenc18, keyinput18 )
xenc19 = and( n188, keyinput19 )
result_o[23] = and( xenc20, keyinput20 )
xenc21 = and( n317, keyinput21 )
xenc22 = and( n289, keyinput22 )
xenc23 = and( n345, keyinput23 )
xenc24 = and( n269, keyinput24 )
result_o[19] = and( xenc25, keyinput25 )
xenc26 = and( n224, keyinput26 )
xenc27 = and( n205, keyinput27 )
xenc28 = or( n282, keyinput28 )
xenc29 = and( n207, keyinput29 )
result_o[6] = or( xenc30, keyinput30 )
xenc31 = and( n336, keyinput31 )
xenc32 = and( n220, keyinput32 )
result_o[22] = and( xenc33, keyinput33 )
xenc34 = and( n186, keyinput34 )
xenc35 = and( n359, keyinput35 )
xenc36 = or( n358, keyinput36 )
xenc37 = and( n219, keyinput37 )
result_o[7] = and( xenc38, keyinput38 )
xenc39 = and( n302, keyinput39 )
xenc40 = and( n347, keyinput40 )
xenc41 = or( n259, keyinput41 )
xenc42 = or( n277, keyinput42 )
xenc43 = or( n300, keyinput43 )
result_o[27] = and( xenc44, keyinput44 )
result_o[1] = or( xenc45, keyinput45 )
xenc46 = or( n356, keyinput46 )
xenc47 = or( n258, keyinput47 )
xenc48 = or( n335, keyinput48 )
xenc49 = and( n342, keyinput49 )
xenc50 = and( n213, keyinput50 )
xenc51 = or( n311, keyinput51 )
xenc52 = or( n365, keyinput52 )
xenc53 = and( n180, keyinput53 )
xenc54 = or( n190, keyinput54 )
xenc55 = or( n362, keyinput55 )
xenc56 = and( n181, keyinput56 )
xenc57 = and( n321, keyinput57 )
result_o[25] = and( xenc58, keyinput58 )
result_o[4] = and( xenc59, keyinput59 )
xenc60 = and( n334, keyinput60 )
xenc61 = or( n263, keyinput61 )
xenc62 = and( n198, keyinput62 )
xenc63 = and( n325, keyinput63 )
xenc64 = and( n257, keyinput64 )
xenc65 = and( n360, keyinput65 )
xenc66 = and( n339, keyinput66 )
xenc67 = or( n200, keyinput67 )
result_o[3] = or( xenc68, keyinput68 )
xenc69 = and( n192, keyinput69 )
xenc70 = or( n308, keyinput70 )
xenc71 = or( n304, keyinput71 )
result_o[8] = or( xenc72, keyinput72 )
xenc73 = or( n338, keyinput73 )
result_o[17] = and( xenc74, keyinput74 )
xenc75 = or( n290, keyinput75 )
xenc76 = and( n227, keyinput76 )
xenc77 = or( n199, keyinput77 )
xenc78 = or( n261, keyinput78 )
xenc79 = or( n187, keyinput79 )
result_o[18] = or( xenc80, keyinput80 )
xenc81 = or( n333, keyinput81 )
xenc82 = or( n349, keyinput82 )
result_o[31] = and( xenc83, keyinput83 )
xenc84 = or( n344, keyinput84 )
xenc85 = and( n235, keyinput85 )
result_o[15] = and( xenc86, keyinput86 )
result_o[26] = or( xenc87, keyinput87 )
xenc88 = and( n230, keyinput88 )
xenc89 = and( n366, keyinput89 )
xenc90 = or( n251, keyinput90 )
xenc91 = and( n240, keyinput91 )
xenc92 = or( n284, keyinput92 )
xenc93 = or( n287, keyinput93 )
xenc94 = and( n252, keyinput94 )
xenc95 = or( n208, keyinput95 )
xenc96 = and( n280, keyinput96 )
xenc97 = and( n350, keyinput97 )
xenc98 = and( n348, keyinput98 )
xenc99 = or( n204, keyinput99 )
xenc100 = and( n256, keyinput100 )
xenc101 = and( n183, keyinput101 )
xenc102 = and( n236, keyinput102 )
xenc103 = and( n231, keyinput103 )
xenc104 = or( n312, keyinput104 )
xenc105 = and( n210, keyinput105 )
xenc106 = or( n211, keyinput106 )
result_o[11] = or( xenc107, keyinput107 )
xenc108 = or( n310, keyinput108 )
xenc109 = and( n315, keyinput109 )
result_o[9] = and( xenc110, keyinput110 )
xenc111 = and( n273, keyinput111 )
xenc112 = or( n309, keyinput112 )
result_o[13] = or( xenc113, keyinput113 )
xenc114 = or( n337, keyinput114 )
xenc115 = and( n303, keyinput115 )
result_o[14] = and( xenc116, keyinput116 )
xenc117 = or( n246, keyinput117 )
xenc118 = and( n354, keyinput118 )
result_o[28] = and( xenc119, keyinput119 )
xenc120 = or( n241, keyinput120 )
xenc121 = or( n206, keyinput121 )
xenc122 = or( n295, keyinput122 )
xenc123 = and( n351, keyinput123 )
xenc124 = or( n262, keyinput124 )
result_o[2] = or( xenc125, keyinput125 )
xenc126 = and( n268, keyinput126 )
xenc127 = or( n266, keyinput127 )
