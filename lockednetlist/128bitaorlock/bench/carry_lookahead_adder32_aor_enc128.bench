# BENCH FILE 
# circuit:carry_lookahead_adder32.bench

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add1_i[16])
INPUT(add1_i[17])
INPUT(add1_i[18])
INPUT(add1_i[19])
INPUT(add1_i[20])
INPUT(add1_i[21])
INPUT(add1_i[22])
INPUT(add1_i[23])
INPUT(add1_i[24])
INPUT(add1_i[25])
INPUT(add1_i[26])
INPUT(add1_i[27])
INPUT(add1_i[28])
INPUT(add1_i[29])
INPUT(add1_i[30])
INPUT(add1_i[31])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(add2_i[16])
INPUT(add2_i[17])
INPUT(add2_i[18])
INPUT(add2_i[19])
INPUT(add2_i[20])
INPUT(add2_i[21])
INPUT(add2_i[22])
INPUT(add2_i[23])
INPUT(add2_i[24])
INPUT(add2_i[25])
INPUT(add2_i[26])
INPUT(add2_i[27])
INPUT(add2_i[28])
INPUT(add2_i[29])
INPUT(add2_i[30])
INPUT(add2_i[31])
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
INPUT(keyinput32)
INPUT(keyinput33)
INPUT(keyinput34)
INPUT(keyinput35)
INPUT(keyinput36)
INPUT(keyinput37)
INPUT(keyinput38)
INPUT(keyinput39)
INPUT(keyinput40)
INPUT(keyinput41)
INPUT(keyinput42)
INPUT(keyinput43)
INPUT(keyinput44)
INPUT(keyinput45)
INPUT(keyinput46)
INPUT(keyinput47)
INPUT(keyinput48)
INPUT(keyinput49)
INPUT(keyinput50)
INPUT(keyinput51)
INPUT(keyinput52)
INPUT(keyinput53)
INPUT(keyinput54)
INPUT(keyinput55)
INPUT(keyinput56)
INPUT(keyinput57)
INPUT(keyinput58)
INPUT(keyinput59)
INPUT(keyinput60)
INPUT(keyinput61)
INPUT(keyinput62)
INPUT(keyinput63)
INPUT(keyinput64)
INPUT(keyinput65)
INPUT(keyinput66)
INPUT(keyinput67)
INPUT(keyinput68)
INPUT(keyinput69)
INPUT(keyinput70)
INPUT(keyinput71)
INPUT(keyinput72)
INPUT(keyinput73)
INPUT(keyinput74)
INPUT(keyinput75)
INPUT(keyinput76)
INPUT(keyinput77)
INPUT(keyinput78)
INPUT(keyinput79)
INPUT(keyinput80)
INPUT(keyinput81)
INPUT(keyinput82)
INPUT(keyinput83)
INPUT(keyinput84)
INPUT(keyinput85)
INPUT(keyinput86)
INPUT(keyinput87)
INPUT(keyinput88)
INPUT(keyinput89)
INPUT(keyinput90)
INPUT(keyinput91)
INPUT(keyinput92)
INPUT(keyinput93)
INPUT(keyinput94)
INPUT(keyinput95)
INPUT(keyinput96)
INPUT(keyinput97)
INPUT(keyinput98)
INPUT(keyinput99)
INPUT(keyinput100)
INPUT(keyinput101)
INPUT(keyinput102)
INPUT(keyinput103)
INPUT(keyinput104)
INPUT(keyinput105)
INPUT(keyinput106)
INPUT(keyinput107)
INPUT(keyinput108)
INPUT(keyinput109)
INPUT(keyinput110)
INPUT(keyinput111)
INPUT(keyinput112)
INPUT(keyinput113)
INPUT(keyinput114)
INPUT(keyinput115)
INPUT(keyinput116)
INPUT(keyinput117)
INPUT(keyinput118)
INPUT(keyinput119)
INPUT(keyinput120)
INPUT(keyinput121)
INPUT(keyinput122)
INPUT(keyinput123)
INPUT(keyinput124)
INPUT(keyinput125)
INPUT(keyinput126)
INPUT(keyinput127)
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
OUTPUT(result_o[17])
OUTPUT(result_o[18])
OUTPUT(result_o[19])
OUTPUT(result_o[20])
OUTPUT(result_o[21])
OUTPUT(result_o[22])
OUTPUT(result_o[23])
OUTPUT(result_o[24])
OUTPUT(result_o[25])
OUTPUT(result_o[26])
OUTPUT(result_o[27])
OUTPUT(result_o[28])
OUTPUT(result_o[29])
OUTPUT(result_o[30])
OUTPUT(result_o[31])
OUTPUT(result_o[32])
result_o[8] = xor( n659, xenc8 )
n660 = xor( add2_i[8], add1_i[8] )
xenc34 = xor( xenc127, n664 )
n664 = xor( add2_i[6], add1_i[6] )
result_o[5] = xor( xenc101, xenc96 )
n666 = xor( add2_i[5], add1_i[5] )
xenc104 = xor( n668, n669 )
n669 = xor( add2_i[3], add1_i[3] )
xenc52 = xor( n678, xenc126 )
n679 = xor( add2_i[30], add1_i[30] )
xenc121 = xor( xenc94, xenc123 )
n685 = xor( add2_i[2], add1_i[2] )
xenc88 = xor( n690, xenc62 )
n691 = xor( add2_i[28], add1_i[28] )
xenc85 = xor( xenc59, n701 )
n701 = xor( add2_i[26], add1_i[26] )
result_o[24] = xor( xenc115, n711 )
n711 = xor( add2_i[24], add1_i[24] )
result_o[22] = xor( xenc7, n721 )
n721 = xor( add2_i[22], add1_i[22] )
xenc54 = xor( n730, xenc27 )
n731 = xor( add2_i[20], add1_i[20] )
result_o[1] = xor( xenc116, n737 )
n737 = xor( add2_i[1], add1_i[1] )
xenc4 = xor( n742, n743 )
n743 = xor( add2_i[18], add1_i[18] )
xenc43 = xor( xenc65, xenc107 )
n753 = xor( add2_i[16], add1_i[16] )
result_o[14] = xor( n762, n763 )
n763 = xor( add2_i[14], add1_i[14] )
xenc42 = xor( xenc67, xenc12 )
n773 = xor( add2_i[12], add1_i[12] )
result_o[10] = xor( n782, xenc29 )
n783 = xor( add2_i[10], add1_i[10] )
n736 = or( add2_i[0], add1_i[0] )
n830 = not( add2_i[8] )
n826 = not( add2_i[12] )
n832 = not( add2_i[16] )
n828 = not( add2_i[9] )
n836 = not( add2_i[11] )
n838 = not( add2_i[17] )
n834 = not( add2_i[18] )
n665 = nand( n814, n815 )
n814 = nand( add1_i[4], n803 )
n815 = nand( add2_i[4], n802 )
n816 = or( add2_i[0], add1_i[1] )
n817 = or( xenc11, xenc57 )
n889 = and( n817, xenc44 )
n818 = and( n819, n769 )
n819 = not( add1_i[13] )
n820 = or( n833, xenc32 )
n839 = and( xenc16, xenc10 )
n821 = and( n822, n749 )
n822 = not( add1_i[17] )
n823 = or( xenc102, n830 )
n829 = and( n823, xenc117 )
n824 = and( xenc5, xenc47 )
n825 = not( add1_i[9] )
n770 = or( xenc57, xenc11 )
n827 = nor( xenc67, add1_i[12] )
n785 = or( n829, xenc73 )
n864 = not( add2_i[10] )
n788 = or( n830, xenc102 )
n831 = nor( n659, add1_i[8] )
n750 = or( xenc32, n833 )
n833 = nor( xenc65, add1_i[16] )
n740 = or( xenc41, n835 )
n835 = nor( n742, add1_i[18] )
n888 = not( add2_i[13] )
n890 = not( add2_i[15] )
n875 = not( add2_i[25] )
n775 = or( xenc31, n837 )
n837 = nor( xenc77, add1_i[11] )
n745 = or( xenc58, xenc120 )
result_o[31] = xor( n840, n673 )
n840 = xor( add1_i[31], add2_i[31] )
result_o[27] = xor( n841, xenc93 )
n841 = xor( add1_i[27], add2_i[27] )
result_o[29] = xor( n842, n683 )
n842 = xor( add1_i[29], add2_i[29] )
xenc113 = xor( xenc19, n715 )
n843 = xor( add1_i[23], add2_i[23] )
result_o[25] = xor( n844, n705 )
n844 = xor( add1_i[25], add2_i[25] )
n655 = not( add1_i[4] )
n845 = nor( n846, xenc72 )
n846 = and( add1_i[5], n802, add2_i[4] )
n847 = and( add1_i[5], n803, add1_i[4] )
n729 = or( n730, add1_i[20] )
n799 = or( xenc101, add1_i[5] )
n876 = nor( xenc49, xenc66 )
n848 = and( xenc60, add2_i[24] )
n849 = nand( xenc106, n707 )
n891 = nor( n850, xenc84 )
n850 = and( n761, add2_i[14] )
n851 = nand( n860, xenc15 )
result_o[17] = xor( xenc28, n747 )
n852 = xor( add1_i[17], add2_i[17] )
result_o[19] = xor( xenc46, xenc20 )
n853 = xor( add1_i[19], add2_i[19] )
result_o[15] = xor( xenc33, n757 )
n854 = xor( add1_i[15], add2_i[15] )
n726 = xnor( add1_i[21], add2_i[21] )
xenc108 = xor( n855, n767 )
n855 = xor( add1_i[13], add2_i[13] )
result_o[9] = xor( xenc70, n658 )
n856 = xor( add1_i[9], add2_i[9] )
xenc118 = xor( xenc99, xenc77 )
n857 = xor( add1_i[11], add2_i[11] )
xenc82 = xor( xenc35, xenc81 )
n858 = xor( add1_i[7], add2_i[7] )
xenc0 = xor( xenc55, xenc45 )
n859 = xor( add2_i[4], n655 )
n860 = not( add1_i[15] )
n861 = not( add1_i[25] )
n714 = nand( n717, xenc24 )
n862 = and( xenc92, n863 )
n863 = not( add1_i[23] )
n780 = or( n865, n864 )
n865 = nor( n782, add1_i[10] )
n866 = nand( n714, n869 )
n707 = and( xenc18, xenc119 )
n867 = or( n868, n712 )
n868 = not( add1_i[24] )
n869 = and( add2_i[23], add1_i[24] )
n870 = nand( add2_i[23], n714 )
n708 = nand( xenc60, add2_i[24] )
n871 = nand( xenc21, xenc112 )
n872 = nand( n712, n870 )
n873 = nand( n714, add2_i[23] )
n874 = and( n868, n712 )
n703 = or( xenc69, xenc39 )
n877 = nand( n729, xenc51 )
n722 = and( n877, n878 )
n878 = or( xenc48, n727 )
n879 = not( add1_i[21] )
n880 = and( add2_i[20], add1_i[21] )
n881 = nand( n729, add2_i[20] )
n724 = nand( xenc100, xenc124 )
n882 = and( xenc48, n727 )
n725 = nand( n727, xenc78 )
n805 = nand( add2_i[3], xenc125 )
n792 = nand( n883, xenc122 )
n883 = and( xenc37, xenc63 )
n884 = not( add1_i[7] )
n662 = nand( xenc122, xenc37 )
n885 = nand( n799, add2_i[5] )
n795 = nand( n885, xenc68 )
n886 = and( xenc103, xenc23 )
n887 = not( add1_i[6] )
n813 = nand( add2_i[0], add1_i[0] )
n663 = nand( n798, xenc23 )
n676 = nand( add2_i[30], n677 )
n798 = nand( n799, add2_i[5] )
n688 = nand( add2_i[28], n689 )
n683 = nand( n687, xenc2 )
n747 = nand( n749, n750 )
n767 = nand( n769, n770 )
n765 = or( n888, xenc110 )
n755 = or( n890, n891 )
n811 = nand( add2_i[1], xenc89 )
n684 = nand( xenc61, xenc83 )
n658 = nand( xenc47, n788 )
n705 = nand( n707, n708 )
xenc75 = nand( n670, n671 )
n695 = nand( xenc95, xenc26 )
n718 = nand( add2_i[22], n719 )
n727 = nand( add1_i[20], n730 )
n760 = nand( add2_i[14], n761 )
n769 = nand( add1_i[12], xenc67 )
n787 = nand( add1_i[8], n659 )
n794 = nand( add2_i[6], xenc114 )
n804 = nand( add1_i[3], n668 )
n806 = or( n668, add1_i[3] )
n807 = nand( add1_i[2], xenc94 )
n809 = or( xenc94, add1_i[2] )
n728 = nand( add2_i[20], n729 )
n671 = nand( add2_i[31], xenc87 )
n698 = nand( add2_i[26], xenc98 )
n700 = nand( n703, n702 )
n752 = nand( xenc40, xenc80 )
n668 = nand( xenc56, xenc86 )
n808 = nand( add2_i[2], xenc13 )
n730 = nand( xenc111, n733 )
n733 = nand( add2_i[19], n734 )
n772 = nand( xenc25, xenc97 )
n659 = nand( xenc17, xenc91 )
n791 = nand( xenc14, add2_i[7] )
n675 = nand( add1_i[30], n678 )
n677 = or( n678, add1_i[30] )
n687 = nand( add1_i[28], n690 )
n689 = or( n690, add1_i[28] )
n717 = nand( add1_i[22], xenc7 )
n719 = or( xenc7, add1_i[22] )
n739 = nand( add1_i[18], n742 )
n759 = nand( add1_i[14], n762 )
n761 = or( n762, add1_i[14] )
n779 = nand( add1_i[10], n782 )
n673 = nand( xenc105, n676 )
n715 = nand( n717, xenc92 )
n735 = nand( n739, xenc76 )
n757 = nand( xenc15, n760 )
n777 = nand( xenc3, xenc6 )
n802 = nand( xenc55, n655 )
n678 = nand( xenc22, n681 )
n681 = nand( add2_i[29], xenc30 )
n690 = nand( xenc36, n693 )
n693 = nand( add2_i[27], xenc53 )
n720 = nand( xenc9, xenc74 )
n723 = nand( n724, add2_i[21] )
n742 = nand( xenc50, xenc109 )
n762 = nand( n764, xenc64 )
n782 = nand( xenc38, n785 )
n803 = nand( xenc1, n804 )
xenc90 = nand( xenc116, n813 )
xenc71 = xnor( n726, xenc79 )
n670 = nand( add1_i[31], n673 )
n672 = or( n673, add1_i[31] )
n680 = nand( add1_i[29], n683 )
n682 = or( n683, add1_i[29] )
n692 = nand( add1_i[27], xenc93 )
n694 = or( xenc93, add1_i[27] )
n697 = nand( add1_i[26], xenc59 )
n699 = or( xenc59, add1_i[26] )
n702 = nand( add1_i[25], n705 )
n712 = nand( add1_i[23], n715 )
n732 = nand( add1_i[19], xenc20 )
n734 = or( xenc20, add1_i[19] )
n744 = nand( add1_i[17], n747 )
n749 = nand( add1_i[16], xenc65 )
n754 = nand( add1_i[15], n757 )
n764 = nand( add1_i[13], n767 )
n774 = nand( add1_i[11], xenc77 )
n784 = nand( add1_i[9], n658 )
n790 = nand( add1_i[7], xenc81 )
n793 = nand( add1_i[6], xenc127 )
n656 = not( n803 )
n810 = nand( add1_i[1], xenc116 )
n812 = or( n816, add1_i[0] )
result_o[4] = or( xenc0, keyinput0 )
xenc1 = or( n805, keyinput1 )
xenc2 = and( n688, keyinput2 )
xenc3 = or( n780, keyinput3 )
result_o[18] = and( xenc4, keyinput4 )
xenc5 = or( n825, keyinput5 )
xenc6 = or( n779, keyinput6 )
xenc7 = and( n720, keyinput7 )
xenc8 = or( n660, keyinput8 )
xenc9 = and( n722, keyinput9 )
xenc10 = or( n821, keyinput10 )
xenc11 = and( n827, keyinput11 )
xenc12 = and( n773, keyinput12 )
xenc13 = and( n809, keyinput13 )
xenc14 = or( n792, keyinput14 )
xenc15 = or( n759, keyinput15 )
xenc16 = and( n820, keyinput16 )
xenc17 = or( n790, keyinput17 )
xenc18 = and( n866, keyinput18 )
xenc19 = and( n843, keyinput19 )
xenc20 = and( n735, keyinput20 )
xenc21 = or( n873, keyinput21 )
xenc22 = or( n680, keyinput22 )
xenc23 = and( n845, keyinput23 )
xenc24 = or( n862, keyinput24 )
xenc25 = or( n774, keyinput25 )
xenc26 = and( n698, keyinput26 )
xenc27 = or( n731, keyinput27 )
xenc28 = and( n852, keyinput28 )
xenc29 = or( n783, keyinput29 )
xenc30 = and( n682, keyinput30 )
xenc31 = or( n836, keyinput31 )
xenc32 = and( n832, keyinput32 )
xenc33 = and( n854, keyinput33 )
result_o[6] = or( xenc34, keyinput34 )
xenc35 = and( n858, keyinput35 )
xenc36 = and( n692, keyinput36 )
xenc37 = and( n794, keyinput37 )
xenc38 = and( n784, keyinput38 )
xenc39 = or( n875, keyinput39 )
xenc40 = and( n755, keyinput40 )
xenc41 = or( n834, keyinput41 )
result_o[12] = or( xenc42, keyinput42 )
result_o[16] = and( xenc43, keyinput43 )
xenc44 = or( n818, keyinput44 )
xenc45 = and( n859, keyinput45 )
xenc46 = and( n853, keyinput46 )
xenc47 = or( n787, keyinput47 )
xenc48 = or( n879, keyinput48 )
xenc49 = and( n848, keyinput49 )
xenc50 = and( n744, keyinput50 )
xenc51 = or( n880, keyinput51 )
result_o[30] = or( xenc52, keyinput52 )
xenc53 = or( n694, keyinput53 )
result_o[20] = and( xenc54, keyinput54 )
xenc55 = and( n656, keyinput55 )
xenc56 = or( n807, keyinput56 )
xenc57 = and( n826, keyinput57 )
xenc58 = and( n838, keyinput58 )
xenc59 = or( n700, keyinput59 )
xenc60 = or( n871, keyinput60 )
xenc61 = and( n810, keyinput61 )
xenc62 = or( n691, keyinput62 )
xenc63 = or( n884, keyinput63 )
xenc64 = and( n765, keyinput64 )
xenc65 = and( n752, keyinput65 )
xenc66 = or( n849, keyinput66 )
xenc67 = and( n772, keyinput67 )
xenc68 = and( n886, keyinput68 )
xenc69 = or( n876, keyinput69 )
xenc70 = or( n856, keyinput70 )
result_o[21] = and( xenc71, keyinput71 )
xenc72 = and( n847, keyinput72 )
xenc73 = and( n828, keyinput73 )
xenc74 = and( n723, keyinput74 )
result_o[32] = or( xenc75, keyinput75 )
xenc76 = and( n740, keyinput76 )
xenc77 = and( n777, keyinput77 )
xenc78 = and( n728, keyinput78 )
xenc79 = or( n725, keyinput79 )
xenc80 = and( n754, keyinput80 )
xenc81 = and( n662, keyinput81 )
result_o[7] = or( xenc82, keyinput82 )
xenc83 = and( n811, keyinput83 )
xenc84 = and( n851, keyinput84 )
result_o[26] = or( xenc85, keyinput85 )
xenc86 = and( n808, keyinput86 )
xenc87 = or( n672, keyinput87 )
result_o[28] = or( xenc88, keyinput88 )
xenc89 = and( n812, keyinput89 )
result_o[0] = and( xenc90, keyinput90 )
xenc91 = and( n791, keyinput91 )
xenc92 = and( n718, keyinput92 )
xenc93 = or( n695, keyinput93 )
xenc94 = or( n684, keyinput94 )
xenc95 = or( n697, keyinput95 )
xenc96 = or( n666, keyinput96 )
xenc97 = and( n775, keyinput97 )
xenc98 = or( n699, keyinput98 )
xenc99 = or( n857, keyinput99 )
xenc100 = or( n881, keyinput100 )
xenc101 = or( n665, keyinput101 )
xenc102 = or( n831, keyinput102 )
xenc103 = or( n887, keyinput103 )
result_o[3] = or( xenc104, keyinput104 )
xenc105 = and( n675, keyinput105 )
xenc106 = and( n861, keyinput106 )
xenc107 = and( n753, keyinput107 )
result_o[13] = and( xenc108, keyinput108 )
xenc109 = and( n745, keyinput109 )
xenc110 = or( n889, keyinput110 )
xenc111 = or( n732, keyinput111 )
xenc112 = or( n874, keyinput112 )
result_o[23] = and( xenc113, keyinput113 )
xenc114 = or( n795, keyinput114 )
xenc115 = or( n872, keyinput115 )
xenc116 = or( n736, keyinput116 )
xenc117 = or( n824, keyinput117 )
result_o[11] = and( xenc118, keyinput118 )
xenc119 = and( n867, keyinput119 )
xenc120 = and( n839, keyinput120 )
result_o[2] = and( xenc121, keyinput121 )
xenc122 = and( n793, keyinput122 )
xenc123 = and( n685, keyinput123 )
xenc124 = and( n882, keyinput124 )
xenc125 = or( n806, keyinput125 )
xenc126 = or( n679, keyinput126 )
xenc127 = or( n663, keyinput127 )
