# BENCH FILE 
# circuit:ripple_carry_adder32.bench

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add1_i[16])
INPUT(add1_i[17])
INPUT(add1_i[18])
INPUT(add1_i[19])
INPUT(add1_i[20])
INPUT(add1_i[21])
INPUT(add1_i[22])
INPUT(add1_i[23])
INPUT(add1_i[24])
INPUT(add1_i[25])
INPUT(add1_i[26])
INPUT(add1_i[27])
INPUT(add1_i[28])
INPUT(add1_i[29])
INPUT(add1_i[30])
INPUT(add1_i[31])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(add2_i[16])
INPUT(add2_i[17])
INPUT(add2_i[18])
INPUT(add2_i[19])
INPUT(add2_i[20])
INPUT(add2_i[21])
INPUT(add2_i[22])
INPUT(add2_i[23])
INPUT(add2_i[24])
INPUT(add2_i[25])
INPUT(add2_i[26])
INPUT(add2_i[27])
INPUT(add2_i[28])
INPUT(add2_i[29])
INPUT(add2_i[30])
INPUT(add2_i[31])
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
INPUT(keyinput32)
INPUT(keyinput33)
INPUT(keyinput34)
INPUT(keyinput35)
INPUT(keyinput36)
INPUT(keyinput37)
INPUT(keyinput38)
INPUT(keyinput39)
INPUT(keyinput40)
INPUT(keyinput41)
INPUT(keyinput42)
INPUT(keyinput43)
INPUT(keyinput44)
INPUT(keyinput45)
INPUT(keyinput46)
INPUT(keyinput47)
INPUT(keyinput48)
INPUT(keyinput49)
INPUT(keyinput50)
INPUT(keyinput51)
INPUT(keyinput52)
INPUT(keyinput53)
INPUT(keyinput54)
INPUT(keyinput55)
INPUT(keyinput56)
INPUT(keyinput57)
INPUT(keyinput58)
INPUT(keyinput59)
INPUT(keyinput60)
INPUT(keyinput61)
INPUT(keyinput62)
INPUT(keyinput63)
INPUT(keyinput64)
INPUT(keyinput65)
INPUT(keyinput66)
INPUT(keyinput67)
INPUT(keyinput68)
INPUT(keyinput69)
INPUT(keyinput70)
INPUT(keyinput71)
INPUT(keyinput72)
INPUT(keyinput73)
INPUT(keyinput74)
INPUT(keyinput75)
INPUT(keyinput76)
INPUT(keyinput77)
INPUT(keyinput78)
INPUT(keyinput79)
INPUT(keyinput80)
INPUT(keyinput81)
INPUT(keyinput82)
INPUT(keyinput83)
INPUT(keyinput84)
INPUT(keyinput85)
INPUT(keyinput86)
INPUT(keyinput87)
INPUT(keyinput88)
INPUT(keyinput89)
INPUT(keyinput90)
INPUT(keyinput91)
INPUT(keyinput92)
INPUT(keyinput93)
INPUT(keyinput94)
INPUT(keyinput95)
INPUT(keyinput96)
INPUT(keyinput97)
INPUT(keyinput98)
INPUT(keyinput99)
INPUT(keyinput100)
INPUT(keyinput101)
INPUT(keyinput102)
INPUT(keyinput103)
INPUT(keyinput104)
INPUT(keyinput105)
INPUT(keyinput106)
INPUT(keyinput107)
INPUT(keyinput108)
INPUT(keyinput109)
INPUT(keyinput110)
INPUT(keyinput111)
INPUT(keyinput112)
INPUT(keyinput113)
INPUT(keyinput114)
INPUT(keyinput115)
INPUT(keyinput116)
INPUT(keyinput117)
INPUT(keyinput118)
INPUT(keyinput119)
INPUT(keyinput120)
INPUT(keyinput121)
INPUT(keyinput122)
INPUT(keyinput123)
INPUT(keyinput124)
INPUT(keyinput125)
INPUT(keyinput126)
INPUT(keyinput127)
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
OUTPUT(result_o[17])
OUTPUT(result_o[18])
OUTPUT(result_o[19])
OUTPUT(result_o[20])
OUTPUT(result_o[21])
OUTPUT(result_o[22])
OUTPUT(result_o[23])
OUTPUT(result_o[24])
OUTPUT(result_o[25])
OUTPUT(result_o[26])
OUTPUT(result_o[27])
OUTPUT(result_o[28])
OUTPUT(result_o[29])
OUTPUT(result_o[30])
OUTPUT(result_o[31])
OUTPUT(result_o[32])
n886 = or( add2_i[0], add1_i[0] )
xenc92 = xor( xenc87, xenc67 )
xenc123 = xor( add2_i[6], n816 )
xenc21 = xor( add2_i[5], n817 )
xenc100 = xor( n819, n820 )
n820 = xor( add2_i[3], add1_i[3] )
result_o[2] = xor( n837, add2_i[2] )
xenc68 = xor( add2_i[28], xenc119 )
result_o[27] = xor( add2_i[27], n846 )
result_o[26] = xor( n856, xenc89 )
xenc7 = xor( xenc113, add2_i[25] )
result_o[24] = xor( xenc115, n864 )
n864 = xor( add2_i[24], add1_i[24] )
result_o[23] = xor( add2_i[23], xenc57 )
xenc25 = xor( add2_i[22], xenc43 )
xenc35 = xor( add2_i[21], n875 )
result_o[1] = xor( xenc54, xenc1 )
n887 = xor( add2_i[1], add1_i[1] )
xenc65 = xor( xenc6, add2_i[19] )
xenc45 = xor( xenc116, n895 )
result_o[15] = xor( add2_i[15], xenc117 )
xenc16 = xor( n912, xenc72 )
n913 = xor( add2_i[14], add1_i[14] )
xenc32 = xor( xenc102, add2_i[12] )
xenc28 = xor( xenc85, n927 )
n927 = xor( add2_i[11], add1_i[11] )
result_o[10] = xor( n930, add2_i[10] )
n837 = xor( xenc125, add1_i[2] )
n841 = nand( n796, xenc30 )
n911 = nand( n1002, xenc15, xenc40 )
n995 = nand( n836, add2_i[28], add1_i[29], n998 )
n977 = xor( n931, add1_i[10] )
n957 = nand( n965, xenc111, n958 )
n965 = not( add1_i[3] )
n996 = nand( xenc98, add1_i[28], add1_i[29] )
n893 = nand( n800, n900, xenc12 )
n974 = nor( n966, add1_i[11] )
n966 = not( xenc17 )
n985 = and( xenc13, n988, n948 )
n1000 = nor( xenc96, add1_i[24] )
n967 = not( n865 )
n969 = nand( xenc60, add2_i[16], add1_i[17] )
n827 = nand( xenc4, xenc71, xenc82, n830 )
n938 = nand( xenc20, xenc124, add2_i[6] )
n921 = xor( n922, add1_i[12] )
n871 = xor( n872, add1_i[22] )
n859 = xor( xenc23, add1_i[25] )
n840 = nor( n968, xenc121, xenc80 )
n968 = not( xenc64 )
xenc77 = xnor( add2_i[0], add1_i[0] )
result_o[4] = xor( add2_i[4], xenc26 )
n903 = xnor( xenc83, add1_i[16] )
n896 = and( add2_i[17], xenc11, xenc74 )
n880 = xnor( xenc52, add1_i[20] )
result_o[31] = xor( xenc55, add2_i[31] )
n848 = and( xenc88, n850 )
n1003 = not( add1_i[4] )
n897 = nand( xenc37, n970 )
n970 = or( n800, xenc12 )
n971 = nand( n909, n910 )
n972 = nand( n815, xenc53 )
n973 = nand( n977, add2_i[10] )
n925 = nand( n973, xenc63 )
n975 = nand( n861, xenc114 )
n976 = not( add1_i[30] )
n815 = and( n941, xenc76 )
n816 = and( xenc124, xenc20 )
n890 = nand( n892, n978 )
n978 = nor( n897, add1_i[18] )
n979 = and( n817, n988 )
n998 = nor( xenc80, xenc121 )
n980 = and( add1_i[28], xenc58 )
n981 = and( xenc118, add1_i[28] )
n982 = or( xenc118, add1_i[28], xenc58 )
n983 = or( xenc118, add1_i[28], xenc58 )
n836 = or( xenc118, add1_i[28], xenc58 )
n984 = nor( n979, xenc103 )
n937 = nor( xenc95, xenc103 )
n986 = nor( n987, xenc13 )
n987 = not( add1_i[6] )
n988 = and( add2_i[5], add1_i[6] )
n989 = or( xenc126, add1_i[13] )
n990 = nor( xenc30, xenc29 )
n991 = nor( n797, n848 )
n916 = or( xenc126, add1_i[13] )
n845 = nor( n797, n848 )
n992 = nand( add2_i[27], xenc105 )
n993 = nand( n909, n910 )
n994 = nand( xenc94, xenc79, xenc86 )
n831 = and( xenc71, xenc82 )
n997 = not( add1_i[29] )
n999 = nand( xenc57, add2_i[23] )
n862 = nand( n999, xenc109 )
n1001 = nand( xenc2, add2_i[13] )
n1002 = not( add1_i[14] )
n818 = xnor( n954, n1003 )
n1005 = not( add1_i[21] )
n1004 = not( add1_i[10] )
n930 = xnor( n931, xenc93 )
n875 = xnor( n876, xenc8 )
n1006 = not( add1_i[19] )
n1007 = not( add1_i[31] )
n884 = xnor( xenc108, xenc36 )
n823 = xnor( n824, xenc38 )
n1012 = not( add1_i[15] )
n1011 = not( add1_i[23] )
n830 = nand( xenc73, add2_i[29] )
n833 = nand( n834, n997, n835 )
n850 = nand( add2_i[26], n851 )
n851 = nand( xenc61, xenc39, xenc27 )
n801 = not( add1_i[9] )
n857 = xnor( add2_i[26], xenc39 )
n948 = or( xenc19, add1_i[5] )
xenc51 = xor( n1008, xenc46 )
n1008 = xor( add1_i[30], add2_i[30] )
result_o[29] = xor( n1009, n832 )
n1009 = xor( add1_i[29], add2_i[29] )
n834 = nand( add1_i[28], xenc98 )
n802 = not( add1_i[8] )
xenc50 = xnor( add2_i[20], xenc47 )
n933 = nand( add2_i[8], xenc91 )
n940 = nand( add2_i[7], xenc49 )
n852 = nand( add2_i[25], n854 )
n945 = nand( add2_i[6], xenc124 )
n803 = not( add1_i[7] )
n894 = xnor( add1_i[18], add2_i[18] )
xenc81 = xnor( add2_i[17], n898 )
xenc22 = xnor( add2_i[13], xenc3 )
xenc120 = xnor( add2_i[16], n903 )
n800 = not( add1_i[17] )
n812 = xnor( add2_i[8], n802 )
n798 = not( add1_i[26] )
result_o[7] = xnor( add2_i[7], n1010 )
n1010 = nand( xenc14, n815 )
xenc62 = xnor( add2_i[9], n808 )
n797 = not( add1_i[27] )
n943 = nand( xenc13, n987, n947 )
n885 = nand( n888, n889 )
n867 = xnor( xenc56, n1011 )
n907 = xnor( n993, xenc59 )
n902 = or( xenc83, add1_i[16] )
n879 = or( xenc52, add1_i[20] )
n917 = nand( xenc15, xenc2 )
n910 = nand( n911, add2_i[14] )
n924 = nand( xenc97, add2_i[11] )
n922 = nand( xenc9, n923 )
n855 = nand( n861, xenc114 )
n861 = nand( add2_i[24], n862 )
n947 = nand( n948, add2_i[5] )
n824 = nand( xenc5, n826 )
n956 = nand( xenc106, add2_i[3] )
n914 = nand( n916, add2_i[13] )
n846 = and( n796, xenc105 )
n826 = nand( xenc99, add2_i[30] )
n817 = and( xenc13, n948 )
n958 = nand( add1_i[2], xenc125 )
n954 = nand( xenc42, n955 )
n952 = nand( add1_i[4], n954 )
n847 = nand( n848, n797 )
n873 = nand( add1_i[21], n876 )
n889 = nand( n890, add2_i[18] )
n919 = nand( add1_i[12], n922 )
n912 = nand( xenc101, xenc15 )
n900 = nand( xenc60, add2_i[16] )
n960 = nand( n962, xenc0 )
n962 = nand( xenc70, add2_i[1] )
n876 = nand( n877, n878 )
n877 = nand( n879, add2_i[20] )
n821 = nand( add1_i[31], n824 )
n863 = nand( n865, n866 )
n865 = nand( xenc56, add1_i[23] )
n928 = nand( n931, add1_i[10] )
n931 = nand( xenc10, xenc107 )
n939 = nand( n940, n802, n815 )
n946 = nand( add1_i[5], xenc19 )
n832 = nand( n834, xenc41 )
n868 = nand( n870, n869 )
n869 = nand( n872, add1_i[22] )
n905 = nand( n971, add1_i[15] )
n915 = nand( add1_i[13], xenc126 )
n951 = nand( n953, n952 )
n819 = nand( xenc111, n958 )
n828 = nand( xenc110, n830 )
n839 = nand( add2_i[28], xenc119 )
n849 = nand( add1_i[26], n856 )
n888 = nand( add1_i[18], xenc84 )
n891 = nand( n892, xenc74 )
n918 = nand( xenc44, xenc78 )
n810 = nand( n935, add1_i[9] )
n934 = nand( add1_i[8], xenc18 )
n898 = nand( xenc11, xenc74 )
n835 = nand( add2_i[28], xenc33 )
n856 = nand( xenc27, n858 )
n853 = nand( add1_i[25], n975 )
n854 = or( n975, add1_i[25] )
n872 = nand( xenc31, n873 )
n878 = nand( add1_i[20], xenc52 )
n892 = nand( add2_i[17], xenc11 )
n926 = nand( xenc17, xenc122 )
n935 = nand( xenc94, xenc86 )
n809 = nand( xenc94, xenc79, xenc86 )
n811 = nand( n815, xenc53 )
xenc34 = nand( xenc112, n822 )
n808 = nand( xenc90, xenc10 )
n860 = nand( add1_i[24], xenc115 )
n881 = nand( xenc104, xenc75 )
n883 = nand( add2_i[19], xenc6 )
n901 = nand( add1_i[16], xenc83 )
n904 = nand( n905, xenc48 )
n923 = nand( add1_i[11], xenc85 )
n932 = nand( add2_i[9], xenc66 )
n936 = nand( add2_i[7], xenc14 )
n955 = nand( add1_i[3], n819 )
n961 = nand( add1_i[1], xenc54 )
n963 = or( xenc54, add1_i[1] )
n822 = nand( add2_i[31], xenc55 )
n895 = nor( xenc69, n897 )
n825 = nand( add1_i[30], xenc46 )
n796 = not( xenc118 )
n858 = nand( xenc113, add2_i[25] )
n866 = nand( add2_i[23], xenc57 )
n870 = nand( add2_i[22], xenc43 )
n874 = nand( add2_i[21], n875 )
n882 = nand( xenc108, add1_i[19] )
n799 = not( n897 )
n906 = nand( add2_i[15], xenc117 )
n909 = nand( add1_i[14], n912 )
n920 = nand( add2_i[12], xenc102 )
n929 = nand( add2_i[10], n930 )
n944 = nand( n984, xenc24, n945 )
n814 = nand( n984, xenc24, xenc127 )
n942 = nand( add1_i[7], n816, add2_i[6] )
n941 = or( n984, xenc24 )
n953 = nand( xenc26, add2_i[4] )
n959 = nand( add2_i[2], n837 )
xenc0 = and( n961, keyinput0 )
xenc1 = and( n887, keyinput1 )
xenc2 = and( n989, keyinput2 )
xenc3 = and( n917, keyinput3 )
xenc4 = or( n976, keyinput4 )
xenc5 = or( n825, keyinput5 )
xenc6 = or( n884, keyinput6 )
result_o[25] = or( xenc7, keyinput7 )
xenc8 = and( n1005, keyinput8 )
xenc9 = and( n924, keyinput9 )
xenc10 = or( n810, keyinput10 )
xenc11 = and( n893, keyinput11 )
xenc12 = and( n901, keyinput12 )
xenc13 = or( n946, keyinput13 )
xenc14 = and( n814, keyinput14 )
xenc15 = and( n915, keyinput15 )
result_o[14] = and( xenc16, keyinput16 )
xenc17 = or( n928, keyinput17 )
xenc18 = or( n811, keyinput18 )
xenc19 = or( n951, keyinput19 )
xenc20 = and( n937, keyinput20 )
result_o[5] = or( xenc21, keyinput21 )
result_o[13] = or( xenc22, keyinput22 )
xenc23 = and( n855, keyinput23 )
xenc24 = or( n803, keyinput24 )
result_o[22] = and( xenc25, keyinput25 )
xenc26 = or( n818, keyinput26 )
xenc27 = and( n853, keyinput27 )
result_o[11] = and( xenc28, keyinput28 )
xenc29 = and( n845, keyinput29 )
xenc30 = or( n992, keyinput30 )
xenc31 = and( n874, keyinput31 )
result_o[12] = and( xenc32, keyinput32 )
xenc33 = and( n982, keyinput33 )
result_o[32] = and( xenc34, keyinput34 )
result_o[21] = and( xenc35, keyinput35 )
xenc36 = or( n1006, keyinput36 )
xenc37 = and( n969, keyinput37 )
xenc38 = or( n1007, keyinput38 )
xenc39 = and( n798, keyinput39 )
xenc40 = and( n1001, keyinput40 )
xenc41 = and( n839, keyinput41 )
xenc42 = and( n956, keyinput42 )
xenc43 = or( n871, keyinput43 )
xenc44 = or( n919, keyinput44 )
result_o[18] = and( xenc45, keyinput45 )
xenc46 = or( n828, keyinput46 )
xenc47 = and( n880, keyinput47 )
xenc48 = and( n906, keyinput48 )
xenc49 = and( n944, keyinput49 )
result_o[20] = or( xenc50, keyinput50 )
result_o[30] = and( xenc51, keyinput51 )
xenc52 = or( n881, keyinput52 )
xenc53 = and( n936, keyinput53 )
xenc54 = or( n886, keyinput54 )
xenc55 = and( n823, keyinput55 )
xenc56 = and( n868, keyinput56 )
xenc57 = and( n867, keyinput57 )
xenc58 = or( n990, keyinput58 )
xenc59 = and( n1012, keyinput59 )
xenc60 = and( n902, keyinput60 )
xenc61 = and( n852, keyinput61 )
result_o[9] = or( xenc62, keyinput62 )
xenc63 = or( n974, keyinput63 )
xenc64 = and( n983, keyinput64 )
result_o[19] = or( xenc65, keyinput65 )
xenc66 = or( n809, keyinput66 )
xenc67 = and( n812, keyinput67 )
result_o[28] = or( xenc68, keyinput68 )
xenc69 = and( n896, keyinput69 )
xenc70 = and( n963, keyinput70 )
xenc71 = and( n995, keyinput71 )
xenc72 = and( n913, keyinput72 )
xenc73 = and( n833, keyinput73 )
xenc74 = or( n799, keyinput74 )
xenc75 = and( n882, keyinput75 )
xenc76 = and( n942, keyinput76 )
result_o[0] = and( xenc77, keyinput77 )
xenc78 = and( n920, keyinput78 )
xenc79 = and( n801, keyinput79 )
xenc80 = and( n980, keyinput80 )
result_o[17] = or( xenc81, keyinput81 )
xenc82 = or( n996, keyinput82 )
xenc83 = or( n904, keyinput83 )
xenc84 = and( n891, keyinput84 )
xenc85 = and( n926, keyinput85 )
xenc86 = and( n934, keyinput86 )
xenc87 = and( n972, keyinput87 )
xenc88 = and( n849, keyinput88 )
xenc89 = or( n857, keyinput89 )
xenc90 = or( n994, keyinput90 )
xenc91 = and( n939, keyinput91 )
result_o[8] = or( xenc92, keyinput92 )
xenc93 = and( n1004, keyinput93 )
xenc94 = or( n933, keyinput94 )
xenc95 = and( n985, keyinput95 )
xenc96 = or( n967, keyinput96 )
xenc97 = and( n925, keyinput97 )
xenc98 = and( n841, keyinput98 )
xenc99 = or( n827, keyinput99 )
result_o[3] = and( xenc100, keyinput100 )
xenc101 = and( n914, keyinput101 )
xenc102 = or( n921, keyinput102 )
xenc103 = or( n986, keyinput103 )
xenc104 = and( n883, keyinput104 )
xenc105 = and( n847, keyinput105 )
xenc106 = or( n957, keyinput106 )
xenc107 = and( n932, keyinput107 )
xenc108 = and( n885, keyinput108 )
xenc109 = or( n1000, keyinput109 )
xenc110 = or( n831, keyinput110 )
xenc111 = and( n959, keyinput111 )
xenc112 = and( n821, keyinput112 )
xenc113 = and( n859, keyinput113 )
xenc114 = or( n860, keyinput114 )
xenc115 = and( n863, keyinput115 )
xenc116 = and( n894, keyinput116 )
xenc117 = or( n907, keyinput117 )
xenc118 = or( n991, keyinput118 )
xenc119 = and( n840, keyinput119 )
result_o[16] = and( xenc120, keyinput120 )
xenc121 = and( n981, keyinput121 )
xenc122 = and( n929, keyinput122 )
result_o[6] = and( xenc123, keyinput123 )
xenc124 = and( n943, keyinput124 )
xenc125 = and( n960, keyinput125 )
xenc126 = and( n918, keyinput126 )
xenc127 = or( n938, keyinput127 )
