# BENCH FILE 
# circuit:ripple_carry_adder32.bench

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add1_i[16])
INPUT(add1_i[17])
INPUT(add1_i[18])
INPUT(add1_i[19])
INPUT(add1_i[20])
INPUT(add1_i[21])
INPUT(add1_i[22])
INPUT(add1_i[23])
INPUT(add1_i[24])
INPUT(add1_i[25])
INPUT(add1_i[26])
INPUT(add1_i[27])
INPUT(add1_i[28])
INPUT(add1_i[29])
INPUT(add1_i[30])
INPUT(add1_i[31])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(add2_i[16])
INPUT(add2_i[17])
INPUT(add2_i[18])
INPUT(add2_i[19])
INPUT(add2_i[20])
INPUT(add2_i[21])
INPUT(add2_i[22])
INPUT(add2_i[23])
INPUT(add2_i[24])
INPUT(add2_i[25])
INPUT(add2_i[26])
INPUT(add2_i[27])
INPUT(add2_i[28])
INPUT(add2_i[29])
INPUT(add2_i[30])
INPUT(add2_i[31])
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
INPUT(keyinput32)
INPUT(keyinput33)
INPUT(keyinput34)
INPUT(keyinput35)
INPUT(keyinput36)
INPUT(keyinput37)
INPUT(keyinput38)
INPUT(keyinput39)
INPUT(keyinput40)
INPUT(keyinput41)
INPUT(keyinput42)
INPUT(keyinput43)
INPUT(keyinput44)
INPUT(keyinput45)
INPUT(keyinput46)
INPUT(keyinput47)
INPUT(keyinput48)
INPUT(keyinput49)
INPUT(keyinput50)
INPUT(keyinput51)
INPUT(keyinput52)
INPUT(keyinput53)
INPUT(keyinput54)
INPUT(keyinput55)
INPUT(keyinput56)
INPUT(keyinput57)
INPUT(keyinput58)
INPUT(keyinput59)
INPUT(keyinput60)
INPUT(keyinput61)
INPUT(keyinput62)
INPUT(keyinput63)
INPUT(keyinput64)
INPUT(keyinput65)
INPUT(keyinput66)
INPUT(keyinput67)
INPUT(keyinput68)
INPUT(keyinput69)
INPUT(keyinput70)
INPUT(keyinput71)
INPUT(keyinput72)
INPUT(keyinput73)
INPUT(keyinput74)
INPUT(keyinput75)
INPUT(keyinput76)
INPUT(keyinput77)
INPUT(keyinput78)
INPUT(keyinput79)
INPUT(keyinput80)
INPUT(keyinput81)
INPUT(keyinput82)
INPUT(keyinput83)
INPUT(keyinput84)
INPUT(keyinput85)
INPUT(keyinput86)
INPUT(keyinput87)
INPUT(keyinput88)
INPUT(keyinput89)
INPUT(keyinput90)
INPUT(keyinput91)
INPUT(keyinput92)
INPUT(keyinput93)
INPUT(keyinput94)
INPUT(keyinput95)
INPUT(keyinput96)
INPUT(keyinput97)
INPUT(keyinput98)
INPUT(keyinput99)
INPUT(keyinput100)
INPUT(keyinput101)
INPUT(keyinput102)
INPUT(keyinput103)
INPUT(keyinput104)
INPUT(keyinput105)
INPUT(keyinput106)
INPUT(keyinput107)
INPUT(keyinput108)
INPUT(keyinput109)
INPUT(keyinput110)
INPUT(keyinput111)
INPUT(keyinput112)
INPUT(keyinput113)
INPUT(keyinput114)
INPUT(keyinput115)
INPUT(keyinput116)
INPUT(keyinput117)
INPUT(keyinput118)
INPUT(keyinput119)
INPUT(keyinput120)
INPUT(keyinput121)
INPUT(keyinput122)
INPUT(keyinput123)
INPUT(keyinput124)
INPUT(keyinput125)
INPUT(keyinput126)
INPUT(keyinput127)
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
OUTPUT(result_o[17])
OUTPUT(result_o[18])
OUTPUT(result_o[19])
OUTPUT(result_o[20])
OUTPUT(result_o[21])
OUTPUT(result_o[22])
OUTPUT(result_o[23])
OUTPUT(result_o[24])
OUTPUT(result_o[25])
OUTPUT(result_o[26])
OUTPUT(result_o[27])
OUTPUT(result_o[28])
OUTPUT(result_o[29])
OUTPUT(result_o[30])
OUTPUT(result_o[31])
OUTPUT(result_o[32])
n886 = or( add2_i[0], add1_i[0] )
xenc30 = xor( xenc96, n812 )
xenc117 = xor( add2_i[6], xenc25 )
xenc47 = xor( add2_i[5], xenc120 )
result_o[3] = xor( xenc119, n820 )
n820 = xor( add2_i[3], add1_i[3] )
xenc104 = xor( xenc70, add2_i[2] )
xenc93 = xor( add2_i[28], xenc64 )
result_o[27] = xor( add2_i[27], xenc41 )
result_o[26] = xor( xenc35, n857 )
result_o[25] = xor( n859, add2_i[25] )
xenc81 = xor( n863, n864 )
n864 = xor( add2_i[24], add1_i[24] )
xenc94 = xor( add2_i[23], xenc126 )
xenc123 = xor( add2_i[22], n871 )
xenc105 = xor( add2_i[21], n875 )
result_o[1] = xor( xenc10, xenc71 )
n887 = xor( add2_i[1], add1_i[1] )
result_o[19] = xor( xenc127, add2_i[19] )
xenc6 = xor( n894, n895 )
result_o[15] = xor( add2_i[15], n907 )
xenc62 = xor( xenc68, xenc121 )
n913 = xor( add2_i[14], add1_i[14] )
result_o[12] = xor( n921, add2_i[12] )
xenc42 = xor( xenc33, n927 )
n927 = xor( add2_i[11], add1_i[11] )
result_o[10] = xor( xenc45, add2_i[10] )
n837 = xor( xenc114, add1_i[2] )
n841 = nand( xenc28, xenc108 )
n911 = nand( xenc54, n915, xenc72 )
n995 = nand( xenc74, add2_i[28], add1_i[29], n998 )
n977 = xor( n931, add1_i[10] )
n957 = nand( n965, n959, xenc80 )
n965 = not( add1_i[3] )
n996 = nand( n841, add1_i[28], add1_i[29] )
n893 = nand( n800, n900, n901 )
n974 = nor( xenc84, add1_i[11] )
n966 = not( xenc21 )
n985 = and( n946, xenc85, n948 )
n1000 = nor( xenc52, add1_i[24] )
n967 = not( n865 )
n969 = nand( xenc12, add2_i[16], add1_i[17] )
n827 = nand( n976, xenc77, n996, n830 )
n938 = nand( n937, n943, add2_i[6] )
n921 = xor( n922, add1_i[12] )
n871 = xor( xenc43, add1_i[22] )
n859 = xor( n855, add1_i[25] )
n840 = nor( xenc87, n981, xenc59 )
n968 = not( n983 )
result_o[0] = xnor( add2_i[0], add1_i[0] )
xenc24 = xor( add2_i[4], n818 )
n903 = xnor( n904, add1_i[16] )
n896 = and( add2_i[17], xenc36, n799 )
n880 = xnor( xenc46, add1_i[20] )
xenc22 = xor( n823, add2_i[31] )
n848 = and( n849, xenc91 )
n1003 = not( add1_i[4] )
n897 = nand( xenc97, n970 )
n970 = or( n800, n901 )
n971 = nand( xenc4, n910 )
n972 = nand( xenc29, xenc40 )
n973 = nand( xenc50, add2_i[10] )
n925 = nand( n973, xenc89 )
n975 = nand( xenc57, xenc39 )
n976 = not( add1_i[30] )
n815 = and( xenc125, n942 )
n816 = and( n943, n937 )
n890 = nand( n892, xenc15 )
n978 = nor( xenc118, add1_i[18] )
n979 = and( xenc120, xenc85 )
n998 = nor( xenc59, n981 )
n980 = and( add1_i[28], n990 )
n981 = and( n991, add1_i[28] )
n982 = or( n991, add1_i[28], n990 )
n983 = or( n991, add1_i[28], n990 )
n836 = or( n991, add1_i[28], n990 )
n984 = nor( n979, xenc26 )
n937 = nor( xenc99, xenc26 )
n986 = nor( n987, n946 )
n987 = not( add1_i[6] )
n988 = and( add2_i[5], add1_i[6] )
n989 = or( xenc116, add1_i[13] )
n990 = nor( xenc108, xenc109 )
n991 = nor( n797, xenc19 )
n916 = or( xenc116, add1_i[13] )
n845 = nor( n797, xenc19 )
n992 = nand( add2_i[27], xenc58 )
n993 = nand( xenc4, n910 )
n994 = nand( n933, n801, n934 )
n831 = and( xenc77, n996 )
n997 = not( add1_i[29] )
n999 = nand( xenc126, add2_i[23] )
n862 = nand( n999, xenc7 )
n1001 = nand( xenc65, add2_i[13] )
n1002 = not( add1_i[14] )
n818 = xnor( xenc37, n1003 )
n1005 = not( add1_i[21] )
n1004 = not( add1_i[10] )
n930 = xnor( n931, n1004 )
n875 = xnor( xenc110, xenc83 )
n1006 = not( add1_i[19] )
n1007 = not( add1_i[31] )
n884 = xnor( xenc8, n1006 )
n823 = xnor( n824, n1007 )
n1012 = not( add1_i[15] )
n1011 = not( add1_i[23] )
n830 = nand( xenc103, add2_i[29] )
n833 = nand( n834, n997, n835 )
n850 = nand( add2_i[26], xenc17 )
n851 = nand( n852, xenc9, n853 )
n801 = not( add1_i[9] )
n857 = xnor( add2_i[26], xenc9 )
n948 = or( xenc86, add1_i[5] )
result_o[30] = xor( xenc60, xenc5 )
n1008 = xor( add1_i[30], add2_i[30] )
result_o[29] = xor( xenc106, n832 )
n1009 = xor( add1_i[29], add2_i[29] )
n834 = nand( add1_i[28], n841 )
n802 = not( add1_i[8] )
result_o[20] = xnor( add2_i[20], xenc23 )
n933 = nand( add2_i[8], n939 )
n940 = nand( add2_i[7], n944 )
n852 = nand( add2_i[25], xenc82 )
n945 = nand( add2_i[6], n943 )
n803 = not( add1_i[7] )
n894 = xnor( add1_i[18], add2_i[18] )
result_o[17] = xnor( add2_i[17], n898 )
xenc49 = xnor( add2_i[13], n917 )
result_o[16] = xnor( add2_i[16], n903 )
n800 = not( add1_i[17] )
n812 = xnor( add2_i[8], xenc75 )
n798 = not( add1_i[26] )
xenc18 = xnor( add2_i[7], n1010 )
n1010 = nand( n814, xenc29 )
xenc53 = xnor( add2_i[9], n808 )
n797 = not( add1_i[27] )
n943 = nand( n946, n987, xenc56 )
n885 = nand( xenc95, n889 )
n867 = xnor( xenc124, xenc31 )
n907 = xnor( xenc107, xenc11 )
n902 = or( n904, add1_i[16] )
n879 = or( xenc46, add1_i[20] )
n917 = nand( n915, xenc65 )
n910 = nand( xenc44, add2_i[14] )
n924 = nand( xenc32, add2_i[11] )
n922 = nand( xenc100, xenc3 )
n855 = nand( xenc57, xenc39 )
n861 = nand( add2_i[24], xenc79 )
n947 = nand( n948, add2_i[5] )
n824 = nand( xenc78, xenc66 )
n956 = nand( xenc101, add2_i[3] )
n914 = nand( xenc48, add2_i[13] )
n846 = and( xenc28, xenc58 )
n826 = nand( xenc34, add2_i[30] )
n817 = and( n946, n948 )
n958 = nand( add1_i[2], xenc114 )
n954 = nand( n956, n955 )
n952 = nand( add1_i[4], xenc37 )
n847 = nand( xenc19, n797 )
n873 = nand( add1_i[21], xenc110 )
n889 = nand( n890, add2_i[18] )
n919 = nand( add1_i[12], n922 )
n912 = nand( xenc27, n915 )
n900 = nand( xenc12, add2_i[16] )
n960 = nand( n962, xenc73 )
n962 = nand( n963, add2_i[1] )
n876 = nand( n877, xenc51 )
n877 = nand( xenc13, add2_i[20] )
n821 = nand( add1_i[31], n824 )
n863 = nand( n865, xenc102 )
n865 = nand( xenc124, add1_i[23] )
n928 = nand( n931, add1_i[10] )
n931 = nand( n810, xenc0 )
n939 = nand( xenc63, xenc75, xenc29 )
n946 = nand( add1_i[5], xenc86 )
n832 = nand( n834, xenc1 )
n868 = nand( xenc88, xenc55 )
n869 = nand( xenc43, add1_i[22] )
n905 = nand( xenc98, add1_i[15] )
n915 = nand( add1_i[13], xenc116 )
n951 = nand( n953, xenc115 )
n819 = nand( n959, xenc80 )
n828 = nand( xenc112, n830 )
n839 = nand( add2_i[28], xenc64 )
n849 = nand( add1_i[26], xenc35 )
n888 = nand( add1_i[18], xenc69 )
n891 = nand( n892, n799 )
n918 = nand( n919, n920 )
n810 = nand( n935, add1_i[9] )
n934 = nand( add1_i[8], n811 )
n898 = nand( xenc36, n799 )
n835 = nand( add2_i[28], xenc67 )
n856 = nand( n853, n858 )
n853 = nand( add1_i[25], n975 )
n854 = or( n975, add1_i[25] )
n872 = nand( n874, n873 )
n878 = nand( add1_i[20], xenc46 )
n892 = nand( add2_i[17], xenc36 )
n926 = nand( xenc21, xenc14 )
n935 = nand( n933, n934 )
n809 = nand( n933, n801, n934 )
n811 = nand( xenc29, xenc40 )
result_o[32] = nand( xenc113, xenc122 )
n808 = nand( xenc20, n810 )
n860 = nand( add1_i[24], n863 )
n881 = nand( xenc76, xenc61 )
n883 = nand( add2_i[19], xenc127 )
n901 = nand( add1_i[16], n904 )
n904 = nand( xenc111, n906 )
n923 = nand( add1_i[11], xenc33 )
n932 = nand( add2_i[9], xenc2 )
n936 = nand( add2_i[7], n814 )
n955 = nand( add1_i[3], xenc119 )
n961 = nand( add1_i[1], xenc10 )
n963 = or( xenc10, add1_i[1] )
n822 = nand( add2_i[31], n823 )
n895 = nor( xenc92, xenc118 )
n825 = nand( add1_i[30], xenc5 )
n796 = not( n991 )
n858 = nand( n859, add2_i[25] )
n866 = nand( add2_i[23], xenc126 )
n870 = nand( add2_i[22], n871 )
n874 = nand( add2_i[21], n875 )
n882 = nand( xenc8, add1_i[19] )
n799 = not( xenc118 )
n906 = nand( add2_i[15], n907 )
n909 = nand( add1_i[14], xenc68 )
n920 = nand( add2_i[12], n921 )
n929 = nand( add2_i[10], xenc45 )
n944 = nand( xenc38, n803, xenc90 )
n814 = nand( xenc38, n803, xenc16 )
n942 = nand( add1_i[7], xenc25, add2_i[6] )
n941 = or( xenc38, n803 )
n953 = nand( n818, add2_i[4] )
n959 = nand( add2_i[2], xenc70 )
xenc0 = xnor( n932, keyinput0 )
xenc1 = xor( n839, keyinput1 )
xenc2 = xnor( n809, keyinput2 )
xenc3 = xnor( n923, keyinput3 )
xenc4 = xnor( n909, keyinput4 )
xenc5 = xor( n828, keyinput5 )
result_o[18] = xnor( xenc6, keyinput6 )
xenc7 = xnor( n1000, keyinput7 )
xenc8 = xnor( n885, keyinput8 )
xenc9 = xnor( n798, keyinput9 )
xenc10 = xor( n886, keyinput10 )
xenc11 = xnor( n1012, keyinput11 )
xenc12 = xor( n902, keyinput12 )
xenc13 = xor( n879, keyinput13 )
xenc14 = xor( n929, keyinput14 )
xenc15 = xnor( n978, keyinput15 )
xenc16 = xor( n938, keyinput16 )
xenc17 = xnor( n851, keyinput17 )
result_o[7] = xnor( xenc18, keyinput18 )
xenc19 = xor( n848, keyinput19 )
xenc20 = xor( n994, keyinput20 )
xenc21 = xnor( n928, keyinput21 )
result_o[31] = xnor( xenc22, keyinput22 )
xenc23 = xor( n880, keyinput23 )
result_o[4] = xnor( xenc24, keyinput24 )
xenc25 = xor( n816, keyinput25 )
xenc26 = xnor( n986, keyinput26 )
xenc27 = xnor( n914, keyinput27 )
xenc28 = xor( n796, keyinput28 )
xenc29 = xnor( n815, keyinput29 )
result_o[8] = xnor( xenc30, keyinput30 )
xenc31 = xor( n1011, keyinput31 )
xenc32 = xnor( n925, keyinput32 )
xenc33 = xor( n926, keyinput33 )
xenc34 = xor( n827, keyinput34 )
xenc35 = xnor( n856, keyinput35 )
xenc36 = xnor( n893, keyinput36 )
xenc37 = xor( n954, keyinput37 )
xenc38 = xnor( n984, keyinput38 )
xenc39 = xor( n860, keyinput39 )
xenc40 = xor( n936, keyinput40 )
xenc41 = xor( n846, keyinput41 )
result_o[11] = xor( xenc42, keyinput42 )
xenc43 = xor( n872, keyinput43 )
xenc44 = xor( n911, keyinput44 )
xenc45 = xnor( n930, keyinput45 )
xenc46 = xor( n881, keyinput46 )
result_o[5] = xnor( xenc47, keyinput47 )
xenc48 = xnor( n916, keyinput48 )
result_o[13] = xor( xenc49, keyinput49 )
xenc50 = xnor( n977, keyinput50 )
xenc51 = xor( n878, keyinput51 )
xenc52 = xnor( n967, keyinput52 )
result_o[9] = xnor( xenc53, keyinput53 )
xenc54 = xnor( n1002, keyinput54 )
xenc55 = xnor( n869, keyinput55 )
xenc56 = xnor( n947, keyinput56 )
xenc57 = xnor( n861, keyinput57 )
xenc58 = xnor( n847, keyinput58 )
xenc59 = xor( n980, keyinput59 )
xenc60 = xor( n1008, keyinput60 )
xenc61 = xor( n882, keyinput61 )
result_o[14] = xnor( xenc62, keyinput62 )
xenc63 = xor( n940, keyinput63 )
xenc64 = xnor( n840, keyinput64 )
xenc65 = xnor( n989, keyinput65 )
xenc66 = xor( n826, keyinput66 )
xenc67 = xnor( n982, keyinput67 )
xenc68 = xor( n912, keyinput68 )
xenc69 = xor( n891, keyinput69 )
xenc70 = xor( n837, keyinput70 )
xenc71 = xor( n887, keyinput71 )
xenc72 = xnor( n1001, keyinput72 )
xenc73 = xor( n961, keyinput73 )
xenc74 = xnor( n836, keyinput74 )
xenc75 = xor( n802, keyinput75 )
xenc76 = xor( n883, keyinput76 )
xenc77 = xor( n995, keyinput77 )
xenc78 = xnor( n825, keyinput78 )
xenc79 = xnor( n862, keyinput79 )
xenc80 = xnor( n958, keyinput80 )
result_o[24] = xnor( xenc81, keyinput81 )
xenc82 = xor( n854, keyinput82 )
xenc83 = xnor( n1005, keyinput83 )
xenc84 = xnor( n966, keyinput84 )
xenc85 = xnor( n988, keyinput85 )
xenc86 = xnor( n951, keyinput86 )
xenc87 = xnor( n968, keyinput87 )
xenc88 = xnor( n870, keyinput88 )
xenc89 = xor( n974, keyinput89 )
xenc90 = xor( n945, keyinput90 )
xenc91 = xor( n850, keyinput91 )
xenc92 = xnor( n896, keyinput92 )
result_o[28] = xnor( xenc93, keyinput93 )
result_o[23] = xnor( xenc94, keyinput94 )
xenc95 = xnor( n888, keyinput95 )
xenc96 = xnor( n972, keyinput96 )
xenc97 = xor( n969, keyinput97 )
xenc98 = xnor( n971, keyinput98 )
xenc99 = xor( n985, keyinput99 )
xenc100 = xnor( n924, keyinput100 )
xenc101 = xnor( n957, keyinput101 )
xenc102 = xnor( n866, keyinput102 )
xenc103 = xor( n833, keyinput103 )
result_o[2] = xor( xenc104, keyinput104 )
result_o[21] = xnor( xenc105, keyinput105 )
xenc106 = xnor( n1009, keyinput106 )
xenc107 = xnor( n993, keyinput107 )
xenc108 = xor( n992, keyinput108 )
xenc109 = xnor( n845, keyinput109 )
xenc110 = xnor( n876, keyinput110 )
xenc111 = xnor( n905, keyinput111 )
xenc112 = xnor( n831, keyinput112 )
xenc113 = xnor( n821, keyinput113 )
xenc114 = xnor( n960, keyinput114 )
xenc115 = xor( n952, keyinput115 )
xenc116 = xnor( n918, keyinput116 )
result_o[6] = xor( xenc117, keyinput117 )
xenc118 = xor( n897, keyinput118 )
xenc119 = xnor( n819, keyinput119 )
xenc120 = xnor( n817, keyinput120 )
xenc121 = xor( n913, keyinput121 )
xenc122 = xnor( n822, keyinput122 )
result_o[22] = xnor( xenc123, keyinput123 )
xenc124 = xor( n868, keyinput124 )
xenc125 = xnor( n941, keyinput125 )
xenc126 = xnor( n867, keyinput126 )
xenc127 = xor( n884, keyinput127 )
