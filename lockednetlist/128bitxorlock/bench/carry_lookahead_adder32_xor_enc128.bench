# BENCH FILE 
# circuit:carry_lookahead_adder32.bench

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add1_i[16])
INPUT(add1_i[17])
INPUT(add1_i[18])
INPUT(add1_i[19])
INPUT(add1_i[20])
INPUT(add1_i[21])
INPUT(add1_i[22])
INPUT(add1_i[23])
INPUT(add1_i[24])
INPUT(add1_i[25])
INPUT(add1_i[26])
INPUT(add1_i[27])
INPUT(add1_i[28])
INPUT(add1_i[29])
INPUT(add1_i[30])
INPUT(add1_i[31])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(add2_i[16])
INPUT(add2_i[17])
INPUT(add2_i[18])
INPUT(add2_i[19])
INPUT(add2_i[20])
INPUT(add2_i[21])
INPUT(add2_i[22])
INPUT(add2_i[23])
INPUT(add2_i[24])
INPUT(add2_i[25])
INPUT(add2_i[26])
INPUT(add2_i[27])
INPUT(add2_i[28])
INPUT(add2_i[29])
INPUT(add2_i[30])
INPUT(add2_i[31])
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
INPUT(keyinput32)
INPUT(keyinput33)
INPUT(keyinput34)
INPUT(keyinput35)
INPUT(keyinput36)
INPUT(keyinput37)
INPUT(keyinput38)
INPUT(keyinput39)
INPUT(keyinput40)
INPUT(keyinput41)
INPUT(keyinput42)
INPUT(keyinput43)
INPUT(keyinput44)
INPUT(keyinput45)
INPUT(keyinput46)
INPUT(keyinput47)
INPUT(keyinput48)
INPUT(keyinput49)
INPUT(keyinput50)
INPUT(keyinput51)
INPUT(keyinput52)
INPUT(keyinput53)
INPUT(keyinput54)
INPUT(keyinput55)
INPUT(keyinput56)
INPUT(keyinput57)
INPUT(keyinput58)
INPUT(keyinput59)
INPUT(keyinput60)
INPUT(keyinput61)
INPUT(keyinput62)
INPUT(keyinput63)
INPUT(keyinput64)
INPUT(keyinput65)
INPUT(keyinput66)
INPUT(keyinput67)
INPUT(keyinput68)
INPUT(keyinput69)
INPUT(keyinput70)
INPUT(keyinput71)
INPUT(keyinput72)
INPUT(keyinput73)
INPUT(keyinput74)
INPUT(keyinput75)
INPUT(keyinput76)
INPUT(keyinput77)
INPUT(keyinput78)
INPUT(keyinput79)
INPUT(keyinput80)
INPUT(keyinput81)
INPUT(keyinput82)
INPUT(keyinput83)
INPUT(keyinput84)
INPUT(keyinput85)
INPUT(keyinput86)
INPUT(keyinput87)
INPUT(keyinput88)
INPUT(keyinput89)
INPUT(keyinput90)
INPUT(keyinput91)
INPUT(keyinput92)
INPUT(keyinput93)
INPUT(keyinput94)
INPUT(keyinput95)
INPUT(keyinput96)
INPUT(keyinput97)
INPUT(keyinput98)
INPUT(keyinput99)
INPUT(keyinput100)
INPUT(keyinput101)
INPUT(keyinput102)
INPUT(keyinput103)
INPUT(keyinput104)
INPUT(keyinput105)
INPUT(keyinput106)
INPUT(keyinput107)
INPUT(keyinput108)
INPUT(keyinput109)
INPUT(keyinput110)
INPUT(keyinput111)
INPUT(keyinput112)
INPUT(keyinput113)
INPUT(keyinput114)
INPUT(keyinput115)
INPUT(keyinput116)
INPUT(keyinput117)
INPUT(keyinput118)
INPUT(keyinput119)
INPUT(keyinput120)
INPUT(keyinput121)
INPUT(keyinput122)
INPUT(keyinput123)
INPUT(keyinput124)
INPUT(keyinput125)
INPUT(keyinput126)
INPUT(keyinput127)
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
OUTPUT(result_o[17])
OUTPUT(result_o[18])
OUTPUT(result_o[19])
OUTPUT(result_o[20])
OUTPUT(result_o[21])
OUTPUT(result_o[22])
OUTPUT(result_o[23])
OUTPUT(result_o[24])
OUTPUT(result_o[25])
OUTPUT(result_o[26])
OUTPUT(result_o[27])
OUTPUT(result_o[28])
OUTPUT(result_o[29])
OUTPUT(result_o[30])
OUTPUT(result_o[31])
OUTPUT(result_o[32])
xenc52 = xor( n659, xenc93 )
n660 = xor( add2_i[8], add1_i[8] )
xenc41 = xor( xenc99, xenc0 )
n664 = xor( add2_i[6], add1_i[6] )
xenc8 = xor( xenc111, n666 )
n666 = xor( add2_i[5], add1_i[5] )
result_o[3] = xor( n668, n669 )
n669 = xor( add2_i[3], add1_i[3] )
xenc51 = xor( xenc96, xenc88 )
n679 = xor( add2_i[30], add1_i[30] )
xenc28 = xor( n684, n685 )
n685 = xor( add2_i[2], add1_i[2] )
xenc35 = xor( n690, n691 )
n691 = xor( add2_i[28], add1_i[28] )
xenc25 = xor( xenc1, xenc27 )
n701 = xor( add2_i[26], add1_i[26] )
xenc106 = xor( n872, xenc45 )
n711 = xor( add2_i[24], add1_i[24] )
xenc44 = xor( xenc92, n721 )
n721 = xor( add2_i[22], add1_i[22] )
xenc119 = xor( xenc127, xenc43 )
n731 = xor( add2_i[20], add1_i[20] )
xenc67 = xor( n736, n737 )
n737 = xor( add2_i[1], add1_i[1] )
xenc75 = xor( xenc22, xenc29 )
n743 = xor( add2_i[18], add1_i[18] )
result_o[16] = xor( n752, xenc49 )
n753 = xor( add2_i[16], add1_i[16] )
xenc82 = xor( xenc71, n763 )
n763 = xor( add2_i[14], add1_i[14] )
xenc31 = xor( n772, xenc4 )
n773 = xor( add2_i[12], add1_i[12] )
result_o[10] = xor( xenc48, xenc117 )
n783 = xor( add2_i[10], add1_i[10] )
n736 = or( add2_i[0], add1_i[0] )
n830 = not( add2_i[8] )
n826 = not( add2_i[12] )
n832 = not( add2_i[16] )
n828 = not( add2_i[9] )
n836 = not( add2_i[11] )
n838 = not( add2_i[17] )
n834 = not( add2_i[18] )
n665 = nand( n814, n815 )
n814 = nand( add1_i[4], xenc59 )
n815 = nand( add2_i[4], n802 )
n816 = or( add2_i[0], add1_i[1] )
n817 = or( n827, xenc24 )
n889 = and( n817, xenc17 )
n818 = and( xenc33, n769 )
n819 = not( add1_i[13] )
n820 = or( n833, xenc91 )
n839 = and( n820, n821 )
n821 = and( n822, n749 )
n822 = not( add1_i[17] )
n823 = or( n831, n830 )
n829 = and( n823, xenc114 )
n824 = and( xenc80, xenc55 )
n825 = not( add1_i[9] )
n770 = or( xenc24, n827 )
n827 = nor( n772, add1_i[12] )
n785 = or( n829, xenc15 )
n864 = not( add2_i[10] )
n788 = or( n830, n831 )
n831 = nor( n659, add1_i[8] )
n750 = or( xenc91, n833 )
n833 = nor( n752, add1_i[16] )
n740 = or( n834, xenc95 )
n835 = nor( xenc22, add1_i[18] )
n888 = not( add2_i[13] )
n890 = not( add2_i[15] )
n875 = not( add2_i[25] )
n775 = or( xenc61, n837 )
n837 = nor( xenc13, add1_i[11] )
n745 = or( xenc109, n839 )
result_o[31] = xor( xenc123, xenc97 )
n840 = xor( add1_i[31], add2_i[31] )
xenc9 = xor( n841, xenc87 )
n841 = xor( add1_i[27], add2_i[27] )
result_o[29] = xor( n842, n683 )
n842 = xor( add1_i[29], add2_i[29] )
result_o[23] = xor( n843, n715 )
n843 = xor( add1_i[23], add2_i[23] )
result_o[25] = xor( n844, xenc65 )
n844 = xor( add1_i[25], add2_i[25] )
n655 = not( add1_i[4] )
n845 = nor( xenc98, xenc58 )
n846 = and( add1_i[5], n802, add2_i[4] )
n847 = and( add1_i[5], xenc59, add1_i[4] )
n729 = or( xenc127, add1_i[20] )
n799 = or( xenc111, add1_i[5] )
n876 = nor( xenc11, n849 )
n848 = and( n871, add2_i[24] )
n849 = nand( xenc50, xenc126 )
n891 = nor( xenc72, xenc32 )
n850 = and( xenc16, add2_i[14] )
n851 = nand( n860, xenc38 )
xenc37 = xor( n852, xenc63 )
n852 = xor( add1_i[17], add2_i[17] )
xenc103 = xor( n853, xenc39 )
n853 = xor( add1_i[19], add2_i[19] )
xenc56 = xor( n854, n757 )
n854 = xor( add1_i[15], add2_i[15] )
n726 = xnor( add1_i[21], add2_i[21] )
xenc46 = xor( n855, xenc120 )
n855 = xor( add1_i[13], add2_i[13] )
result_o[9] = xor( n856, xenc124 )
n856 = xor( add1_i[9], add2_i[9] )
xenc115 = xor( xenc20, xenc13 )
n857 = xor( add1_i[11], add2_i[11] )
result_o[7] = xor( xenc78, xenc7 )
n858 = xor( add1_i[7], add2_i[7] )
xenc113 = xor( n656, xenc18 )
n859 = xor( add2_i[4], xenc3 )
n860 = not( add1_i[15] )
n861 = not( add1_i[25] )
n714 = nand( n717, xenc76 )
n862 = and( xenc104, xenc68 )
n863 = not( add1_i[23] )
n780 = or( n865, n864 )
n865 = nor( xenc48, add1_i[10] )
n866 = nand( n714, xenc53 )
n707 = and( n866, xenc116 )
n867 = or( xenc47, xenc81 )
n868 = not( add1_i[24] )
n869 = and( add2_i[23], add1_i[24] )
n870 = nand( add2_i[23], n714 )
n708 = nand( n871, add2_i[24] )
n871 = nand( n873, xenc57 )
n872 = nand( xenc81, n870 )
n873 = nand( n714, add2_i[23] )
n874 = and( xenc47, xenc81 )
n703 = or( xenc30, xenc112 )
n877 = nand( n729, n880 )
n722 = and( n877, xenc110 )
n878 = or( n879, xenc101 )
n879 = not( add1_i[21] )
n880 = and( add2_i[20], add1_i[21] )
n881 = nand( n729, add2_i[20] )
n724 = nand( n881, xenc89 )
n882 = and( n879, xenc101 )
n725 = nand( xenc101, xenc85 )
n805 = nand( add2_i[3], n806 )
n792 = nand( xenc86, xenc14 )
n883 = and( xenc2, xenc36 )
n884 = not( add1_i[7] )
n662 = nand( xenc14, xenc2 )
n885 = nand( xenc70, add2_i[5] )
n795 = nand( xenc26, xenc23 )
n886 = and( n887, xenc5 )
n887 = not( add1_i[6] )
n813 = nand( add2_i[0], add1_i[0] )
n663 = nand( n798, xenc5 )
n676 = nand( add2_i[30], xenc42 )
n798 = nand( xenc70, add2_i[5] )
n688 = nand( add2_i[28], xenc69 )
n683 = nand( n687, n688 )
n747 = nand( n749, xenc34 )
n767 = nand( n769, xenc74 )
n765 = or( xenc83, xenc54 )
n755 = or( xenc100, n891 )
n811 = nand( add2_i[1], n812 )
n684 = nand( n810, n811 )
n658 = nand( xenc55, n788 )
n705 = nand( xenc126, xenc118 )
result_o[32] = nand( n670, n671 )
n695 = nand( xenc64, n698 )
n718 = nand( add2_i[22], n719 )
n727 = nand( add1_i[20], xenc127 )
n760 = nand( add2_i[14], xenc16 )
n769 = nand( add1_i[12], n772 )
n787 = nand( add1_i[8], n659 )
n794 = nand( add2_i[6], xenc66 )
n804 = nand( add1_i[3], n668 )
n806 = or( n668, add1_i[3] )
n807 = nand( add1_i[2], n684 )
n809 = or( n684, add1_i[2] )
n728 = nand( add2_i[20], n729 )
n671 = nand( add2_i[31], xenc21 )
n698 = nand( add2_i[26], xenc19 )
n700 = nand( n703, n702 )
n752 = nand( xenc125, n754 )
n668 = nand( xenc121, n808 )
n808 = nand( add2_i[2], n809 )
n730 = nand( n732, xenc90 )
n733 = nand( add2_i[19], n734 )
n772 = nand( n774, n775 )
n659 = nand( xenc108, n791 )
n791 = nand( xenc12, add2_i[7] )
n675 = nand( add1_i[30], xenc96 )
n677 = or( xenc96, add1_i[30] )
n687 = nand( add1_i[28], n690 )
n689 = or( n690, add1_i[28] )
n717 = nand( add1_i[22], xenc92 )
n719 = or( xenc92, add1_i[22] )
n739 = nand( add1_i[18], xenc22 )
n759 = nand( add1_i[14], xenc71 )
n761 = or( xenc71, add1_i[14] )
n779 = nand( add1_i[10], xenc48 )
n673 = nand( xenc77, xenc40 )
n715 = nand( n717, xenc104 )
n735 = nand( xenc73, n740 )
n757 = nand( xenc38, xenc107 )
n777 = nand( n780, n779 )
n802 = nand( n656, xenc3 )
n678 = nand( n680, n681 )
n681 = nand( add2_i[29], n682 )
n690 = nand( xenc10, n693 )
n693 = nand( add2_i[27], n694 )
n720 = nand( xenc94, n723 )
n723 = nand( n724, add2_i[21] )
n742 = nand( xenc84, n745 )
n762 = nand( xenc102, xenc6 )
n782 = nand( n784, n785 )
n803 = nand( n805, xenc60 )
xenc105 = nand( n736, n813 )
result_o[21] = xnor( xenc62, xenc122 )
n670 = nand( add1_i[31], xenc97 )
n672 = or( xenc97, add1_i[31] )
n680 = nand( add1_i[29], n683 )
n682 = or( n683, add1_i[29] )
n692 = nand( add1_i[27], xenc87 )
n694 = or( xenc87, add1_i[27] )
n697 = nand( add1_i[26], xenc1 )
n699 = or( xenc1, add1_i[26] )
n702 = nand( add1_i[25], xenc65 )
n712 = nand( add1_i[23], n715 )
n732 = nand( add1_i[19], xenc39 )
n734 = or( xenc39, add1_i[19] )
n744 = nand( add1_i[17], xenc63 )
n749 = nand( add1_i[16], n752 )
n754 = nand( add1_i[15], n757 )
n764 = nand( add1_i[13], xenc120 )
n774 = nand( add1_i[11], xenc13 )
n784 = nand( add1_i[9], xenc124 )
n790 = nand( add1_i[7], xenc7 )
n793 = nand( add1_i[6], xenc99 )
n656 = not( xenc59 )
n810 = nand( add1_i[1], n736 )
n812 = or( xenc79, add1_i[0] )
xenc0 = xor( n664, keyinput0 )
xenc1 = xnor( n700, keyinput1 )
xenc2 = xnor( n794, keyinput2 )
xenc3 = xnor( n655, keyinput3 )
xenc4 = xnor( n773, keyinput4 )
xenc5 = xor( n845, keyinput5 )
xenc6 = xor( n765, keyinput6 )
xenc7 = xor( n662, keyinput7 )
result_o[5] = xor( xenc8, keyinput8 )
result_o[27] = xnor( xenc9, keyinput9 )
xenc10 = xor( n692, keyinput10 )
xenc11 = xor( n848, keyinput11 )
xenc12 = xor( n792, keyinput12 )
xenc13 = xor( n777, keyinput13 )
xenc14 = xor( n793, keyinput14 )
xenc15 = xor( n828, keyinput15 )
xenc16 = xor( n761, keyinput16 )
xenc17 = xor( n818, keyinput17 )
xenc18 = xnor( n859, keyinput18 )
xenc19 = xnor( n699, keyinput19 )
xenc20 = xor( n857, keyinput20 )
xenc21 = xor( n672, keyinput21 )
xenc22 = xnor( n742, keyinput22 )
xenc23 = xnor( n886, keyinput23 )
xenc24 = xor( n826, keyinput24 )
result_o[26] = xnor( xenc25, keyinput25 )
xenc26 = xnor( n885, keyinput26 )
xenc27 = xor( n701, keyinput27 )
result_o[2] = xnor( xenc28, keyinput28 )
xenc29 = xor( n743, keyinput29 )
xenc30 = xnor( n876, keyinput30 )
result_o[12] = xor( xenc31, keyinput31 )
xenc32 = xnor( n851, keyinput32 )
xenc33 = xnor( n819, keyinput33 )
xenc34 = xor( n750, keyinput34 )
result_o[28] = xnor( xenc35, keyinput35 )
xenc36 = xnor( n884, keyinput36 )
result_o[17] = xor( xenc37, keyinput37 )
xenc38 = xor( n759, keyinput38 )
xenc39 = xor( n735, keyinput39 )
xenc40 = xor( n676, keyinput40 )
result_o[6] = xnor( xenc41, keyinput41 )
xenc42 = xnor( n677, keyinput42 )
xenc43 = xor( n731, keyinput43 )
result_o[22] = xor( xenc44, keyinput44 )
xenc45 = xor( n711, keyinput45 )
result_o[13] = xnor( xenc46, keyinput46 )
xenc47 = xnor( n868, keyinput47 )
xenc48 = xnor( n782, keyinput48 )
xenc49 = xnor( n753, keyinput49 )
xenc50 = xor( n861, keyinput50 )
result_o[30] = xor( xenc51, keyinput51 )
result_o[8] = xor( xenc52, keyinput52 )
xenc53 = xor( n869, keyinput53 )
xenc54 = xnor( n889, keyinput54 )
xenc55 = xnor( n787, keyinput55 )
result_o[15] = xnor( xenc56, keyinput56 )
xenc57 = xnor( n874, keyinput57 )
xenc58 = xnor( n847, keyinput58 )
xenc59 = xnor( n803, keyinput59 )
xenc60 = xor( n804, keyinput60 )
xenc61 = xnor( n836, keyinput61 )
xenc62 = xor( n726, keyinput62 )
xenc63 = xor( n747, keyinput63 )
xenc64 = xnor( n697, keyinput64 )
xenc65 = xnor( n705, keyinput65 )
xenc66 = xnor( n795, keyinput66 )
result_o[1] = xnor( xenc67, keyinput67 )
xenc68 = xor( n863, keyinput68 )
xenc69 = xor( n689, keyinput69 )
xenc70 = xor( n799, keyinput70 )
xenc71 = xor( n762, keyinput71 )
xenc72 = xnor( n850, keyinput72 )
xenc73 = xnor( n739, keyinput73 )
xenc74 = xnor( n770, keyinput74 )
result_o[18] = xor( xenc75, keyinput75 )
xenc76 = xor( n862, keyinput76 )
xenc77 = xnor( n675, keyinput77 )
xenc78 = xnor( n858, keyinput78 )
xenc79 = xnor( n816, keyinput79 )
xenc80 = xnor( n825, keyinput80 )
xenc81 = xor( n712, keyinput81 )
result_o[14] = xor( xenc82, keyinput82 )
xenc83 = xor( n888, keyinput83 )
xenc84 = xnor( n744, keyinput84 )
xenc85 = xor( n728, keyinput85 )
xenc86 = xnor( n883, keyinput86 )
xenc87 = xnor( n695, keyinput87 )
xenc88 = xor( n679, keyinput88 )
xenc89 = xnor( n882, keyinput89 )
xenc90 = xnor( n733, keyinput90 )
xenc91 = xor( n832, keyinput91 )
xenc92 = xnor( n720, keyinput92 )
xenc93 = xor( n660, keyinput93 )
xenc94 = xnor( n722, keyinput94 )
xenc95 = xnor( n835, keyinput95 )
xenc96 = xnor( n678, keyinput96 )
xenc97 = xnor( n673, keyinput97 )
xenc98 = xor( n846, keyinput98 )
xenc99 = xor( n663, keyinput99 )
xenc100 = xnor( n890, keyinput100 )
xenc101 = xnor( n727, keyinput101 )
xenc102 = xnor( n764, keyinput102 )
result_o[19] = xnor( xenc103, keyinput103 )
xenc104 = xnor( n718, keyinput104 )
result_o[0] = xnor( xenc105, keyinput105 )
result_o[24] = xor( xenc106, keyinput106 )
xenc107 = xnor( n760, keyinput107 )
xenc108 = xnor( n790, keyinput108 )
xenc109 = xor( n838, keyinput109 )
xenc110 = xnor( n878, keyinput110 )
xenc111 = xnor( n665, keyinput111 )
xenc112 = xnor( n875, keyinput112 )
result_o[4] = xor( xenc113, keyinput113 )
xenc114 = xnor( n824, keyinput114 )
result_o[11] = xor( xenc115, keyinput115 )
xenc116 = xor( n867, keyinput116 )
xenc117 = xnor( n783, keyinput117 )
xenc118 = xor( n708, keyinput118 )
result_o[20] = xnor( xenc119, keyinput119 )
xenc120 = xnor( n767, keyinput120 )
xenc121 = xnor( n807, keyinput121 )
xenc122 = xor( n725, keyinput122 )
xenc123 = xnor( n840, keyinput123 )
xenc124 = xor( n658, keyinput124 )
xenc125 = xnor( n755, keyinput125 )
xenc126 = xnor( n707, keyinput126 )
xenc127 = xor( n730, keyinput127 )
