# BENCH FILE 
# circuit:xnor_based_ripple_carry_adder32.bench

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add1_i[16])
INPUT(add1_i[17])
INPUT(add1_i[18])
INPUT(add1_i[19])
INPUT(add1_i[20])
INPUT(add1_i[21])
INPUT(add1_i[22])
INPUT(add1_i[23])
INPUT(add1_i[24])
INPUT(add1_i[25])
INPUT(add1_i[26])
INPUT(add1_i[27])
INPUT(add1_i[28])
INPUT(add1_i[29])
INPUT(add1_i[30])
INPUT(add1_i[31])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(add2_i[16])
INPUT(add2_i[17])
INPUT(add2_i[18])
INPUT(add2_i[19])
INPUT(add2_i[20])
INPUT(add2_i[21])
INPUT(add2_i[22])
INPUT(add2_i[23])
INPUT(add2_i[24])
INPUT(add2_i[25])
INPUT(add2_i[26])
INPUT(add2_i[27])
INPUT(add2_i[28])
INPUT(add2_i[29])
INPUT(add2_i[30])
INPUT(add2_i[31])
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
INPUT(keyinput32)
INPUT(keyinput33)
INPUT(keyinput34)
INPUT(keyinput35)
INPUT(keyinput36)
INPUT(keyinput37)
INPUT(keyinput38)
INPUT(keyinput39)
INPUT(keyinput40)
INPUT(keyinput41)
INPUT(keyinput42)
INPUT(keyinput43)
INPUT(keyinput44)
INPUT(keyinput45)
INPUT(keyinput46)
INPUT(keyinput47)
INPUT(keyinput48)
INPUT(keyinput49)
INPUT(keyinput50)
INPUT(keyinput51)
INPUT(keyinput52)
INPUT(keyinput53)
INPUT(keyinput54)
INPUT(keyinput55)
INPUT(keyinput56)
INPUT(keyinput57)
INPUT(keyinput58)
INPUT(keyinput59)
INPUT(keyinput60)
INPUT(keyinput61)
INPUT(keyinput62)
INPUT(keyinput63)
INPUT(keyinput64)
INPUT(keyinput65)
INPUT(keyinput66)
INPUT(keyinput67)
INPUT(keyinput68)
INPUT(keyinput69)
INPUT(keyinput70)
INPUT(keyinput71)
INPUT(keyinput72)
INPUT(keyinput73)
INPUT(keyinput74)
INPUT(keyinput75)
INPUT(keyinput76)
INPUT(keyinput77)
INPUT(keyinput78)
INPUT(keyinput79)
INPUT(keyinput80)
INPUT(keyinput81)
INPUT(keyinput82)
INPUT(keyinput83)
INPUT(keyinput84)
INPUT(keyinput85)
INPUT(keyinput86)
INPUT(keyinput87)
INPUT(keyinput88)
INPUT(keyinput89)
INPUT(keyinput90)
INPUT(keyinput91)
INPUT(keyinput92)
INPUT(keyinput93)
INPUT(keyinput94)
INPUT(keyinput95)
INPUT(keyinput96)
INPUT(keyinput97)
INPUT(keyinput98)
INPUT(keyinput99)
INPUT(keyinput100)
INPUT(keyinput101)
INPUT(keyinput102)
INPUT(keyinput103)
INPUT(keyinput104)
INPUT(keyinput105)
INPUT(keyinput106)
INPUT(keyinput107)
INPUT(keyinput108)
INPUT(keyinput109)
INPUT(keyinput110)
INPUT(keyinput111)
INPUT(keyinput112)
INPUT(keyinput113)
INPUT(keyinput114)
INPUT(keyinput115)
INPUT(keyinput116)
INPUT(keyinput117)
INPUT(keyinput118)
INPUT(keyinput119)
INPUT(keyinput120)
INPUT(keyinput121)
INPUT(keyinput122)
INPUT(keyinput123)
INPUT(keyinput124)
INPUT(keyinput125)
INPUT(keyinput126)
INPUT(keyinput127)
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
OUTPUT(result_o[17])
OUTPUT(result_o[18])
OUTPUT(result_o[19])
OUTPUT(result_o[20])
OUTPUT(result_o[21])
OUTPUT(result_o[22])
OUTPUT(result_o[23])
OUTPUT(result_o[24])
OUTPUT(result_o[25])
OUTPUT(result_o[26])
OUTPUT(result_o[27])
OUTPUT(result_o[28])
OUTPUT(result_o[29])
OUTPUT(result_o[30])
OUTPUT(result_o[31])
OUTPUT(result_o[32])
xenc97 = xor( add2_i[8], n345 )
n203 = xor( add2_i[3], add1_i[3] )
result_o[29] = xor( add2_i[29], n331 )
xenc49 = xor( xenc15, n228 )
xenc106 = xor( n237, add2_i[25] )
result_o[24] = xor( xenc22, add2_i[24] )
result_o[22] = xor( add2_i[22], n250 )
result_o[16] = xor( add2_i[16], n280 )
xenc105 = xor( n284, add2_i[15] )
xenc62 = xor( add2_i[14], xenc46 )
result_o[13] = xor( add2_i[13], n292 )
result_o[12] = xor( add2_i[12], n296 )
result_o[10] = xor( add2_i[10], xenc29 )
n190 = xor( add1_i[7], add2_i[7] )
n199 = xor( add1_i[4], add2_i[4] )
n216 = xor( add1_i[2], add2_i[2] )
n267 = xor( add1_i[0], add2_i[0] )
n326 = xnor( n277, n348 )
n327 = not( n210 )
n328 = not( xenc81 )
n325 = or( xenc17, xenc25, xenc63 )
n340 = nand( xenc119, add1_i[18] )
n329 = not( n274 )
n322 = nand( n183, n199, n201 )
n339 = nand( xenc72, add2_i[17], add1_i[18] )
n313 = nand( n179, n321, n322, xenc9 )
n335 = and( xenc84, add2_i[18], xenc54 )
n320 = nand( xenc24, add2_i[5], add1_i[5] )
n249 = nand( xenc13, xenc91, add2_i[22] )
xenc101 = xor( add2_i[9], xenc92 )
result_o[11] = xor( add2_i[11], n300 )
xenc78 = xor( add2_i[17], xenc72 )
xenc3 = xor( add2_i[19], xenc69 )
result_o[20] = xor( add2_i[20], n260 )
xenc121 = xor( add2_i[21], n255 )
result_o[26] = xor( add2_i[26], xenc0 )
xenc41 = xor( add2_i[30], xenc96 )
result_o[31] = xor( xenc10, add2_i[31] )
n343 = not( add1_i[24] )
n342 = not( add1_i[19] )
n346 = not( add1_i[25] )
n330 = not( xenc118 )
n331 = not( n330 )
n332 = and( n321, n322 )
n333 = nand( n209, xenc1 )
n268 = and( add1_i[1], add2_i[1] )
n334 = or( add1_i[0], add2_i[0] )
n270 = nand( xenc122, xenc65 )
n336 = or( xenc100, add1_i[18] )
n337 = nand( n212, n213 )
n338 = nand( xenc104, xenc43 )
n269 = and( xenc84, xenc54 )
n341 = nand( n231, xenc110 )
n263 = xnor( xenc107, n342 )
n241 = xnor( xenc87, xenc120 )
n344 = not( xenc40 )
n345 = not( xenc116 )
n237 = xnor( n238, n346 )
n350 = not( add1_i[13] )
n217 = nor( xenc20, xenc51 )
n347 = xor( xenc87, add1_i[24] )
n349 = not( add1_i[15] )
n348 = not( add1_i[17] )
n276 = xnor( n277, n348 )
n284 = xnor( xenc44, xenc90 )
n292 = xnor( xenc102, n350 )
n351 = not( add1_i[14] )
n352 = not( add1_i[16] )
n288 = xnor( xenc33, xenc61 )
n280 = xnor( xenc56, xenc26 )
n353 = nor( add1_i[0], add2_i[0], n367 )
n362 = not( add1_i[29] )
n355 = not( add1_i[12] )
n354 = not( add1_i[20] )
n356 = not( add1_i[30] )
n260 = xnor( xenc23, xenc112 )
n296 = xnor( xenc73, xenc37 )
n210 = xnor( n211, xenc58 )
n357 = xor( add1_i[6], add2_i[6] )
n361 = not( add1_i[21] )
n358 = not( add1_i[26] )
n360 = not( add1_i[31] )
n233 = xnor( n234, n358 )
n359 = xnor( add1_i[2], add2_i[2] )
n206 = xnor( xenc103, n360 )
n255 = xnor( xenc35, xenc88 )
n214 = xnor( xenc12, xenc7 )
n183 = not( n200 )
n181 = not( xenc126 )
xenc18 = nor( xenc77, xenc6 )
n189 = nor( xenc64, xenc98 )
result_o[4] = nor( n199, xenc38, n200 )
result_o[0] = not( n267 )
n366 = not( add1_i[11] )
n365 = not( add1_i[9] )
n195 = xor( add1_i[6], add2_i[6] )
n193 = xnor( add1_i[5], add2_i[5] )
n218 = nor( add2_i[1], add1_i[1] )
n200 = nor( add2_i[3], add1_i[3] )
n319 = nand( add1_i[6], add2_i[6] )
n221 = nand( n222, n178 )
n228 = xnor( add2_i[28], n178 )
result_o[23] = xor( xenc57, xenc83 )
n363 = xor( add1_i[23], add2_i[23] )
n250 = and( xenc91, xenc13 )
n315 = nand( add2_i[7], add1_i[7] )
n321 = nand( add1_i[4], add2_i[4] )
xenc74 = xnor( add2_i[18], n364 )
n364 = nand( n269, xenc30 )
n178 = not( add1_i[28] )
n186 = not( add2_i[27] )
n196 = nor( n197, xenc93 )
n198 = and( add1_i[5], add2_i[5] )
result_o[1] = nor( xenc32, xenc53 )
n265 = nor( n367, xenc63 )
n266 = nor( add1_i[0], n267 )
n304 = and( xenc124, xenc19 )
n239 = nand( add1_i[24], xenc87 )
n309 = nand( n310, n311 )
n187 = xnor( xenc66, xenc80 )
n300 = xnor( n366, xenc42 )
n367 = and( add1_i[1], add2_i[1] )
n312 = nand( xenc9, n316 )
n179 = not( xenc98 )
n316 = nand( xenc6, xenc71 )
n317 = nand( n179, xenc108 )
n368 = and( n324, xenc50 )
n369 = and( xenc115, xenc50 )
n324 = nand( add1_i[2], add2_i[2] )
n323 = nand( add2_i[3], add1_i[3] )
n202 = and( xenc5, n324 )
xenc114 = nor( xenc115, xenc111 )
n201 = nand( xenc5, xenc14 )
n212 = nand( add1_i[29], xenc12 )
n290 = nand( xenc102, add1_i[13] )
n298 = nand( add1_i[11], xenc42 )
n307 = nand( xenc66, add1_i[9] )
n215 = nand( n219, xenc75 )
n220 = nand( add2_i[28], n221 )
n293 = nand( xenc60, xenc2 )
n301 = nand( n303, xenc19 )
n303 = nand( add2_i[10], xenc29 )
n242 = nand( xenc55, xenc11 )
n244 = nand( xenc28, add2_i[23] )
n272 = or( xenc100, add1_i[18] )
n264 = nand( n270, n269 )
n261 = nand( add1_i[19], xenc107 )
n231 = nand( add1_i[26], xenc79 )
n246 = nand( xenc16, xenc13 )
n273 = nand( xenc59, n274 )
n274 = nand( add1_i[17], n277 )
n204 = nand( add1_i[31], xenc70 )
n208 = nand( add1_i[30], xenc67 )
n253 = nand( add1_i[21], xenc35 )
n277 = nand( n279, xenc95 )
n207 = nand( n209, xenc1 )
n211 = nand( n212, n213 )
n234 = nand( xenc104, xenc43 )
n256 = nand( xenc4, n258 )
n281 = nand( n283, xenc89 )
n282 = nand( xenc44, add1_i[15] )
n305 = or( xenc34, add1_i[10] )
n302 = nand( add1_i[10], xenc34 )
n188 = xnor( n314, add1_i[8] )
n235 = nand( add1_i[25], n238 )
n248 = nand( add1_i[22], xenc125 )
n251 = or( xenc125, add1_i[22] )
n286 = nand( add1_i[14], xenc33 )
n294 = nand( add1_i[12], xenc73 )
n306 = nand( xenc99, xenc109 )
n311 = nand( xenc85, n313, add1_i[8] )
n314 = nand( n313, xenc85 )
result_o[6] = nor( xenc94, n357 )
xenc86 = xnor( add2_i[27], n230 )
n180 = not( n357 )
n219 = nand( add1_i[28], xenc15 )
n229 = or( n230, xenc47 )
n226 = nand( n231, xenc110 )
n238 = nand( n239, xenc127 )
n252 = nand( xenc45, xenc82 )
n285 = nand( n287, xenc76 )
n289 = nand( n291, n290 )
n318 = nand( n181, n357 )
n192 = nand( xenc68, xenc39 )
result_o[32] = nand( n204, n205 )
xenc8 = nor( xenc21, n181 )
n205 = nand( add2_i[31], xenc10 )
n197 = nor( xenc21, xenc126 )
n191 = nor( xenc126, xenc21, n180 )
n227 = nand( n229, xenc117 )
n222 = nand( xenc48, xenc31 )
n224 = nand( xenc117, xenc47 )
n243 = nand( add1_i[23], xenc83 )
n245 = or( xenc83, add1_i[23] )
n258 = nand( add1_i[20], xenc23 )
n257 = nand( add2_i[20], n260 )
n259 = nand( xenc36, n262 )
n278 = nand( add1_i[16], xenc56 )
n283 = nand( add2_i[15], n284 )
n297 = nand( xenc123, n298 )
n310 = nand( xenc40, add2_i[8] )
xenc52 = nor( xenc113, xenc27, xenc63 )
n209 = nand( add2_i[30], n210 )
n213 = nand( add2_i[29], xenc118 )
n223 = or( n341, add1_i[27] )
n225 = nand( add1_i[27], n341 )
n230 = xnor( n226, add1_i[27] )
n232 = nand( add2_i[26], xenc0 )
n236 = nand( add2_i[25], n237 )
n240 = nand( n241, add2_i[24] )
n254 = nand( n255, add2_i[21] )
n262 = nand( add2_i[19], xenc69 )
n275 = nand( n276, add2_i[17] )
n279 = nand( n280, add2_i[16] )
n287 = nand( add2_i[14], xenc46 )
n291 = nand( add2_i[13], n292 )
n295 = nand( add2_i[12], n296 )
n299 = nand( add2_i[11], n300 )
n308 = nand( add2_i[9], xenc92 )
xenc0 = xnor( n233, keyinput0 )
xenc1 = xor( n208, keyinput1 )
xenc2 = xor( n294, keyinput2 )
result_o[19] = xnor( xenc3, keyinput3 )
xenc4 = xor( n257, keyinput4 )
xenc5 = xor( n325, keyinput5 )
xenc6 = xor( n190, keyinput6 )
xenc7 = xnor( n362, keyinput7 )
result_o[5] = xnor( xenc8, keyinput8 )
xenc9 = xnor( n315, keyinput9 )
xenc10 = xor( n206, keyinput10 )
xenc11 = xnor( n243, keyinput11 )
xenc12 = xnor( n215, keyinput12 )
xenc13 = xor( n248, keyinput13 )
xenc14 = xor( n368, keyinput14 )
xenc15 = xor( n227, keyinput15 )
xenc16 = xnor( n249, keyinput16 )
xenc17 = xnor( n217, keyinput17 )
result_o[7] = xor( xenc18, keyinput18 )
xenc19 = xnor( n302, keyinput19 )
xenc20 = xnor( n334, keyinput20 )
xenc21 = xor( n332, keyinput21 )
xenc22 = xnor( n347, keyinput22 )
xenc23 = xor( n259, keyinput23 )
xenc24 = xnor( n195, keyinput24 )
xenc25 = xor( n359, keyinput25 )
xenc26 = xnor( n352, keyinput26 )
xenc27 = xor( n353, keyinput27 )
xenc28 = xnor( n245, keyinput28 )
xenc29 = xor( n304, keyinput29 )
xenc30 = xnor( n272, keyinput30 )
xenc31 = xor( n224, keyinput31 )
xenc32 = xor( n265, keyinput32 )
xenc33 = xor( n289, keyinput33 )
xenc34 = xor( n306, keyinput34 )
xenc35 = xnor( n256, keyinput35 )
xenc36 = xnor( n261, keyinput36 )
xenc37 = xor( n355, keyinput37 )
xenc38 = xnor( n369, keyinput38 )
xenc39 = xnor( n320, keyinput39 )
xenc40 = xor( n188, keyinput40 )
result_o[30] = xor( xenc41, keyinput41 )
xenc42 = xor( n301, keyinput42 )
xenc43 = xor( n236, keyinput43 )
xenc44 = xnor( n285, keyinput44 )
xenc45 = xnor( n254, keyinput45 )
xenc46 = xnor( n288, keyinput46 )
xenc47 = xnor( n186, keyinput47 )
xenc48 = xor( n223, keyinput48 )
result_o[28] = xor( xenc49, keyinput49 )
xenc50 = xor( n323, keyinput50 )
xenc51 = xor( n268, keyinput51 )
result_o[2] = xnor( xenc52, keyinput52 )
xenc53 = xor( n266, keyinput53 )
xenc54 = xnor( n340, keyinput54 )
xenc55 = xor( n244, keyinput55 )
xenc56 = xor( n281, keyinput56 )
xenc57 = xor( n363, keyinput57 )
xenc58 = xnor( n356, keyinput58 )
xenc59 = xor( n275, keyinput59 )
xenc60 = xnor( n295, keyinput60 )
xenc61 = xnor( n351, keyinput61 )
result_o[14] = xnor( xenc62, keyinput62 )
xenc63 = xor( n218, keyinput63 )
xenc64 = xor( n191, keyinput64 )
xenc65 = xnor( n335, keyinput65 )
xenc66 = xor( n309, keyinput66 )
xenc67 = xnor( n337, keyinput67 )
xenc68 = xor( n319, keyinput68 )
xenc69 = xor( n263, keyinput69 )
xenc70 = xnor( n333, keyinput70 )
xenc71 = xnor( n317, keyinput71 )
xenc72 = xor( n326, keyinput72 )
xenc73 = xor( n297, keyinput73 )
result_o[18] = xor( xenc74, keyinput74 )
xenc75 = xor( n220, keyinput75 )
xenc76 = xnor( n286, keyinput76 )
xenc77 = xor( n189, keyinput77 )
result_o[17] = xnor( xenc78, keyinput78 )
xenc79 = xor( n338, keyinput79 )
xenc80 = xor( n365, keyinput80 )
xenc81 = xor( n327, keyinput81 )
xenc82 = xnor( n253, keyinput82 )
xenc83 = xor( n246, keyinput83 )
xenc84 = xnor( n339, keyinput84 )
xenc85 = xnor( n312, keyinput85 )
result_o[27] = xnor( xenc86, keyinput86 )
xenc87 = xor( n242, keyinput87 )
xenc88 = xor( n361, keyinput88 )
xenc89 = xnor( n282, keyinput89 )
xenc90 = xor( n349, keyinput90 )
xenc91 = xnor( n251, keyinput91 )
xenc92 = xnor( n187, keyinput92 )
xenc93 = xor( n198, keyinput93 )
xenc94 = xor( n196, keyinput94 )
xenc95 = xnor( n278, keyinput95 )
xenc96 = xor( n328, keyinput96 )
result_o[8] = xor( xenc97, keyinput97 )
xenc98 = xnor( n192, keyinput98 )
xenc99 = xnor( n308, keyinput99 )
xenc100 = xnor( n273, keyinput100 )
result_o[9] = xnor( xenc101, keyinput101 )
xenc102 = xnor( n293, keyinput102 )
xenc103 = xor( n207, keyinput103 )
xenc104 = xnor( n235, keyinput104 )
result_o[15] = xor( xenc105, keyinput105 )
result_o[25] = xor( xenc106, keyinput106 )
xenc107 = xnor( n264, keyinput107 )
xenc108 = xor( n318, keyinput108 )
xenc109 = xor( n307, keyinput109 )
xenc110 = xor( n232, keyinput110 )
xenc111 = xnor( n203, keyinput111 )
xenc112 = xnor( n354, keyinput112 )
xenc113 = xor( n216, keyinput113 )
result_o[3] = xor( xenc114, keyinput114 )
xenc115 = xnor( n202, keyinput115 )
xenc116 = xor( n344, keyinput116 )
xenc117 = xnor( n225, keyinput117 )
xenc118 = xnor( n214, keyinput118 )
xenc119 = xor( n329, keyinput119 )
xenc120 = xnor( n343, keyinput120 )
result_o[21] = xor( xenc121, keyinput121 )
xenc122 = xor( n336, keyinput122 )
xenc123 = xor( n299, keyinput123 )
xenc124 = xnor( n305, keyinput124 )
xenc125 = xnor( n252, keyinput125 )
xenc126 = xor( n193, keyinput126 )
xenc127 = xnor( n240, keyinput127 )
