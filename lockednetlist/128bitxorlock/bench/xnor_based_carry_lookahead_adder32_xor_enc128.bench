# BENCH FILE 
# circuit:xnor_based_carry_lookahead_adder32.bench

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add1_i[16])
INPUT(add1_i[17])
INPUT(add1_i[18])
INPUT(add1_i[19])
INPUT(add1_i[20])
INPUT(add1_i[21])
INPUT(add1_i[22])
INPUT(add1_i[23])
INPUT(add1_i[24])
INPUT(add1_i[25])
INPUT(add1_i[26])
INPUT(add1_i[27])
INPUT(add1_i[28])
INPUT(add1_i[29])
INPUT(add1_i[30])
INPUT(add1_i[31])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(add2_i[16])
INPUT(add2_i[17])
INPUT(add2_i[18])
INPUT(add2_i[19])
INPUT(add2_i[20])
INPUT(add2_i[21])
INPUT(add2_i[22])
INPUT(add2_i[23])
INPUT(add2_i[24])
INPUT(add2_i[25])
INPUT(add2_i[26])
INPUT(add2_i[27])
INPUT(add2_i[28])
INPUT(add2_i[29])
INPUT(add2_i[30])
INPUT(add2_i[31])
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
INPUT(keyinput32)
INPUT(keyinput33)
INPUT(keyinput34)
INPUT(keyinput35)
INPUT(keyinput36)
INPUT(keyinput37)
INPUT(keyinput38)
INPUT(keyinput39)
INPUT(keyinput40)
INPUT(keyinput41)
INPUT(keyinput42)
INPUT(keyinput43)
INPUT(keyinput44)
INPUT(keyinput45)
INPUT(keyinput46)
INPUT(keyinput47)
INPUT(keyinput48)
INPUT(keyinput49)
INPUT(keyinput50)
INPUT(keyinput51)
INPUT(keyinput52)
INPUT(keyinput53)
INPUT(keyinput54)
INPUT(keyinput55)
INPUT(keyinput56)
INPUT(keyinput57)
INPUT(keyinput58)
INPUT(keyinput59)
INPUT(keyinput60)
INPUT(keyinput61)
INPUT(keyinput62)
INPUT(keyinput63)
INPUT(keyinput64)
INPUT(keyinput65)
INPUT(keyinput66)
INPUT(keyinput67)
INPUT(keyinput68)
INPUT(keyinput69)
INPUT(keyinput70)
INPUT(keyinput71)
INPUT(keyinput72)
INPUT(keyinput73)
INPUT(keyinput74)
INPUT(keyinput75)
INPUT(keyinput76)
INPUT(keyinput77)
INPUT(keyinput78)
INPUT(keyinput79)
INPUT(keyinput80)
INPUT(keyinput81)
INPUT(keyinput82)
INPUT(keyinput83)
INPUT(keyinput84)
INPUT(keyinput85)
INPUT(keyinput86)
INPUT(keyinput87)
INPUT(keyinput88)
INPUT(keyinput89)
INPUT(keyinput90)
INPUT(keyinput91)
INPUT(keyinput92)
INPUT(keyinput93)
INPUT(keyinput94)
INPUT(keyinput95)
INPUT(keyinput96)
INPUT(keyinput97)
INPUT(keyinput98)
INPUT(keyinput99)
INPUT(keyinput100)
INPUT(keyinput101)
INPUT(keyinput102)
INPUT(keyinput103)
INPUT(keyinput104)
INPUT(keyinput105)
INPUT(keyinput106)
INPUT(keyinput107)
INPUT(keyinput108)
INPUT(keyinput109)
INPUT(keyinput110)
INPUT(keyinput111)
INPUT(keyinput112)
INPUT(keyinput113)
INPUT(keyinput114)
INPUT(keyinput115)
INPUT(keyinput116)
INPUT(keyinput117)
INPUT(keyinput118)
INPUT(keyinput119)
INPUT(keyinput120)
INPUT(keyinput121)
INPUT(keyinput122)
INPUT(keyinput123)
INPUT(keyinput124)
INPUT(keyinput125)
INPUT(keyinput126)
INPUT(keyinput127)
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
OUTPUT(result_o[17])
OUTPUT(result_o[18])
OUTPUT(result_o[19])
OUTPUT(result_o[20])
OUTPUT(result_o[21])
OUTPUT(result_o[22])
OUTPUT(result_o[23])
OUTPUT(result_o[24])
OUTPUT(result_o[25])
OUTPUT(result_o[26])
OUTPUT(result_o[27])
OUTPUT(result_o[28])
OUTPUT(result_o[29])
OUTPUT(result_o[30])
OUTPUT(result_o[31])
OUTPUT(result_o[32])
xenc9 = xor( xenc81, n413 )
n413 = xor( add2_i[9], add1_i[9] )
xenc12 = xor( xenc31, xenc119 )
n415 = xor( add2_i[8], add1_i[8] )
xenc47 = xor( n429, xenc61 )
n430 = xor( add2_i[31], add1_i[31] )
xenc17 = xor( n434, n435 )
n435 = xor( add2_i[30], add1_i[30] )
result_o[29] = xor( xenc69, xenc89 )
n442 = xor( add2_i[29], add1_i[29] )
xenc42 = xor( n446, xenc80 )
n447 = xor( add2_i[28], add1_i[28] )
result_o[27] = xor( xenc33, xenc72 )
n452 = xor( add2_i[27], add1_i[27] )
xenc36 = xor( n456, xenc58 )
n457 = xor( add2_i[26], add1_i[26] )
xenc123 = xor( xenc0, n462 )
n462 = xor( add2_i[25], add1_i[25] )
xenc40 = xor( xenc59, n467 )
n467 = xor( add2_i[24], add1_i[24] )
result_o[23] = xor( n471, n472 )
n472 = xor( add2_i[23], add1_i[23] )
result_o[22] = xor( xenc62, n477 )
n477 = xor( add2_i[22], add1_i[22] )
xenc56 = xor( xenc7, n482 )
n482 = xor( add2_i[21], add1_i[21] )
xenc107 = xor( xenc115, xenc102 )
n487 = xor( add2_i[20], add1_i[20] )
n493 = xor( add2_i[1], add1_i[1] )
xenc70 = xor( n491, n494 )
n494 = xor( add2_i[19], add1_i[19] )
xenc11 = xor( xenc29, n499 )
n499 = xor( add2_i[18], add1_i[18] )
result_o[17] = xor( xenc16, xenc117 )
n504 = xor( add2_i[17], add1_i[17] )
result_o[16] = xor( n508, xenc111 )
n509 = xor( add2_i[16], add1_i[16] )
xenc99 = xor( xenc15, xenc113 )
n514 = xor( add2_i[15], add1_i[15] )
xenc68 = xor( n518, n519 )
n519 = xor( add2_i[14], add1_i[14] )
xenc97 = xor( n523, n524 )
n524 = xor( add2_i[13], add1_i[13] )
result_o[12] = xor( xenc108, xenc127 )
n529 = xor( add2_i[12], add1_i[12] )
xenc1 = xor( xenc26, xenc86 )
n534 = xor( add2_i[11], add1_i[11] )
xenc114 = xor( xenc8, xenc75 )
n539 = xor( add2_i[10], add1_i[10] )
n580 = not( add2_i[7] )
n586 = not( add2_i[11] )
n588 = not( add2_i[20] )
n582 = not( add2_i[12] )
n496 = nand( add2_i[18], n568 )
n568 = or( xenc29, add1_i[18] )
n584 = not( add2_i[21] )
n511 = nand( n569, add2_i[15] )
n569 = or( xenc15, add1_i[15] )
n570 = or( xenc37, n580 )
n617 = and( xenc98, xenc101 )
n571 = and( n572, n546 )
n572 = not( add1_i[8] )
n573 = or( n587, xenc65 )
n583 = and( xenc46, xenc121 )
n574 = and( n575, xenc22 )
n575 = not( add1_i[12] )
n576 = or( n589, xenc126 )
n585 = and( xenc82, n577 )
n577 = and( n578, xenc44 )
n578 = not( add1_i[21] )
n579 = or( add2_i[0], add1_i[0] )
n616 = not( add2_i[8] )
n608 = not( add2_i[13] )
n547 = or( n580, xenc37 )
n581 = nor( xenc90, add1_i[7] )
n526 = or( n582, xenc35 )
n479 = or( xenc94, n585 )
n612 = not( add2_i[5] )
n626 = not( add2_i[14] )
n628 = not( add2_i[29] )
n614 = not( add2_i[19] )
n610 = not( add2_i[22] )
n618 = not( add2_i[27] )
n606 = not( add2_i[10] )
n624 = not( add2_i[17] )
n531 = or( xenc65, n587 )
n587 = nor( xenc26, add1_i[11] )
n484 = or( xenc126, n589 )
n589 = nor( xenc115, add1_i[20] )
n602 = not( add2_i[6] )
n604 = not( add2_i[9] )
n622 = not( add2_i[16] )
xenc49 = and( xenc90, n590 )
n590 = xnor( add2_i[7], add1_i[7] )
xenc95 = and( xenc83, n591 )
n591 = xnor( add2_i[6], add1_i[6] )
result_o[3] = and( n425, n592 )
n592 = xnor( add2_i[3], add1_i[3] )
xenc14 = and( xenc30, xenc54 )
n593 = xnor( add2_i[2], add1_i[2] )
xenc92 = and( n423, n594 )
n594 = xnor( add2_i[4], add1_i[4] )
xenc84 = and( n421, xenc110 )
n595 = xnor( add2_i[5], add1_i[5] )
n492 = nor( add2_i[0], add1_i[0] )
n620 = not( add2_i[4] )
n607 = and( n541, xenc51 )
n596 = and( xenc104, xenc116 )
n597 = not( add1_i[10] )
n598 = or( n623, n622 )
n625 = and( n598, n599 )
n599 = and( xenc71, n505 )
n600 = not( add1_i[17] )
n601 = or( add2_i[0], add1_i[0] )
xenc77 = nor( n492, xenc87 )
n567 = nand( add2_i[0], add1_i[0] )
n550 = or( xenc43, n602 )
n603 = nor( xenc83, add1_i[6] )
n541 = or( n605, n604 )
n605 = nor( xenc81, add1_i[9] )
n536 = or( xenc28, n607 )
n521 = or( n609, xenc63 )
n609 = nor( n523, add1_i[13] )
n474 = or( n611, n610 )
n611 = nor( xenc62, add1_i[22] )
n553 = or( n613, n612 )
n613 = nor( n421, add1_i[5] )
n489 = or( xenc57, n615 )
n615 = nor( n491, add1_i[19] )
n544 = or( xenc78, n617 )
n449 = or( xenc124, xenc39 )
n619 = nor( xenc33, add1_i[27] )
n556 = or( n620, xenc41 )
n621 = nor( n423, add1_i[4] )
n506 = or( n622, n623 )
n623 = nor( n508, add1_i[16] )
n501 = or( n624, xenc25 )
n423 = nand( xenc32, xenc120 )
n425 = nand( n561, xenc21 )
n559 = nand( add2_i[3], xenc18 )
n516 = or( xenc73, xenc91 )
n627 = nor( n518, add1_i[14] )
n437 = or( xenc45, n629 )
n629 = nor( xenc69, add1_i[29] )
n481 = nand( xenc44, xenc105 )
n533 = nand( n536, xenc79 )
n562 = nand( add2_i[2], n563 )
n414 = nand( n546, n547 )
n446 = nand( xenc122, xenc52 )
result_o[0] = nand( xenc60, xenc112 )
xenc13 = nand( n426, n427 )
n476 = nand( n478, n479 )
n498 = nand( xenc74, xenc6 )
n528 = nand( xenc22, n531 )
n564 = nand( add1_i[1], xenc60 )
n566 = or( xenc24, add1_i[1] )
n513 = nand( n515, xenc64 )
n421 = nand( n556, xenc20 )
n427 = nand( add2_i[31], xenc48 )
n429 = nand( xenc38, n432 )
n461 = nand( n463, xenc19 )
n432 = nand( add2_i[30], xenc103 )
n436 = nand( add1_i[29], xenc69 )
n453 = nand( add1_i[26], n456 )
n455 = or( n456, add1_i[26] )
n464 = nand( add2_i[24], xenc34 )
n468 = nand( add1_i[23], n471 )
n470 = or( n471, add1_i[23] )
n473 = nand( add1_i[22], xenc62 )
n488 = nand( add1_i[19], n491 )
n505 = nand( add1_i[16], n508 )
n520 = nand( add1_i[13], n523 )
n525 = nand( add1_i[12], xenc108 )
n540 = nand( add1_i[9], xenc81 )
n543 = nand( add1_i[8], xenc31 )
n555 = nand( add1_i[4], n423 )
n561 = nand( add1_i[2], xenc30 )
n563 = or( xenc30, add1_i[2] )
n426 = nand( add1_i[31], n429 )
n428 = or( n429, add1_i[31] )
n431 = nand( add1_i[30], n434 )
n433 = or( n434, add1_i[30] )
n443 = nand( add1_i[28], n446 )
n445 = or( n446, add1_i[28] )
n448 = nand( add1_i[27], xenc33 )
n458 = nand( add1_i[25], xenc0 )
n460 = or( xenc0, add1_i[25] )
n463 = nand( add1_i[24], xenc59 )
n465 = or( xenc59, add1_i[24] )
n478 = nand( add1_i[21], xenc7 )
n483 = nand( add1_i[20], xenc115 )
n495 = nand( add1_i[18], xenc29 )
n500 = nand( add1_i[17], xenc16 )
n510 = nand( add1_i[15], xenc15 )
n515 = nand( add1_i[14], n518 )
n530 = nand( add1_i[11], xenc26 )
n535 = nand( add1_i[10], xenc8 )
n546 = nand( add1_i[7], xenc90 )
n549 = nand( add1_i[6], xenc83 )
n552 = nand( add1_i[5], n421 )
n558 = nand( add1_i[3], n425 )
n560 = or( n425, add1_i[3] )
n439 = nand( xenc109, n444 )
n444 = nand( add2_i[28], xenc27 )
n434 = nand( xenc88, n437 )
n456 = nand( xenc85, xenc67 )
n459 = nand( n460, add2_i[25] )
n451 = nand( n453, xenc4 )
n454 = nand( add2_i[26], xenc76 )
n471 = nand( xenc2, xenc118 )
n466 = nand( xenc53, xenc55 )
n469 = nand( n470, add2_i[23] )
n491 = nand( n495, xenc5 )
n486 = nand( n489, xenc3 )
n508 = nand( n510, xenc10 )
n503 = nand( n505, n506 )
n523 = nand( n525, n526 )
n518 = nand( xenc50, xenc66 )
n412 = nand( n544, n543 )
n538 = nand( n541, xenc104 )
n419 = nand( xenc100, xenc96 )
n417 = nand( n550, xenc93 )
n441 = nand( xenc23, xenc125 )
n565 = nand( xenc106, add2_i[1] )
xenc0 = xor( n461, keyinput0 )
result_o[11] = xnor( xenc1, keyinput1 )
xenc2 = xnor( n474, keyinput2 )
xenc3 = xnor( n488, keyinput3 )
xenc4 = xnor( n454, keyinput4 )
xenc5 = xnor( n496, keyinput5 )
xenc6 = xnor( n500, keyinput6 )
xenc7 = xor( n481, keyinput7 )
xenc8 = xnor( n538, keyinput8 )
result_o[9] = xor( xenc9, keyinput9 )
xenc10 = xor( n511, keyinput10 )
result_o[18] = xnor( xenc11, keyinput11 )
result_o[8] = xnor( xenc12, keyinput12 )
result_o[32] = xor( xenc13, keyinput13 )
result_o[2] = xnor( xenc14, keyinput14 )
xenc15 = xnor( n513, keyinput15 )
xenc16 = xor( n503, keyinput16 )
result_o[30] = xor( xenc17, keyinput17 )
xenc18 = xnor( n560, keyinput18 )
xenc19 = xnor( n464, keyinput19 )
xenc20 = xnor( n555, keyinput20 )
xenc21 = xor( n562, keyinput21 )
xenc22 = xnor( n530, keyinput22 )
xenc23 = xnor( n565, keyinput23 )
xenc24 = xor( n601, keyinput24 )
xenc25 = xnor( n625, keyinput25 )
xenc26 = xor( n533, keyinput26 )
xenc27 = xor( n445, keyinput27 )
xenc28 = xnor( n606, keyinput28 )
xenc29 = xnor( n498, keyinput29 )
xenc30 = xnor( n441, keyinput30 )
xenc31 = xor( n414, keyinput31 )
xenc32 = xor( n558, keyinput32 )
xenc33 = xor( n451, keyinput33 )
xenc34 = xor( n465, keyinput34 )
xenc35 = xor( n583, keyinput35 )
result_o[26] = xor( xenc36, keyinput36 )
xenc37 = xnor( n581, keyinput37 )
xenc38 = xnor( n431, keyinput38 )
xenc39 = xor( n619, keyinput39 )
result_o[24] = xor( xenc40, keyinput40 )
xenc41 = xor( n621, keyinput41 )
result_o[28] = xor( xenc42, keyinput42 )
xenc43 = xor( n603, keyinput43 )
xenc44 = xnor( n483, keyinput44 )
xenc45 = xor( n628, keyinput45 )
xenc46 = xor( n573, keyinput46 )
result_o[31] = xnor( xenc47, keyinput47 )
xenc48 = xnor( n428, keyinput48 )
result_o[7] = xnor( xenc49, keyinput49 )
xenc50 = xnor( n521, keyinput50 )
xenc51 = xnor( n596, keyinput51 )
xenc52 = xor( n448, keyinput52 )
xenc53 = xnor( n468, keyinput53 )
xenc54 = xnor( n593, keyinput54 )
xenc55 = xnor( n469, keyinput55 )
result_o[21] = xnor( xenc56, keyinput56 )
xenc57 = xnor( n614, keyinput57 )
xenc58 = xor( n457, keyinput58 )
xenc59 = xnor( n466, keyinput59 )
xenc60 = xnor( n579, keyinput60 )
xenc61 = xnor( n430, keyinput61 )
xenc62 = xnor( n476, keyinput62 )
xenc63 = xor( n608, keyinput63 )
xenc64 = xor( n516, keyinput64 )
xenc65 = xor( n586, keyinput65 )
xenc66 = xnor( n520, keyinput66 )
xenc67 = xnor( n459, keyinput67 )
result_o[14] = xor( xenc68, keyinput68 )
xenc69 = xor( n439, keyinput69 )
result_o[19] = xor( xenc70, keyinput70 )
xenc71 = xnor( n600, keyinput71 )
xenc72 = xnor( n452, keyinput72 )
xenc73 = xnor( n626, keyinput73 )
xenc74 = xnor( n501, keyinput74 )
xenc75 = xor( n539, keyinput75 )
xenc76 = xnor( n455, keyinput76 )
result_o[1] = xor( xenc77, keyinput77 )
xenc78 = xor( n616, keyinput78 )
xenc79 = xnor( n535, keyinput79 )
xenc80 = xor( n447, keyinput80 )
xenc81 = xor( n412, keyinput81 )
xenc82 = xor( n576, keyinput82 )
xenc83 = xor( n419, keyinput83 )
result_o[5] = xor( xenc84, keyinput84 )
xenc85 = xor( n458, keyinput85 )
xenc86 = xor( n534, keyinput86 )
xenc87 = xor( n493, keyinput87 )
xenc88 = xor( n436, keyinput88 )
xenc89 = xor( n442, keyinput89 )
xenc90 = xnor( n417, keyinput90 )
xenc91 = xnor( n627, keyinput91 )
result_o[4] = xor( xenc92, keyinput92 )
xenc93 = xnor( n549, keyinput93 )
xenc94 = xor( n584, keyinput94 )
result_o[6] = xnor( xenc95, keyinput95 )
xenc96 = xor( n552, keyinput96 )
result_o[13] = xnor( xenc97, keyinput97 )
xenc98 = xnor( n570, keyinput98 )
result_o[15] = xor( xenc99, keyinput99 )
xenc100 = xor( n553, keyinput100 )
xenc101 = xor( n571, keyinput101 )
xenc102 = xor( n487, keyinput102 )
xenc103 = xor( n433, keyinput103 )
xenc104 = xor( n540, keyinput104 )
xenc105 = xor( n484, keyinput105 )
xenc106 = xnor( n566, keyinput106 )
result_o[20] = xor( xenc107, keyinput107 )
xenc108 = xor( n528, keyinput108 )
xenc109 = xor( n443, keyinput109 )
xenc110 = xnor( n595, keyinput110 )
xenc111 = xnor( n509, keyinput111 )
xenc112 = xnor( n567, keyinput112 )
xenc113 = xor( n514, keyinput113 )
result_o[10] = xor( xenc114, keyinput114 )
xenc115 = xor( n486, keyinput115 )
xenc116 = xnor( n597, keyinput116 )
xenc117 = xor( n504, keyinput117 )
xenc118 = xor( n473, keyinput118 )
xenc119 = xnor( n415, keyinput119 )
xenc120 = xnor( n559, keyinput120 )
xenc121 = xor( n574, keyinput121 )
xenc122 = xnor( n449, keyinput122 )
result_o[25] = xor( xenc123, keyinput123 )
xenc124 = xor( n618, keyinput124 )
xenc125 = xor( n564, keyinput125 )
xenc126 = xor( n588, keyinput126 )
xenc127 = xnor( n529, keyinput127 )
