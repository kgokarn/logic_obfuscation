# BENCH FILE 
# circuit:equal_segmentation_adder16_netlist.v

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
result_o[9] = xor( add2_i[9], n28 )
result_o[8] = xor( add2_i[8], add1_i[8] )
result_o[7] = xor( n29, n30 )
n30 = xor( add2_i[7], add1_i[7] )
result_o[6] = xor( add2_i[6], n33 )
n33 = xor( n34, add1_i[6] )
result_o[5] = xor( add2_i[5], n37 )
result_o[4] = xor( add2_i[4], add1_i[4] )
result_o[3] = xor( n39, n40 )
n40 = xor( add2_i[3], add1_i[3] )
result_o[2] = xor( add2_i[2], n43 )
n43 = xor( n44, add1_i[2] )
result_o[1] = xor( add2_i[1], n47 )
result_o[15] = xor( add2_i[15], n51 )
n51 = xor( n52, add1_i[15] )
result_o[14] = xor( add2_i[14], n55 )
n55 = xor( n56, add1_i[14] )
result_o[13] = xor( add2_i[13], n59 )
result_o[12] = xor( add2_i[12], add1_i[12] )
result_o[11] = xor( n61, n62 )
n62 = xor( add2_i[11], add1_i[11] )
result_o[10] = xor( add2_i[10], n65 )
n65 = xor( n66, add1_i[10] )
result_o[0] = xor( add2_i[0], add1_i[0] )
n59 = xnor( n60, add1_i[13] )
n60 = nand( add2_i[12], add1_i[12] )
n47 = xnor( n48, add1_i[1] )
n48 = nand( add2_i[0], add1_i[0] )
n37 = xnor( n38, add1_i[5] )
n38 = nand( add2_i[4], add1_i[4] )
n28 = xnor( n69, add1_i[9] )
n69 = nand( add2_i[8], add1_i[8] )
n39 = nand( n41, n42 )
n41 = nand( add1_i[2], n44 )
n29 = nand( n31, n32 )
n31 = nand( add1_i[6], n34 )
n61 = nand( n63, n64 )
n63 = nand( add1_i[10], n66 )
n52 = nand( n53, n54 )
n53 = nand( add1_i[14], n56 )
n54 = nand( add2_i[14], n55 )
n42 = nand( add2_i[2], n43 )
n32 = nand( add2_i[6], n33 )
n64 = nand( add2_i[10], n65 )
n56 = nand( n57, n58 )
n58 = nand( add1_i[13], add1_i[12], add2_i[12] )
n57 = nand( add2_i[13], n59 )
n44 = nand( n45, n46 )
n46 = nand( add1_i[1], add1_i[0], add2_i[0] )
n45 = nand( add2_i[1], n47 )
n34 = nand( n35, n36 )
n36 = nand( add1_i[5], add1_i[4], add2_i[4] )
n35 = nand( add2_i[5], n37 )
n66 = nand( n67, n68 )
n68 = nand( add2_i[8], add1_i[8], add1_i[9] )
n67 = nand( add2_i[9], n28 )
result_o[16] = nand( n49, n50 )
n49 = nand( add1_i[15], n52 )
n50 = nand( add2_i[15], n51 )
