# BENCH FILE 
# circuit:carry_lookahead_adder32_netlist.v

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add1_i[16])
INPUT(add1_i[17])
INPUT(add1_i[18])
INPUT(add1_i[19])
INPUT(add1_i[20])
INPUT(add1_i[21])
INPUT(add1_i[22])
INPUT(add1_i[23])
INPUT(add1_i[24])
INPUT(add1_i[25])
INPUT(add1_i[26])
INPUT(add1_i[27])
INPUT(add1_i[28])
INPUT(add1_i[29])
INPUT(add1_i[30])
INPUT(add1_i[31])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(add2_i[16])
INPUT(add2_i[17])
INPUT(add2_i[18])
INPUT(add2_i[19])
INPUT(add2_i[20])
INPUT(add2_i[21])
INPUT(add2_i[22])
INPUT(add2_i[23])
INPUT(add2_i[24])
INPUT(add2_i[25])
INPUT(add2_i[26])
INPUT(add2_i[27])
INPUT(add2_i[28])
INPUT(add2_i[29])
INPUT(add2_i[30])
INPUT(add2_i[31])
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
OUTPUT(result_o[17])
OUTPUT(result_o[18])
OUTPUT(result_o[19])
OUTPUT(result_o[20])
OUTPUT(result_o[21])
OUTPUT(result_o[22])
OUTPUT(result_o[23])
OUTPUT(result_o[24])
OUTPUT(result_o[25])
OUTPUT(result_o[26])
OUTPUT(result_o[27])
OUTPUT(result_o[28])
OUTPUT(result_o[29])
OUTPUT(result_o[30])
OUTPUT(result_o[31])
OUTPUT(result_o[32])
result_o[8] = xor( n659, n660 )
n660 = xor( add2_i[8], add1_i[8] )
result_o[6] = xor( n663, n664 )
n664 = xor( add2_i[6], add1_i[6] )
result_o[5] = xor( n665, n666 )
n666 = xor( add2_i[5], add1_i[5] )
result_o[3] = xor( n668, n669 )
n669 = xor( add2_i[3], add1_i[3] )
result_o[30] = xor( n678, n679 )
n679 = xor( add2_i[30], add1_i[30] )
result_o[2] = xor( n684, n685 )
n685 = xor( add2_i[2], add1_i[2] )
result_o[28] = xor( n690, n691 )
n691 = xor( add2_i[28], add1_i[28] )
result_o[26] = xor( n700, n701 )
n701 = xor( add2_i[26], add1_i[26] )
result_o[24] = xor( n872, n711 )
n711 = xor( add2_i[24], add1_i[24] )
result_o[22] = xor( n720, n721 )
n721 = xor( add2_i[22], add1_i[22] )
result_o[20] = xor( n730, n731 )
n731 = xor( add2_i[20], add1_i[20] )
result_o[1] = xor( n736, n737 )
n737 = xor( add2_i[1], add1_i[1] )
result_o[18] = xor( n742, n743 )
n743 = xor( add2_i[18], add1_i[18] )
result_o[16] = xor( n752, n753 )
n753 = xor( add2_i[16], add1_i[16] )
result_o[14] = xor( n762, n763 )
n763 = xor( add2_i[14], add1_i[14] )
result_o[12] = xor( n772, n773 )
n773 = xor( add2_i[12], add1_i[12] )
result_o[10] = xor( n782, n783 )
n783 = xor( add2_i[10], add1_i[10] )
n736 = or( add2_i[0], add1_i[0] )
n830 = not( add2_i[8] )
n826 = not( add2_i[12] )
n832 = not( add2_i[16] )
n828 = not( add2_i[9] )
n836 = not( add2_i[11] )
n838 = not( add2_i[17] )
n834 = not( add2_i[18] )
n665 = nand( n814, n815 )
n814 = nand( add1_i[4], n803 )
n815 = nand( add2_i[4], n802 )
n816 = or( add2_i[0], add1_i[1] )
n817 = or( n827, n826 )
n889 = and( n817, n818 )
n818 = and( n819, n769 )
n819 = not( add1_i[13] )
n820 = or( n833, n832 )
n839 = and( n820, n821 )
n821 = and( n822, n749 )
n822 = not( add1_i[17] )
n823 = or( n831, n830 )
n829 = and( n823, n824 )
n824 = and( n825, n787 )
n825 = not( add1_i[9] )
n770 = or( n826, n827 )
n827 = nor( n772, add1_i[12] )
n785 = or( n829, n828 )
n864 = not( add2_i[10] )
n788 = or( n830, n831 )
n831 = nor( n659, add1_i[8] )
n750 = or( n832, n833 )
n833 = nor( n752, add1_i[16] )
n740 = or( n834, n835 )
n835 = nor( n742, add1_i[18] )
n888 = not( add2_i[13] )
n890 = not( add2_i[15] )
n875 = not( add2_i[25] )
n775 = or( n836, n837 )
n837 = nor( n777, add1_i[11] )
n745 = or( n838, n839 )
result_o[31] = xor( n840, n673 )
n840 = xor( add1_i[31], add2_i[31] )
result_o[27] = xor( n841, n695 )
n841 = xor( add1_i[27], add2_i[27] )
result_o[29] = xor( n842, n683 )
n842 = xor( add1_i[29], add2_i[29] )
result_o[23] = xor( n843, n715 )
n843 = xor( add1_i[23], add2_i[23] )
result_o[25] = xor( n844, n705 )
n844 = xor( add1_i[25], add2_i[25] )
n655 = not( add1_i[4] )
n845 = nor( n846, n847 )
n846 = and( add1_i[5], n802, add2_i[4] )
n847 = and( add1_i[5], n803, add1_i[4] )
n729 = or( n730, add1_i[20] )
n799 = or( n665, add1_i[5] )
n876 = nor( n848, n849 )
n848 = and( n871, add2_i[24] )
n849 = nand( n861, n707 )
n891 = nor( n850, n851 )
n850 = and( n761, add2_i[14] )
n851 = nand( n860, n759 )
result_o[17] = xor( n852, n747 )
n852 = xor( add1_i[17], add2_i[17] )
result_o[19] = xor( n853, n735 )
n853 = xor( add1_i[19], add2_i[19] )
result_o[15] = xor( n854, n757 )
n854 = xor( add1_i[15], add2_i[15] )
n726 = xnor( add1_i[21], add2_i[21] )
result_o[13] = xor( n855, n767 )
n855 = xor( add1_i[13], add2_i[13] )
result_o[9] = xor( n856, n658 )
n856 = xor( add1_i[9], add2_i[9] )
result_o[11] = xor( n857, n777 )
n857 = xor( add1_i[11], add2_i[11] )
result_o[7] = xor( n858, n662 )
n858 = xor( add1_i[7], add2_i[7] )
result_o[4] = xor( n656, n859 )
n859 = xor( add2_i[4], n655 )
n860 = not( add1_i[15] )
n861 = not( add1_i[25] )
n714 = nand( n717, n862 )
n862 = and( n718, n863 )
n863 = not( add1_i[23] )
n780 = or( n865, n864 )
n865 = nor( n782, add1_i[10] )
n866 = nand( n714, n869 )
n707 = and( n866, n867 )
n867 = or( n868, n712 )
n868 = not( add1_i[24] )
n869 = and( add2_i[23], add1_i[24] )
n870 = nand( add2_i[23], n714 )
n708 = nand( n871, add2_i[24] )
n871 = nand( n873, n874 )
n872 = nand( n712, n870 )
n873 = nand( n714, add2_i[23] )
n874 = and( n868, n712 )
n703 = or( n876, n875 )
n877 = nand( n729, n880 )
n722 = and( n877, n878 )
n878 = or( n879, n727 )
n879 = not( add1_i[21] )
n880 = and( add2_i[20], add1_i[21] )
n881 = nand( n729, add2_i[20] )
n724 = nand( n881, n882 )
n882 = and( n879, n727 )
n725 = nand( n727, n728 )
n805 = nand( add2_i[3], n806 )
n792 = nand( n883, n793 )
n883 = and( n794, n884 )
n884 = not( add1_i[7] )
n662 = nand( n793, n794 )
n885 = nand( n799, add2_i[5] )
n795 = nand( n885, n886 )
n886 = and( n887, n845 )
n887 = not( add1_i[6] )
n813 = nand( add2_i[0], add1_i[0] )
n663 = nand( n798, n845 )
n676 = nand( add2_i[30], n677 )
n798 = nand( n799, add2_i[5] )
n688 = nand( add2_i[28], n689 )
n683 = nand( n687, n688 )
n747 = nand( n749, n750 )
n767 = nand( n769, n770 )
n765 = or( n888, n889 )
n755 = or( n890, n891 )
n811 = nand( add2_i[1], n812 )
n684 = nand( n810, n811 )
n658 = nand( n787, n788 )
n705 = nand( n707, n708 )
result_o[32] = nand( n670, n671 )
n695 = nand( n697, n698 )
n718 = nand( add2_i[22], n719 )
n727 = nand( add1_i[20], n730 )
n760 = nand( add2_i[14], n761 )
n769 = nand( add1_i[12], n772 )
n787 = nand( add1_i[8], n659 )
n794 = nand( add2_i[6], n795 )
n804 = nand( add1_i[3], n668 )
n806 = or( n668, add1_i[3] )
n807 = nand( add1_i[2], n684 )
n809 = or( n684, add1_i[2] )
n728 = nand( add2_i[20], n729 )
n671 = nand( add2_i[31], n672 )
n698 = nand( add2_i[26], n699 )
n700 = nand( n703, n702 )
n752 = nand( n755, n754 )
n668 = nand( n807, n808 )
n808 = nand( add2_i[2], n809 )
n730 = nand( n732, n733 )
n733 = nand( add2_i[19], n734 )
n772 = nand( n774, n775 )
n659 = nand( n790, n791 )
n791 = nand( n792, add2_i[7] )
n675 = nand( add1_i[30], n678 )
n677 = or( n678, add1_i[30] )
n687 = nand( add1_i[28], n690 )
n689 = or( n690, add1_i[28] )
n717 = nand( add1_i[22], n720 )
n719 = or( n720, add1_i[22] )
n739 = nand( add1_i[18], n742 )
n759 = nand( add1_i[14], n762 )
n761 = or( n762, add1_i[14] )
n779 = nand( add1_i[10], n782 )
n673 = nand( n675, n676 )
n715 = nand( n717, n718 )
n735 = nand( n739, n740 )
n757 = nand( n759, n760 )
n777 = nand( n780, n779 )
n802 = nand( n656, n655 )
n678 = nand( n680, n681 )
n681 = nand( add2_i[29], n682 )
n690 = nand( n692, n693 )
n693 = nand( add2_i[27], n694 )
n720 = nand( n722, n723 )
n723 = nand( n724, add2_i[21] )
n742 = nand( n744, n745 )
n762 = nand( n764, n765 )
n782 = nand( n784, n785 )
n803 = nand( n805, n804 )
result_o[0] = nand( n736, n813 )
result_o[21] = xnor( n726, n725 )
n670 = nand( add1_i[31], n673 )
n672 = or( n673, add1_i[31] )
n680 = nand( add1_i[29], n683 )
n682 = or( n683, add1_i[29] )
n692 = nand( add1_i[27], n695 )
n694 = or( n695, add1_i[27] )
n697 = nand( add1_i[26], n700 )
n699 = or( n700, add1_i[26] )
n702 = nand( add1_i[25], n705 )
n712 = nand( add1_i[23], n715 )
n732 = nand( add1_i[19], n735 )
n734 = or( n735, add1_i[19] )
n744 = nand( add1_i[17], n747 )
n749 = nand( add1_i[16], n752 )
n754 = nand( add1_i[15], n757 )
n764 = nand( add1_i[13], n767 )
n774 = nand( add1_i[11], n777 )
n784 = nand( add1_i[9], n658 )
n790 = nand( add1_i[7], n662 )
n793 = nand( add1_i[6], n663 )
n656 = not( n803 )
n810 = nand( add1_i[1], n736 )
n812 = or( n816, add1_i[0] )
