# BENCH FILE 
# circuit:equal_segmentation_adder32_netlist.v

INPUT(add1_i[0])
INPUT(add1_i[1])
INPUT(add1_i[2])
INPUT(add1_i[3])
INPUT(add1_i[4])
INPUT(add1_i[5])
INPUT(add1_i[6])
INPUT(add1_i[7])
INPUT(add1_i[8])
INPUT(add1_i[9])
INPUT(add1_i[10])
INPUT(add1_i[11])
INPUT(add1_i[12])
INPUT(add1_i[13])
INPUT(add1_i[14])
INPUT(add1_i[15])
INPUT(add1_i[16])
INPUT(add1_i[17])
INPUT(add1_i[18])
INPUT(add1_i[19])
INPUT(add1_i[20])
INPUT(add1_i[21])
INPUT(add1_i[22])
INPUT(add1_i[23])
INPUT(add1_i[24])
INPUT(add1_i[25])
INPUT(add1_i[26])
INPUT(add1_i[27])
INPUT(add1_i[28])
INPUT(add1_i[29])
INPUT(add1_i[30])
INPUT(add1_i[31])
INPUT(add2_i[0])
INPUT(add2_i[1])
INPUT(add2_i[2])
INPUT(add2_i[3])
INPUT(add2_i[4])
INPUT(add2_i[5])
INPUT(add2_i[6])
INPUT(add2_i[7])
INPUT(add2_i[8])
INPUT(add2_i[9])
INPUT(add2_i[10])
INPUT(add2_i[11])
INPUT(add2_i[12])
INPUT(add2_i[13])
INPUT(add2_i[14])
INPUT(add2_i[15])
INPUT(add2_i[16])
INPUT(add2_i[17])
INPUT(add2_i[18])
INPUT(add2_i[19])
INPUT(add2_i[20])
INPUT(add2_i[21])
INPUT(add2_i[22])
INPUT(add2_i[23])
INPUT(add2_i[24])
INPUT(add2_i[25])
INPUT(add2_i[26])
INPUT(add2_i[27])
INPUT(add2_i[28])
INPUT(add2_i[29])
INPUT(add2_i[30])
INPUT(add2_i[31])
OUTPUT(result_o[0])
OUTPUT(result_o[1])
OUTPUT(result_o[2])
OUTPUT(result_o[3])
OUTPUT(result_o[4])
OUTPUT(result_o[5])
OUTPUT(result_o[6])
OUTPUT(result_o[7])
OUTPUT(result_o[8])
OUTPUT(result_o[9])
OUTPUT(result_o[10])
OUTPUT(result_o[11])
OUTPUT(result_o[12])
OUTPUT(result_o[13])
OUTPUT(result_o[14])
OUTPUT(result_o[15])
OUTPUT(result_o[16])
OUTPUT(result_o[17])
OUTPUT(result_o[18])
OUTPUT(result_o[19])
OUTPUT(result_o[20])
OUTPUT(result_o[21])
OUTPUT(result_o[22])
OUTPUT(result_o[23])
OUTPUT(result_o[24])
OUTPUT(result_o[25])
OUTPUT(result_o[26])
OUTPUT(result_o[27])
OUTPUT(result_o[28])
OUTPUT(result_o[29])
OUTPUT(result_o[30])
OUTPUT(result_o[31])
OUTPUT(result_o[32])
result_o[9] = xor( add2_i[9], n76 )
result_o[8] = xor( add2_i[8], add1_i[8] )
result_o[7] = xor( n77, n78 )
n78 = xor( add2_i[7], add1_i[7] )
result_o[6] = xor( add2_i[6], n81 )
n81 = xor( n82, add1_i[6] )
result_o[5] = xor( add2_i[5], n85 )
n85 = xor( n86, add1_i[5] )
result_o[4] = xor( add2_i[4], n89 )
n89 = xor( n90, add1_i[4] )
result_o[3] = xor( add2_i[3], n93 )
n93 = xor( n94, add1_i[3] )
result_o[31] = xor( add2_i[31], n101 )
n101 = xor( n102, add1_i[31] )
result_o[30] = xor( add2_i[30], n105 )
n105 = xor( n106, add1_i[30] )
result_o[2] = xor( add2_i[2], n97 )
n97 = xor( n98, add1_i[2] )
result_o[29] = xor( add2_i[29], n109 )
n109 = xor( n110, add1_i[29] )
result_o[28] = xor( add2_i[28], n116 )
n116 = xor( n117, add1_i[28] )
result_o[27] = xor( add2_i[27], n120 )
n120 = xor( n121, add1_i[27] )
result_o[26] = xor( add2_i[26], n124 )
n124 = xor( n125, add1_i[26] )
result_o[25] = xor( add2_i[25], n128 )
result_o[24] = xor( add2_i[24], add1_i[24] )
result_o[23] = xor( n130, n131 )
n131 = xor( add2_i[23], add1_i[23] )
result_o[22] = xor( add2_i[22], n134 )
n134 = xor( n135, add1_i[22] )
result_o[21] = xor( add2_i[21], n138 )
n138 = xor( n139, add1_i[21] )
result_o[20] = xor( add2_i[20], n142 )
n142 = xor( n143, add1_i[20] )
result_o[1] = xor( add2_i[1], n113 )
result_o[19] = xor( add2_i[19], n146 )
n146 = xor( n147, add1_i[19] )
result_o[18] = xor( add2_i[18], n151 )
n151 = xor( n152, add1_i[18] )
result_o[17] = xor( add2_i[17], n155 )
result_o[16] = xor( add2_i[16], add1_i[16] )
result_o[15] = xor( n157, n158 )
n158 = xor( add2_i[15], add1_i[15] )
result_o[14] = xor( add2_i[14], n161 )
n161 = xor( n162, add1_i[14] )
result_o[13] = xor( add2_i[13], n165 )
n165 = xor( n166, add1_i[13] )
result_o[12] = xor( add2_i[12], n169 )
n169 = xor( n170, add1_i[12] )
result_o[11] = xor( add2_i[11], n173 )
n173 = xor( n174, add1_i[11] )
result_o[10] = xor( add2_i[10], n177 )
n177 = xor( n178, add1_i[10] )
result_o[0] = xor( add2_i[0], add1_i[0] )
n128 = xnor( n129, add1_i[25] )
n129 = nand( add2_i[24], add1_i[24] )
n113 = xnor( n148, add1_i[1] )
n148 = nand( add2_i[0], add1_i[0] )
n76 = xnor( n181, add1_i[9] )
n181 = nand( add2_i[8], add1_i[8] )
n155 = xnor( n156, add1_i[17] )
n156 = nand( add2_i[16], add1_i[16] )
n77 = nand( n79, n80 )
n79 = nand( add1_i[6], n82 )
n157 = nand( n159, n160 )
n159 = nand( add1_i[14], n162 )
n130 = nand( n132, n133 )
n132 = nand( add1_i[22], n135 )
n121 = nand( n122, n123 )
n122 = nand( add1_i[26], n125 )
n123 = nand( add2_i[26], n124 )
n94 = nand( n95, n96 )
n95 = nand( add1_i[2], n98 )
n96 = nand( add2_i[2], n97 )
n174 = nand( n175, n176 )
n175 = nand( add1_i[10], n178 )
n176 = nand( add2_i[10], n177 )
n147 = nand( n149, n150 )
n149 = nand( add1_i[18], n152 )
n150 = nand( add2_i[18], n151 )
n117 = nand( n118, n119 )
n118 = nand( add1_i[27], n121 )
n119 = nand( add2_i[27], n120 )
n90 = nand( n91, n92 )
n91 = nand( add1_i[3], n94 )
n92 = nand( add2_i[3], n93 )
n170 = nand( n171, n172 )
n171 = nand( add1_i[11], n174 )
n172 = nand( add2_i[11], n173 )
n143 = nand( n144, n145 )
n144 = nand( add1_i[19], n147 )
n145 = nand( add2_i[19], n146 )
n102 = nand( n103, n104 )
n103 = nand( add1_i[30], n106 )
n104 = nand( add2_i[30], n105 )
n110 = nand( n114, n115 )
n114 = nand( add1_i[28], n117 )
n115 = nand( add2_i[28], n116 )
n86 = nand( n87, n88 )
n87 = nand( add1_i[4], n90 )
n88 = nand( add2_i[4], n89 )
n166 = nand( n167, n168 )
n167 = nand( add1_i[12], n170 )
n168 = nand( add2_i[12], n169 )
n139 = nand( n140, n141 )
n140 = nand( add1_i[20], n143 )
n141 = nand( add2_i[20], n142 )
n106 = nand( n107, n108 )
n107 = nand( add1_i[29], n110 )
n108 = nand( add2_i[29], n109 )
n82 = nand( n83, n84 )
n83 = nand( add1_i[5], n86 )
n84 = nand( add2_i[5], n85 )
n162 = nand( n163, n164 )
n163 = nand( add1_i[13], n166 )
n164 = nand( add2_i[13], n165 )
n135 = nand( n136, n137 )
n136 = nand( add1_i[21], n139 )
n137 = nand( add2_i[21], n138 )
n80 = nand( add2_i[6], n81 )
n160 = nand( add2_i[14], n161 )
n133 = nand( add2_i[22], n134 )
n125 = nand( n126, n127 )
n127 = nand( add1_i[25], add1_i[24], add2_i[24] )
n126 = nand( add2_i[25], n128 )
n98 = nand( n111, n112 )
n112 = nand( add1_i[1], add1_i[0], add2_i[0] )
n111 = nand( add2_i[1], n113 )
n178 = nand( n179, n180 )
n180 = nand( add2_i[8], add1_i[8], add1_i[9] )
n179 = nand( add2_i[9], n76 )
n152 = nand( n153, n154 )
n154 = nand( add1_i[17], add1_i[16], add2_i[16] )
n153 = nand( add2_i[17], n155 )
result_o[32] = nand( n99, n100 )
n99 = nand( add1_i[31], n102 )
n100 = nand( add2_i[31], n101 )
